{
  "name": "Descanso",
  "type": "script",
  "author": "zypc4ueMMbKFzteu",
  "img": "icons/svg/regen.svg",
  "scope": "global",
  "command": "// Obs: isso não leva em conta habilidades (ex: Osteon, Golem e a origem Refugiado).\n//Selecione os tokens que devem descansar e use a macro.\n(async () => {\n  if (!token) {\n    ui.notifications.warn(\"Nenhum personagem selecionado!\");\n    return;\n  }\n  \n  async function descanso(modificador, modPV, modPM, curaCP=0, curaAC=0){\n    let msg = [];\n    \n    for (let e of canvas.tokens.controlled) {\n        if( !e.actor ) continue;\n        let m = await e.actor.descanso(modificador, modPV, modPM, curaCP, curaAC, false);\n        msg.push(m);\n    }\n    let descricao = '';\n    const condicao = [\"Ruim\", \"Normal\", \"Confortável\", \"Luxuoso\"];\n    let c = condicao[Math.floor(modificador)];\n    descricao += `<span>Condição ${c}: ${modificador}/nivel</span><br>`;\n    if(modPV){\n        descricao += `<span>Extra PV: ${modPV}/nivel</span><br>`;\n    }\n    if(modPM){\n        descricao += `<span>Extra PM: ${modPM}/nivel</span><br>`;\n    }\n    if(curaCP){\n        descricao += `<span>Cuidados Rolongados (+1 PV/Nível)</span><br>`;\n    }\n\tif(curaAC){\n        descricao += `<span>Acompanhamento Médico (+1 PV/Nível)</span><br>`;\n    }\n    descricao += \"<p>\" + msg.join('<br>') + \"</p>\";\n    let content = {\n\t\titem: {\n\t\t\tname: \"Descanso\",\n\t\t\timg: \"icons/svg/regen.svg\"\n\t\t},\n\t\tsystem: {\n\t\t\tdescription: {\n\t\t\t\tvalue: descricao\n\t\t\t}\n\t\t}\n\t}\n\tlet template = \"systems/tormenta20/templates/chat/chat-card.html\";\n\tconst html = await renderTemplate(template, content);\n\tconst chatData = {\n\t\tuser: game.user.id,\n\t\ttype: CONST.CHAT_MESSAGE_TYPES.OTHER,\n\t\tcontent: html\n\t};\n\tChatMessage.create(chatData);\n  }\n\n  let content = `<form>\n    <div class=\"form-group\">\n        <label>Qualidade</label> <select name='qualidade'>\n            <option value=0.5>Ruim</option>\n            <option value=1 selected>Normal</option>\n            <option value=2 >Confortável</option>\n            <option value=3>Luxuoso</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>PV Extra / Por Nível</label>\n        <input type='number' name='modPV' value='0'>\n    </div>\n    <div class=\"form-group\">\n        <label>PM Extra / Por Nível</label>\n        <input type='number' name='modPM' value='0'>\n    </div>\n    <div class=\"form-group\">\n        <label>Cuidados Prolongados</label>\n        <input type='checkbox' name='curaCP' value=1>\n    </div>\n\t<div class=\"form-group\">\n        <label>Acompanhamento Médico</label>\n        <input type='checkbox' name='curaAC' value=1>\n    </div>\n    </form>`;\n      \n    let dialogEditor = new Dialog({\n    title: `Descanso`,\n    content,\n    buttons: {\n      ok: {\n        label: `OK`,\n        callback: (html) => {\n          const modQ = parseFloat(html.find(\"[name=qualidade]\")[0].value);\n          const modPV = parseInt(html.find(\"[name=modPV]\")[0].value);\n          const modPM = parseInt(html.find(\"[name=modPM]\")[0].value);\n          const curaCP = html.find(\"[name=curaCP]\")[0].checked;\n\t\t  const curaAC = html.find(\"[name=curaAC]\")[0].checked;\n          descanso(modQ, modPV, modPM, curaCP, curaAC);\n          \n        }\n      }\n    },\n    default: \"\",\n    close: () => {}\n    });\n\n    dialogEditor.render(true);\n})();",
  "flags": {
    "core": {
      "sourceId": "Macro.jNwovWaSbfSnEssn"
    }
  },
  "ownership": {
    "default": 0,
    "0bS8PF9mUpBd2z0H": 3,
    "zypc4ueMMbKFzteu": 3
  },
  "_stats": {
    "systemId": "tormenta20",
    "systemVersion": "1.4.1002",
    "coreVersion": "10.288",
    "createdTime": 1662828137298,
    "modifiedTime": 1666924889308,
    "lastModifiedBy": "tIn9sSkrT3mDWirx"
  },
  "folder": null,
  "sort": 0,
  "_id": "vjfz3LM1yhNhLo0o",
  "_key": "!macros!vjfz3LM1yhNhLo0o"
}
