{"version":3,"file":"module.js","sources":["../../src/scripts/KHelpers.js","../../src/scripts/TheatreActor.js","../../src/scripts/constants/constants.js","../../src/scripts/lib/Logger.js","../../src/scripts/TheatreActorConfig.js","../../src/scripts/settings.js","../../src/scripts/socket.js","../../src/scripts/theatre-helpers.js","../../src/scripts/Theatre.js","../../src/scripts/API/api.js","../../src/module.js"],"sourcesContent":["/**\n * ============================================================\n * KHelpers Module\n *\n * Encapsulates a few handy helpers\n * ============================================================\n */\nconst KHelpers = {\n  hasClass(el, className) {\n    return el.classList ? el.classList.contains(className) : new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\n  },\n\n  addClass(el, className) {\n    if (el.classList) el.classList.add(className);\n    else if (!KHelpers.hasClass(el, className)) el.className += \" \" + className;\n  },\n\n  removeClass(el, className) {\n    if (el.classList) el.classList.remove(className);\n    else el.className = el.className.replace(new RegExp(\"\\\\b\" + className + \"\\\\b\", \"g\"), \"\");\n  },\n\n  offset(el) {\n    var rect = el.getBoundingClientRect(),\n      scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n      scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n  },\n\n  style(el) {\n    return el.currentStyle || window.getComputedStyle(el);\n  },\n\n  insertAfter(el, referenceNode) {\n    referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n  },\n\n  insertBefore(el, referenceNode) {\n    referenceNode.parentNode.insertBefore(el, referenceNode);\n  },\n\n  /**\n   * Helper to grab a parent class via CSS ClassName\n   *\n   * @param elem (HTMLElement) : the element to start from.\n   * @param cls (String) : The class name to search for.\n   * @param depth (Number) : The maximum height/depth to look up.\n   * @returns (HTMLElement) : the parent class if found, or null if\n   *                          no such parent exists within the specified\n   *                          depth.\n   */\n  seekParentClass(elem, cls, depth) {\n    depth = depth || 5;\n    let el = elem;\n    let targ = null;\n    for (let i = 0; i < depth; ++i) {\n      if (!el) break;\n      if (KHelpers.hasClass(el, cls)) {\n        targ = el;\n        break;\n      } else el = el.parentNode;\n    }\n    return targ;\n  },\n};\n\nexport default KHelpers;\n","export class TheatreActor {\n  constructor(actor, navElement) {\n    this.actor = actor;\n    this.navElement = navElement;\n  }\n}\n","const CONSTANTS = {\n  MODULE_ID: \"theatre\",\n  PATH: `modules/theatre/`,\n  PREFIX_I18N: `Theatre`,\n  FLAGS: {},\n  API: {\n    EVENT_TYPE: {\n      sceneevent: \"sceneevent\",\n      typingevent: \"typingevent\",\n      resyncevent: \"resyncevent\",\n      reqresync: \"reqresync\",\n    },\n  },\n  SOCKET: \"module.theatre\",\n  NARRATOR: \"Narrator\",\n  ICONLIB: \"modules/theatre/assets/graphics/emotes\",\n  DEFAULT_PORTRAIT: \"icons/mystery-man.png\",\n  PREFIX_ACTOR_ID: \"theatre-\",\n};\n\nCONSTANTS.PATH = `modules/${CONSTANTS.MODULE_ID}/`;\n\nexport default CONSTANTS;\n","import CONSTANTS from \"../constants/constants\";\n\n// ================================\n// Logger utility\n// ================================\nexport default class Logger {\n  static get DEBUG() {\n    return (\n      game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n      game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n    );\n  }\n  // export let debugEnabled = 0;\n  // 0 = none, warnings = 1, debug = 2, all = 3\n\n  static debug(msg, ...args) {\n    try {\n      if (\n        game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n        game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n      ) {\n        console.log(`DEBUG | ${CONSTANTS.MODULE_ID} | ${msg}`, ...args);\n      }\n    } catch (e) {\n      console.error(e.message);\n    }\n    return msg;\n  }\n\n  static logObject(...args) {\n    return this.log(\"\", args);\n  }\n\n  static log(message, ...args) {\n    try {\n      message = `${CONSTANTS.MODULE_ID} | ${message}`;\n      console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return message;\n  }\n\n  static notify(message, ...args) {\n    try {\n      message = `${CONSTANTS.MODULE_ID} | ${message}`;\n      ui.notifications?.notify(message);\n      console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return message;\n  }\n\n  static info(info, notify = false, ...args) {\n    try {\n      info = `${CONSTANTS.MODULE_ID} | ${info}`;\n      if (notify) {\n        ui.notifications?.info(info);\n      }\n      console.log(info.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return info;\n  }\n\n  static warn(warning, notify = false, ...args) {\n    try {\n      warning = `${CONSTANTS.MODULE_ID} | ${warning}`;\n      if (notify) {\n        ui.notifications?.warn(warning);\n      }\n      console.warn(warning.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return warning;\n  }\n\n  static errorObject(...args) {\n    return this.error(\"\", false, args);\n  }\n\n  static error(error, notify = true, ...args) {\n    try {\n      error = `${CONSTANTS.MODULE_ID} | ${error}`;\n      if (notify) {\n        ui.notifications?.error(error);\n      }\n      console.error(error.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return new Error(error.replace(\"<br>\", \"\\n\"));\n  }\n\n  static timelog(message) {\n    this.warn(Date.now(), message);\n  }\n\n  static i18n = (key) => {\n    return game.i18n.localize(key)?.trim();\n  };\n\n  static i18nFormat = (key, data = {}) => {\n    return game.i18n.format(key, data)?.trim();\n  };\n\n  // setDebugLevel = (debugText): void => {\n  //   debugEnabled = { none: 0, warn: 1, debug: 2, all: 3 }[debugText] || 0;\n  //   // 0 = none, warnings = 1, debug = 2, all = 3\n  //   if (debugEnabled >= 3) CONFIG.debug.hooks = true;\n  // };\n\n  static dialogWarning(message, icon = \"fas fa-exclamation-triangle\") {\n    return `<p class=\"${CONSTANTS.MODULE_ID}-dialog\">\n        <i style=\"font-size:3rem;\" class=\"${icon}\"></i><br><br>\n        <strong style=\"font-size:1.2rem;\">${CONSTANTS.MODULE_ID}</strong>\n        <br><br>${message}\n    </p>`;\n  }\n}\n","/**\n * TheatreActorConfig.js\n *\n * Copyright (c) 2019 - 2020 Ken L.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n */\n\nimport KHelpers from \"./KHelpers.js\";\nimport { Theatre } from \"./Theatre.js\";\nimport CONSTANTS from \"./constants/constants.js\";\nimport Logger from \"./lib/Logger.js\";\n\n/**\n * ============================================================\n * Application to configure Actor Theatre-Inserts\n *\n *\n *\n *\n *\n * ============================================================\n */\nexport class TheatreActorConfig extends FormApplication {\n    constructor(object = {}, options = {}) {\n        if (object._theatre_mod_configTab) {\n            options.tabs = [\n                {\n                    navSelector: \".tabs\",\n                    contentSelector: \".theatre-config-contents\",\n                    initial: object._theatre_mod_configTab,\n                },\n            ];\n            if (object._theatre_mod_configTab === \"emotes\") {\n                options.height = 775;\n            }\n        }\n        super(object, options);\n    }\n\n    /**\n     * Default options for TheatreActorConfig\n     */\n    static get defaultOptions() {\n        const options = super.defaultOptions;\n        options.id = \"theatre-config\";\n        options.template = \"modules/theatre/templates/theatre_actor_config.html\";\n        options.width = 500;\n        options.height = 270;\n        options.tabs = [{ navSelector: \".tabs\", contentSelector: \".theatre-config-contents\", initial: \"main\" }];\n        return options;\n    }\n\n    /**\n     * Add the Entity name into the window title\n     */\n    get title() {\n        return `${this.object.name}: ${game.i18n.localize(\"Theatre.UI.Config.ConfigureTheatre\")}`;\n    }\n\n    /**\n     * Construct and return the data object used to render the HTML template for this form application.\n     *\n     * @return (Object) : The Object to be used in handlebars compile\n     */\n    getData() {\n        const entityName = this.object.name;\n        return {\n            entityName: entityName,\n            isGM: game.user.isGM,\n            object: foundry.utils.duplicate(this.object),\n            emote: Theatre.getActorEmotes(this.object._id),\n            options: this.options,\n        };\n    }\n\n    /**\n     * Activate the default set of listeners for the Actor Sheet\n     * These listeners handle basic stuff like form submission or updating images\n     *\n     * @param html (JQuery) The rendered template ready to have listeners attached\n     */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        let btnAdd = html[0].getElementsByClassName(\"theatre-config-btn-add-emote\")[0];\n        if (btnAdd) btnAdd.addEventListener(\"click\", this._onAddEmoteLine.bind(this));\n\n        let btnsEmoteConfig = html[0].getElementsByClassName(\"theatre-config-btn-edit-emote\");\n        for (let btn of btnsEmoteConfig) btn.addEventListener(\"click\", this._onEditEmoteLine.bind(this));\n\n        // Support custom icon updates\n        let iconsCustom = html[0].getElementsByClassName(\"customicon\");\n        for (let icon of iconsCustom) icon.addEventListener(\"click\", this._onCustomIconImage.bind(this));\n\n        // Support custom label updates\n        let labelsCustom = html[0].getElementsByClassName(\"customlabel\");\n        for (let label of labelsCustom) this._setupCustomLabelEvents(label);\n    }\n\n    /** @override */\n    _onChangeTab(event, tabs, active) {\n        this.object._theatre_mod_configTab = active;\n        // Auto change height\n        const tab = this.element.find(`.tab[data-tab=\"${active}\"]`)[0];\n        this.setPosition({ height: (tab && tab.offsetHeight + 125) || \"auto\" });\n    }\n\n    /**\n     * Verify the form data just prior to submission\n     *\n     * @param formData (Object) : The object form data to be verified\n     *\n     * @return Object : an object containing the revised formData to be updated\n     *                   as well as a set of data which only contains the updated\n     *                   emotes (excluding other theatre updates)\n     */\n    _verifyCustomEmotes(formData) {\n        // find the formdata elements that contain \"custom#\" in their chain\n        // once we find these objects, verify that there's a boolean attribute\n        // specifying that it is a customEmote\n        // next we need to verify that the name property is set, if not, we set\n        // it to the prop key.\n        // If any of this is missing in bot the form data AND the object data,\n        // then we add it to the form submission\n        for (let k in formData)\n            if (formData[k] && /emotes\\.custom\\d+/.test(k)) {\n                let mch = k.match(/flags\\.theatre\\.emotes\\.custom\\d+/)[0];\n                let name = mch.match(/custom\\d+/)[0];\n                let labelPath = mch + \".label\";\n                let cflagPath = mch + \".custom\";\n                let namePath = mch + \".name\";\n                Logger.debug(\"found %s\", k, mch, cflagPath, namePath);\n                // if label is both the formData as well as the object, reject the submission\n                let emoteProp = foundry.utils.getProperty(this.object, mch);\n                let labelProp = null;\n                if (emoteProp) labelProp = foundry.utils.getProperty(this.object, labelPath);\n\n                if ((!labelProp || labelProp == \"\") && (!formData[labelPath] || formData[labelPath] == \"\")) {\n                    Logger.error(\"ERROR: No label for custom emote defined!\", true);\n                    Logger.error(game.i18n.localize(\"Theatre.UI.Notification.BadCustomEmote\"), true);\n                    return false;\n                }\n\n                if (!emoteProp || !foundry.utils.getProperty(this.object, cflagPath)) formData[cflagPath] = true;\n                if (!emoteProp || !foundry.utils.getProperty(this.object, namePath)) formData[namePath] = name;\n            }\n\n        // collect emote form updates + revised form updates\n        let configElement = this.element[0];\n        let toDelete = configElement.querySelectorAll('.theatre-config-form-group[todelete=\"true\"]');\n        let emoteFormData = {};\n        let revisedFormData = {};\n        for (let k in formData) {\n            let rem = false;\n            let isCustom = /custom\\d+/.test(k);\n            let isEmote = /flags\\.theatre\\.emotes\\./.test(k);\n            if (formData[k] && isCustom) {\n                let mch = k.match(/custom\\d+/)[0];\n                for (let d of toDelete)\n                    if (d.getAttribute(\"name\") == mch) {\n                        rem = true;\n                        break; // don't add it to our new object\n                    }\n            }\n            if (!rem && isEmote) emoteFormData[k] = formData[k];\n            else if (!rem && !isEmote) revisedFormData[k] = formData[k];\n        }\n        // null out the entries if deleted in emote form, revised simply does not have any updates\n        // to deleted entries\n        for (let elem of toDelete) {\n            let name = elem.getAttribute(\"name\");\n            emoteFormData[`flags.theatre.emotes.${name}`] = null;\n        }\n\n        return { emoteFormData: emoteFormData, revisedFormData: revisedFormData };\n    }\n\n    /**\n     * Given the formdata, check the levels in the given html element that have data-edit\n     * and add their values to the formData update\n     *\n     * @param formData (Object) : An object representing the formData that will be used to update the Entity.\n     *\n     * @return Object : An object represeting the formData, but updated with new entries to be updated.\n     */\n    _processUpdateLabels(formData) {\n        let html = this.element[0];\n\n        let dataLabels = html.querySelectorAll(\"label[data-edit]\");\n        for (let label of dataLabels) {\n            let target = label.getAttribute(\"data-edit\");\n            formData[target] = label.textContent;\n        }\n        return formData;\n    }\n\n    /**\n     * Implement the _updateObject method as required by the parent class spec\n     * This defines how to update the subject of the form when the form is submitted\n     *\n     * @param event (Object) : event that triggered this update ?\n     * @param formData (Object) : An object representing the formData that will be used to update the Entity.\n     *\n     * @private\n     */\n    async _updateObject(event, formData) {\n        formData[\"_id\"] = this.object._id;\n\n        // if our baseinsert value was updated..\n        Logger.debug(formData);\n        let insertDirty = false;\n        let baseInsert = formData[\"flags.theatre.baseinsert\"];\n        let optAlign = formData[\"flags.theatre.optalign\"];\n        let name = formData[\"flags.theatre.name\"];\n        let newBaseInsert =\n            this.object.flags.theatre.baseinsert || (this.object.img ? this.object.img : CONSTANTS.DEFAULT_PORTRAIT);\n        let newName = this.object.flags.theatre.name || this.object.name;\n        let newAlign = this.object.flags.theatre.optalign || \"top\";\n\n        // update Navbar of the corresponding ID\n        let theatreId = `theatre-${this.object._id}`;\n        let navItem = Theatre.instance.getNavItemById(theatreId);\n        let cImg = Theatre.instance.getTheatreCoverPortrait();\n\n        if (baseInsert !== this.object.flags.theatre.baseinsert) {\n            Logger.debug(\"baseinsert changed!\");\n            insertDirty = true;\n            newBaseInsert =\n                baseInsert === \"\" ? (this.object.img ? this.object.img : CONSTANTS.DEFAULT_PORTRAIT) : baseInsert;\n            if (navItem) {\n                navItem.setAttribute(\"src\", newBaseInsert);\n                cImg.setAttribute(\"src\", newBaseInsert);\n            }\n        }\n        if (optAlign !== this.object.flags.theatre.optalign) {\n            Logger.debug(\"optalign changed!\");\n            insertDirty = true;\n            newAlign = optAlign === \"\" ? \"top\" : optAlign;\n            if (navItem) navItem.setAttribute(\"optalign\", newAlign);\n        }\n        if (name !== this.object.flags.theatre.name) {\n            Logger.debug(\"name changed!\");\n            insertDirty = true;\n            newName = name === \"\" ? this.object.name : name;\n            if (navItem) {\n                navItem.setAttribute(\"name\", newName);\n                navItem.setAttribute(\"title\", newName + (newName == this.object.name ? \"\" : ` (${this.object.name})`));\n            }\n        }\n        // Add label information to update if it has data-edit\n        formData = this._processUpdateLabels(formData);\n        // Verify custom emotes if we have any\n        let resForms = this._verifyCustomEmotes(formData);\n        if (!resForms) {\n            return;\n        }\n        Logger.debug(\"Form data AFTER verification: \", resForms);\n        let revisedFormData = resForms.revisedFormData;\n        let emoteFormData = resForms.emoteFormData;\n\n        // check all image resources, if they differ the actor's, we need to replace the texture, and then tell all other clients to do so as well!\n        // let inserts = formData.filter((e,k) => {return k.endsWith(\"insert\") || k.endsWith(\"baseinsert\")});\n        let insert = Theatre.instance.getInsertById(theatreId);\n        let container = insert ? insert.dockContainer : null;\n        let app = Theatre.instance.pixiCTX;\n        let insertEmote = Theatre.instance._getEmoteFromInsert(insert);\n        let newSrcImg = null;\n        let imgSrcs = [];\n\n        for (let k in formData) {\n            if (k.endsWith(\"insert\") || k.endsWith(\"baseinsert\")) {\n                let oldValue = foundry.utils.getProperty(this.object, k);\n                // if the old value does not exist, we will continue\n                if (formData[k] !== oldValue) {\n                    let emote = k.match(/emotes\\.[a-z0-9\\-]+/);\n                    if (emote) emote = emote[0].replace(/emotes\\./, \"\");\n                    let resName = formData[k];\n                    // A special case exists where the baseportrait is removed, and replaced with either\n                    // null or an empty string, we can set this value, but we need to change the re-render\n                    // behavior to take the sheet portrait or 'mystery man' image\n                    if (!resName || resName === \"\") {\n                        // try to restore baseinsert\n                        let formBaseInsert = formData[\"flags.theatre.baseinsert\"];\n                        if (k.endsWith(\"insert\") && !k.endsWith(\"baseinsert\")) {\n                            if (formBaseInsert && formBaseInsert !== \"\") {\n                                resName = formBaseInsert;\n                            } else if (\n                                this.object.flags.theatre.baseinsert &&\n                                this.object.flags.theatre.baseinsert != \"\"\n                            ) {\n                                resName = this.object.flags.theatre.baseinsert;\n                            } else {\n                                resName = this.object.img ? this.object.img : CONSTANTS.DEFAULT_PORTRAIT;\n                            }\n                        } else {\n                            resName = this.object.img ? this.object.img : CONSTANTS.DEFAULT_PORTRAIT;\n                        }\n                    }\n\n                    // ensure resource exists\n                    if (!(await srcExists(resName))) {\n                        Logger.error(\"ERROR: Path %s does not exist!\", true, resName);\n                        Logger.error(game.i18n.localize(\"Theatre.UI.Notification.BadFilepath\") + `\"${resName}\"`, true);\n                        return;\n                    }\n\n                    // to prevent firing off X number of packets on a save submit\n                    imgSrcs.push({ imgpath: resName, resname: resName });\n                    if (insertEmote == emote || !emote) {\n                        newSrcImg = resName;\n                    }\n                }\n            }\n        }\n\n        // check for null'd emotes, push the objects up a level if one exists\n        const newData = foundry.utils.mergeObject(this.object, emoteFormData, { inplace: false });\n        let emMerge = newData.flags.theatre.emotes;\n        let nEmotes = {};\n        for (let emProp in emMerge) {\n            if (emMerge[emProp] == null) {\n                continue;\n            }\n            nEmotes[emProp] = emMerge[emProp];\n        }\n        // send the emote parent in bulk to get rid of unwanted children\n        revisedFormData[\"flags.theatre.emotes\"] = nEmotes;\n        Logger.debug(\"Final Push Config update:\", revisedFormData);\n\n        this.object.update(revisedFormData).then((response) => {\n            // perform texture updates if needed\n            if (imgSrcs.length > 0) {\n                // we know the active emote, thus all we need is the new source image\n                Logger.debug(\"sending imgSrcs for replaceAllTextures\", imgSrcs);\n                Theatre.instance._AddAllTextureResources(\n                    imgSrcs,\n                    theatreId,\n                    insertEmote,\n                    newSrcImg,\n                    (loader, resources) => {\n                        // if our emote is active and we're replacing the emote texture, or base is active, and we're replacing the base texture\n                        Logger.debug(\"texture additions complete! \", newSrcImg, insertEmote);\n\n                        if (app && container && newSrcImg) {\n                            Logger.debug(\"RE-RENDERING with NEW texture resource %s \", newSrcImg);\n\n                            let resName = CONSTANTS.DEFAULT_PORTRAIT;\n                            if (\n                                insert.emote &&\n                                this.object.flags.theatre.emotes[insert.emote].insert &&\n                                this.object.flags.theatre.emotes[insert.emote].insert !== \"\"\n                            ) {\n                                resName = this.object.flags.theatre.emotes[insert.emote].insert;\n                            } else if (\n                                this.object.flags.theatre.baseinsert &&\n                                this.object.flags.theatre.baseinsert !== \"\"\n                            ) {\n                                resName = this.object.flags.theatre.baseinsert;\n                            } else if (this.object.img && this.object.img !== \"\") {\n                                resName = this.object.img;\n                            }\n                            // bubble up dataum from the update\n                            insert.optAlign = newAlign;\n                            insert.name = newName;\n                            insert.label.text = newName;\n\n                            Theatre.instance._clearPortraitContainer(theatreId);\n                            Theatre.instance._setupPortraitContainer(theatreId, newAlign, newSrcImg, resources);\n                            // re-attach label + typingBubble\n                            insert.dockContainer.addChild(insert.label);\n                            insert.dockContainer.addChild(insert.typingBubble);\n\n                            Theatre.instance._repositionInsertElements(insert);\n\n                            if (!Theatre.instance.rendering) {\n                                Theatre.instance._renderTheatre(performance.now());\n                            }\n                        }\n                    },\n                    false,\n                );\n\n                // replaceAllTextureResources will have performed the render, and sent the needed\n                // packets\n                // mark it as 'clean' since we're handling the render here\n                insertDirty = false;\n            }\n\n            // if the insert is dirty, clear and setup\n            if (insertDirty && insert) {\n                Logger.debug(\"Insert is dirty, re-render it!\");\n                let resName = CONSTANTS.DEFAULT_PORTRAIT;\n                if (\n                    insert.emote &&\n                    this.object.flags.theatre.emotes[insert.emote].insert &&\n                    this.object.flags.theatre.emotes[insert.emote].insert !== \"\"\n                ) {\n                    resName = this.object.flags.theatre.emotes[insert.emote].insert;\n                } else if (this.object.flags.theatre.baseinsert && this.object.flags.theatre.baseinsert !== \"\") {\n                    resName = this.object.flags.theatre.baseinsert;\n                } else if (this.object.img && this.object.img !== \"\") {\n                    resName = this.object.img;\n                }\n                // bubble up dataum from the update\n                insert.optAlign = newAlign;\n                insert.name = newName;\n                insert.label.text = newName;\n\n                const proxy = new Proxy(\n                    {},\n                    {\n                        get: function (target, name) {\n                            return PIXI.Assets.cache.get(name);\n                        },\n                    },\n                );\n                Theatre.instance._clearPortraitContainer(theatreId);\n                Theatre.instance._setupPortraitContainer(theatreId, newAlign, resName, proxy);\n\n                // re-attach label + typingBubble\n                insert.dockContainer.addChild(insert.label);\n                insert.dockContainer.addChild(insert.typingBubble);\n\n                Theatre.instance._repositionInsertElements(insert);\n\n                if (!Theatre.instance.rendering) {\n                    Theatre.instance._renderTheatre(performance.now());\n                }\n            }\n\n            if (theatreId === Theatre.instance.speakingAs) {\n                return;\n            }\n            Theatre.instance.renderEmoteMenu();\n            if (insertDirty) {\n                Theatre.instance._sendSceneEvent(\"renderinsert\", { insertid: theatreId });\n            }\n        });\n    }\n\n    /**\n     * Adds a new Custom emote, constructing the HTML to be injected\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onAddEmoteLine(ev) {\n        Logger.debug(\"Add Emote Pressed!\");\n        //Logger.info(game.i18n.localize(\"Theatre.NotYet\"), true);\n\n        // We need to get a custom emote name for storage purposes, this is a running index from\n        // 1-> MAXINT oh which the upper bound we don't account for, to get the correct custom\n        // index to fill, we find all formGroups whose name starts with \"custom\" then when we\n        // shave off the number, then we sort these numbers\n        let emoteContainer = ev.currentTarget.parentNode;\n        let formEmoteElems = emoteContainer.getElementsByClassName(\"theatre-config-form-group\");\n\n        let customElems = [];\n        for (let elem of formEmoteElems) {\n            let eName = elem.getAttribute(\"name\");\n            if (eName && eName.startsWith(\"custom\"))\n                customElems.push({ sortidx: Number(eName.match(/\\d+/)[0]), elem: elem });\n        }\n        // we grab max index, we don't care about possible missing indexes from removed custom emotes\n        // so we'll just leave them as gaps\n        customElems.sort((a, b) => {\n            return a.sortidx - b.sortidx;\n        });\n        let customIdx = customElems.length > 0 ? customElems[customElems.length - 1].sortidx + 1 : 1;\n\n        let customObjElems = [];\n        for (let k in this.object.flags.theatre.emotes) {\n            let eName = k;\n            if (eName && eName.startsWith(\"custom\"))\n                customObjElems.push({\n                    sortidx: Number(eName.match(/\\d+/)[0]),\n                    elem: this.object.flags.theatre.emotes[k],\n                });\n        }\n        // we grab max index, we don't care about possible missing indexes from removed custom emotes\n        // so we'll just leave them as gaps\n        customObjElems.sort((a, b) => {\n            return a.sortidx - b.sortidx;\n        });\n        let customObjIdx = customObjElems.length > 0 ? customObjElems[customObjElems.length - 1].sortidx + 1 : 1;\n        let customName = `custom${Math.max(customIdx, customObjIdx)}`;\n\n        // inject a new DOM element to the emote list right before our button\n        let formGroup = document.createElement(\"div\");\n        let emoteNameInput = document.createElement(\"input\");\n        let emoteIconHolder = document.createElement(\"div\");\n        let emoteIcon = document.createElement(\"img\");\n        let fileButton = document.createElement(\"button\");\n        let fileIcon = document.createElement(\"i\");\n        let fileInput = document.createElement(\"input\");\n        //let editEmoteButton = document.createElement(\"button\");\n        //let editEmoteIcon = document.createElement(\"i\");\n\n        KHelpers.addClass(formGroup, \"theatre-config-form-group\");\n        KHelpers.addClass(emoteIconHolder, \"theatre-emote-icon\");\n        KHelpers.addClass(emoteIconHolder, \"file-picker\");\n        KHelpers.addClass(emoteIcon, \"customicon\");\n        KHelpers.addClass(fileButton, \"file-picker\");\n        KHelpers.addClass(fileIcon, \"fas\");\n        KHelpers.addClass(fileIcon, \"fa-file-import\");\n        KHelpers.addClass(fileIcon, \"fa-fw\");\n        KHelpers.addClass(fileInput, \"image\");\n        //KHelpers.addClass(editEmoteButton,\"theatre-config-btn-edit-emote\");\n        //KHelpers.addClass(editEmoteIcon,\"fas\");\n        //KHelpers.addClass(editEmoteIcon,\"fa-sliders-h\");\n\n        formGroup.setAttribute(\"name\", customName);\n\n        emoteNameInput.setAttribute(\"type\", \"text\");\n        emoteNameInput.setAttribute(\"name\", `flags.theatre.emotes.${customName}.label`);\n        emoteNameInput.setAttribute(\"data-dtype\", \"String\");\n        emoteNameInput.setAttribute(\"placeholder\", game.i18n.localize(\"Theatre.UI.Config.CustomEmotePlaceholder\"));\n        emoteNameInput.value = game.i18n.localize(\"Theatre.UI.Config.CustomEmotePlaceholder\");\n        emoteNameInput.addEventListener(\"focusout\", this._onCustomLabelInputFocusOut.bind(this));\n\n        fileButton.setAttribute(\"type\", \"button\");\n        fileButton.setAttribute(\"data-type\", \"image\");\n        fileButton.setAttribute(\"data-target\", `flags.theatre.emotes.${customName}.insert`);\n        fileButton.setAttribute(\"title\", \"Browse Files\");\n        fileButton.setAttribute(\"tabindex\", \"-1\");\n\n        emoteIcon.setAttribute(\"data-edit\", `flags.theatre.emotes.${customName}.image`);\n        emoteIcon.setAttribute(\"src\", CONSTANTS.ICONLIB + \"/blank.png\");\n        emoteIcon.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.ChooseEmoteIcon\"));\n\n        //emoteIcon.setAttribute(\"src\",`flags.theatre.emotes.${customName}.image`);\n\n        fileInput.setAttribute(\"type\", \"text\");\n        fileInput.setAttribute(\"name\", `flags.theatre.emotes.${customName}.insert`);\n        fileInput.setAttribute(\"data-dtype\", \"String\");\n        fileInput.setAttribute(\"placeholder\", game.i18n.localize(\"Theatre.UI.Config.PathPlaceholder\"));\n\n        //editEmoteButton.setAttribute(\"type\",\"button\");\n        //editEmoteButton.setAttribute(\"name\", customName);\n        //editEmoteButton.setAttribute(\"title\",game.i18n.localize(\"Theatre.UI.Config.ConfigureEmote\"));\n\n        // assemble\n        emoteIconHolder.appendChild(emoteIcon);\n        //editEmoteButton.appendChild(editEmoteIcon);\n        fileButton.appendChild(fileIcon);\n\n        formGroup.appendChild(emoteNameInput);\n        formGroup.appendChild(emoteIconHolder);\n        formGroup.appendChild(fileButton);\n        formGroup.appendChild(fileInput);\n        //formGroup.appendChild(editEmoteButton);\n\n        KHelpers.insertBefore(formGroup, ev.currentTarget);\n        this.activateListeners($(formGroup));\n\n        // focus\n        emoteNameInput.focus();\n    }\n\n    /**\n     * Handle changing customEmote image by\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomIconImage(ev) {\n        let target = ev.currentTarget;\n        new FilePicker({\n            type: \"image\",\n            current: target.getAttribute(\"src\"),\n            callback: (path) => {\n                target.src = path;\n            },\n            top: this.position.top + 40,\n            left: this.position.left + 10,\n        }).browse(target.getAttribute(\"src\"));\n    }\n\n    /**\n     * Handle click event for the custom name label to allow it to be editable\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomLabelClick(ev) {\n        // replace the label with an input box\n        ev.stopPropagation();\n        let inputLabel = document.createElement(\"input\");\n        inputLabel.setAttribute(\"type\", \"text\");\n        inputLabel.setAttribute(\n            \"name\",\n            `flags.theatre.emotes.${ev.currentTarget.parentNode.getAttribute(\"name\")}.label`,\n        );\n        inputLabel.setAttribute(\"data-dtype\", \"String\");\n        inputLabel.setAttribute(\"placeholder\", game.i18n.localize(\"Theatre.UI.Config.CustomEmotePlaceholder\"));\n        inputLabel.setAttribute(\"value\", ev.currentTarget.textContent);\n        inputLabel.addEventListener(\"focusout\", this._onCustomLabelInputFocusOut.bind(this));\n        KHelpers.insertBefore(inputLabel, ev.currentTarget);\n        inputLabel.select();\n        inputLabel.focus();\n        // replace\n        ev.currentTarget.parentNode.removeChild(ev.currentTarget);\n    }\n\n    /**\n     * Handle mouse enter event for custom emote label to show the tool dock\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomLabelMouseEnter(ev) {\n        // show dock\n        let dock = ev.currentTarget.getElementsByClassName(\"theatre-config-emote-label-dock\")[0];\n        dock.style.display = \"flex\";\n    }\n\n    /**\n     * Handle mouse enter event for custom emote label to show the tool dock\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomLabelMouseLeave(ev) {\n        // hide dock\n        let dock = ev.currentTarget.getElementsByClassName(\"theatre-config-emote-label-dock\")[0];\n        dock.style.display = \"none\";\n    }\n\n    /**\n     * Handle updating the custom label/input on focus loss\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomLabelInputFocusOut(ev) {\n        // re-build dock + label\n        let label = document.createElement(\"label\");\n        let dock = document.createElement(\"div\");\n        let deleteIcon = document.createElement(\"i\");\n        KHelpers.addClass(label, \"theatre-config-emote-label\");\n        KHelpers.addClass(label, \"customlabel\");\n        KHelpers.addClass(dock, \"theatre-config-emote-label-dock\");\n        KHelpers.addClass(deleteIcon, \"fas\");\n        KHelpers.addClass(deleteIcon, \"fa-trash\");\n\n        label.textContent = ev.currentTarget.value;\n\n        label.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.ChooseEmoteName\"));\n        label.setAttribute(\n            \"data-edit\",\n            `flags.theatre.emotes.${ev.currentTarget.parentNode.getAttribute(\"name\")}.label`,\n        );\n        dock.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.DeleteCustomEmote\"));\n\n        dock.appendChild(deleteIcon);\n        label.appendChild(dock);\n        KHelpers.insertBefore(label, ev.currentTarget);\n        this._setupCustomLabelEvents(label);\n        // replace\n        ev.currentTarget.parentNode.removeChild(ev.currentTarget);\n    }\n\n    /**\n     * Handle updating the custom label/input on click\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onCustomLabelDockClick(ev) {\n        // delete custom emote\n        // mark the form group as 'to be deleted' as a rider on our update call\n        let formGroup = KHelpers.seekParentClass(ev.currentTarget, \"theatre-config-form-group\", 5);\n        if (!formGroup) return;\n        formGroup.setAttribute(\"todelete\", true);\n        formGroup.style.left = \"20px\";\n        formGroup.style.transform = \"scale(0.75)\";\n        formGroup.style.opacity = \"0.25\";\n        ev.stopPropagation();\n        formGroup.addEventListener(\"click\", this._onUndoDockDelete.bind(this));\n    }\n\n    /**\n     * Undo a custom emote item delete\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onUndoDockDelete(ev) {\n        Logger.debug(\"undo delete!\");\n        ev.stopPropagation();\n        ev.currentTarget.removeAttribute(\"todelete\");\n        ev.currentTarget.style.left = \"0\";\n        ev.currentTarget.style.transform = \"scale(1)\";\n        ev.currentTarget.style.opacity = \"1\";\n    }\n\n    /**\n     * Setup the custom name label with several events\n     *\n     * @param label (HTMLElement) : Label HTML element to setup\n     *\n     * @private\n     */\n    _setupCustomLabelEvents(label) {\n        label.addEventListener(\"click\", this._onCustomLabelClick.bind(this));\n        label.addEventListener(\"mouseenter\", this._onCustomLabelMouseEnter.bind(this));\n        label.addEventListener(\"mouseleave\", this._onCustomLabelMouseLeave.bind(this));\n        let dock = label.getElementsByClassName(\"theatre-config-emote-label-dock\")[0];\n        dock.addEventListener(\"click\", this._onCustomLabelDockClick.bind(this));\n    }\n\n    /**\n     * Undo a custom emote item delete\n     *\n     * @param ev (Event) triggered event\n     *\n     * @private\n     */\n    _onEditEmoteLine(ev) {\n        Logger.debug(\"Emote config pressed for %s!\", ev.currentTarget.getAttribute(\"name\"));\n        Logger.info(game.i18n.localize(\"Theatre.NotYet\"), true);\n    }\n}\n","import { Theatre } from \"./Theatre.js\";\nimport CONSTANTS from \"./constants/constants.js\";\nimport Logger from \"./lib/Logger.js\";\n\nexport const registerSettings = function () {\n    let settingsCustom = {};\n    // game.settings.registerMenu(CONSTANTS.MODULE_ID, \"resetAllSettings\", {\n    // \tname: `${CONSTANTS.MODULE_ID}.setting.reset.name`,\n    // \thint: `${CONSTANTS.MODULE_ID}.setting.reset.hint`,\n    // \ticon: \"fas fa-coins\",\n    // \ttype: ResetSettingsDialog,\n    // \trestricted: true,\n    // });\n    // =====================================================================\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"gmOnly\", {\n        name: \"Theatre.UI.Settings.gmOnly\",\n        hint: \"Theatre.UI.Settings.gmOnlyHint\",\n        scope: \"world\",\n        config: true,\n        default: false,\n        type: Boolean,\n        onChange: () => {\n            if (!game.user.isGM) {\n                location.reload();\n            }\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"theatreStyle\", {\n        name: \"Theatre.UI.Settings.displayMode\",\n        hint: \"Theatre.UI.Settings.displayModeHint\",\n        scope: \"world\",\n        config: true,\n        default: \"textbox\",\n        type: String,\n        choices: {\n            textbox: \"Theatre.UI.Settings.displayModeTextBox\",\n            lightbox: \"Theatre.UI.Settings.displayModeLightBox\",\n            clearbox: \"Theatre.UI.Settings.displayModeClearBox\",\n        },\n        onChange: (theatreStyle) => {\n            Theatre.instance.configTheatreStyle(theatreStyle);\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"theatreImageSize\", {\n        name: \"Maximum image height\",\n        scope: \"client\",\n        config: true,\n        default: 400,\n        type: Number,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"theatreNarratorHeight\", {\n        name: \"Theatre.UI.Settings.narrHeight\",\n        hint: \"Theatre.UI.Settings.narrHeightHint\",\n        scope: \"world\",\n        config: true,\n        default: \"50%\",\n        type: String,\n        choices: {\n            \"15%\": \"15%\",\n            \"25%\": \"25%\",\n            \"30%\": \"30%\",\n            \"50%\": \"50%\",\n            \"70%\": \"75%\",\n        },\n        onChange: (narrHeight) => {\n            settingsCustom.narrHeight = narrHeight;\n            if (Theatre.instance.theatreNarrator) {\n                Theatre.instance.theatreNarrator.style.top = `calc(${narrHeight} - 50px)`;\n            }\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"nameFont\", {\n        name: \"Theatre.UI.Settings.nameFont\",\n        hint: \"Theatre.UI.Settings.nameFontHint\",\n        scope: \"world\",\n        config: true,\n        default: Theatre.instance.titleFont,\n        type: String,\n        choices: Theatre.FONTS.reduce((a, font) => {\n            a[font] = font;\n            return a;\n        }, {}),\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"nameFontSize\", {\n        name: \"Theatre.UI.Settings.nameFontSize\",\n        hint: \"Theatre.UI.Settings.nameFontSizeHint\",\n        scope: \"world\",\n        config: true,\n        default: 44,\n        type: Number,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"textDecayMin\", {\n        name: \"Theatre.UI.Settings.textDecayMin\",\n        hint: \"Theatre.UI.Settings.textDecayMinHint\",\n        scope: \"world\",\n        config: true,\n        default: 30,\n        type: Number,\n        onChange: (textDecayMin) => {\n            Logger.debug(\"Text decay minimum set to %s\", textDecayMin);\n            textDecayMin = Number(textDecayMin);\n            if (isNaN(textDecayMin) || textDecayMin <= 0) {\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.InvalidDecayMin\"), true);\n                game.settings.set(CONSTANTS.MODULE_ID, \"textDecayMin\", 30);\n                return;\n            }\n            if (textDecayMin > 600) {\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.TooLongDecayMin\"), true);\n                game.settings.set(CONSTANTS.MODULE_ID, \"textDecayMin\", 600);\n                return;\n            }\n\n            settingsCustom.decayMin = textDecayMin * 1000;\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"textDecayRate\", {\n        name: \"Theatre.UI.Settings.textDecayRate\",\n        hint: \"Theatre.UI.Settings.textDecayRateHint\",\n        scope: \"world\",\n        config: true,\n        default: 1,\n        type: Number,\n        onChange: (textDecayRate) => {\n            Logger.debug(\"Text decay rate set to %s\", textDecayRate);\n            textDecayRate = Number(textDecayRate);\n            if (isNaN(textDecayRate) || textDecayRate <= 0) {\n                textDecayRate = 1;\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.InvalidDecayRate\"), true);\n                game.settings.set(CONSTANTS.MODULE_ID, \"textDecayRate\", 1);\n                return;\n            }\n            if (textDecayRate > 10) {\n                textDecayRate = 10;\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.TooLongDecayRate\"), true);\n                game.settings.set(CONSTANTS.MODULE_ID, \"textDecayRate\", 10);\n                return;\n            }\n            settingsCustom.decayRate = textDecayRate * 1000;\n        },\n    });\n\n    /*\n  game.settings.register(CONSTANTS.MODULE_ID, \"motdNewInfo\", {\n    name: \"MOTD New Info\",\n    scope: \"client\",\n    default: 0,\n    type: Number,\n    onChange: (newInfo) => {\n      // NOOP\n    },\n  });\n  */\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"autoHideBottom\", {\n        name: \"Theatre.UI.Settings.autoHideBottom\",\n        hint: \"Theatre.UI.Settings.autoHideBottomHint\",\n        scope: \"world\",\n        config: true,\n        type: Boolean,\n        default: true,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"suppressMacroHotbar\", {\n        name: \"Theatre.UI.Settings.suppressMacroHotbar\",\n        hint: \"Theatre.UI.Settings.suppressMacroHotbarHint\",\n        scope: \"world\",\n        config: true,\n        type: Boolean,\n        default: true,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"showUIAboveStage\", {\n        name: \"Theatre.UI.Settings.showUIAboveStage\",\n        hint: \"Theatre.UI.Settings.showUIAboveStageHint\",\n        scope: \"world\",\n        config: true,\n        default: \"none\",\n        requiresReload: true,\n        type: String,\n        choices: {\n            none: \"Theatre.UI.Settings.showUIAboveStageNone\",\n            left: \"Theatre.UI.Settings.showUIAboveStageLeft\",\n            middle: \"Theatre.UI.Settings.showUIAboveStageMiddle\",\n            both: \"Theatre.UI.Settings.showUIAboveStageBoth\",\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"removeLabelSheetHeader\", {\n        name: \"Theatre.UI.Settings.removeLabelSheetHeader\",\n        hint: \"Theatre.UI.Settings.removeLabelSheetHeaderHint\",\n        scope: \"world\",\n        config: true,\n        type: Boolean,\n        default: false,\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"ignoreMessagesToChat\", {\n        name: \"Theatre.UI.Settings.ignoreMessagesToChat\",\n        hint: \"Theatre.UI.Settings.ignoreMessagesToChatHint\",\n        scope: \"world\",\n        config: true,\n        type: Boolean,\n        default: false,\n        onChange: (value) => {\n            settingsCustom.ignoreMessagesToChat = value;\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"quoteType\", {\n        name: \"Theatre.UI.Settings.quoteType\",\n        hint: game.i18n.format(\"Theatre.UI.Settings.quoteTypeHint\", {\n            setting: game.i18n.localize(\"Theatre.UI.Title.QuoteToggle\"),\n        }),\n        scope: \"world\",\n        config: true,\n        type: Number,\n        default: 1,\n        choices: {\n            0: game.i18n.localize(\"Theatre.UI.Settings.quoteTypeChoices.0\"),\n            1: game.i18n.localize(\"Theatre.UI.Settings.quoteTypeChoices.1\"),\n            2: game.i18n.localize(\"Theatre.UI.Settings.quoteTypeChoices.2\"),\n            3: game.i18n.localize(\"Theatre.UI.Settings.quoteTypeChoices.3\"),\n            4: game.i18n.localize(\"Theatre.UI.Settings.quoteTypeChoices.4\"),\n        },\n        onChange: (value) => {\n            settingsCustom.quoteType = value;\n        },\n    });\n\n    game.settings.register(CONSTANTS.MODULE_ID, \"debug\", {\n        name: `Theatre.UI.Settings.debug`,\n        hint: `Theatre.UI.Settings.debugHint`,\n        scope: \"client\",\n        config: true,\n        default: false,\n        type: Boolean,\n    });\n\n    // Load in default settings (theatreStyle is loaded on HTML Injection)\n    settingsCustom.decayMin = (game.settings.get(CONSTANTS.MODULE_ID, \"textDecayMin\") || 30) * 1000;\n    settingsCustom.decayRate = (game.settings.get(CONSTANTS.MODULE_ID, \"textDecayRate\") || 1) * 1000;\n    //settingsCustom.motdNewInfo = game.settings.get(CONSTANTS.MODULE_ID, \"motdNewInfo\") || 1;\n    settingsCustom.ignoreMessagesToChat = game.settings.get(CONSTANTS.MODULE_ID, \"ignoreMessagesToChat\");\n    settingsCustom.quoteType = game.settings.get(CONSTANTS.MODULE_ID, \"quoteType\");\n\n    return settingsCustom;\n};\n\nclass ResetSettingsDialog extends FormApplication {\n    constructor(...args) {\n        //@ts-ignore\n        super(...args);\n        //@ts-ignore\n        return new Dialog({\n            title: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.title`),\n            content:\n                '<p style=\"margin-bottom:1rem;\">' +\n                game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.content`) +\n                \"</p>\",\n            buttons: {\n                confirm: {\n                    icon: '<i class=\"fas fa-check\"></i>',\n                    label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.confirm`),\n                    callback: async () => {\n                        const worldSettings = game.settings.storage\n                            ?.get(\"world\")\n                            ?.filter((setting) => setting.key.startsWith(`${CONSTANTS.MODULE_ID}.`));\n                        for (let setting of worldSettings) {\n                            console.log(`Reset setting '${setting.key}'`);\n                            await setting.delete();\n                        }\n                        //window.location.reload();\n                    },\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.cancel`),\n                },\n            },\n            default: \"cancel\",\n        });\n    }\n\n    async _updateObject(event, formData) {\n        // do nothing\n    }\n}\n\nexport const registerKeybindings = function () {\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"unfocusTextArea\", {\n        name: \"Theatre.UI.Keybinds.unfocusTextArea\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"Escape\",\n            },\n        ],\n        onDown: () => {\n            if (document.activeElement === document.getElementById(\"chat-message\")) {\n                event.preventDefault();\n                event.stopPropagation();\n                document.getElementById(\"chat-message\").blur();\n            }\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"addOwnedToStage\", {\n        name: \"Theatre.UI.Keybinds.addOwnedToStage\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"Enter\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const ownedActors = game.actors.filter((a) => a.permission === 3);\n            const ownedTokens = ownedActors.map((a) => a.getActiveTokens());\n            for (const tokenArray of ownedTokens) tokenArray.forEach((t) => Theatre.addToNavBar(t.actor));\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"addSelectedToStage\", {\n        name: \"Theatre.UI.Keybinds.addSelectedToStage\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"Enter\",\n                modifiers: [\"Shift\"],\n            },\n        ],\n        onDown: () => {\n            for (const tkn of canvas.tokens.controlled) Theatre.addToNavBar(tkn.actor);\n        },\n        restricted: true,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, `removeSelectedFromStage`, {\n        name: \"Theatre.UI.Keybinds.removeSelectedFromStage\",\n        hint: \"\",\n        editable: [],\n        onDown: (context) => {\n            for (const tkn of canvas.tokens.controlled) Theatre.removeFromNavBar(tkn.actor);\n        },\n        restricted: true,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"narratorMode\", {\n        name: \"Theatre.UI.Keybinds.narratorMode\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyN\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const narratorButton = $(document).find(`div.theatre-icon-narrator`).closest(`div.theatre-control-btn`);\n            if (KHelpers.hasClass(narratorButton[0], \"theatre-control-nav-bar-item-speakingas\"))\n                Theatre.instance.toggleNarratorBar(false);\n            else Theatre.instance.toggleNarratorBar(true);\n\n            document.getElementById(\"chat-message\").blur();\n        },\n        restricted: true,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"flipPortrait\", {\n        name: \"Theatre.UI.Keybinds.flipPortrait\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyR\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            if (Theatre.instance.speakingAs) Theatre.instance.mirrorInsertById(Theatre.instance.speakingAs);\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"nudgePortraitLeft\", {\n        name: \"Theatre.UI.Keybinds.nudgePortraitLeft\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyZ\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const imgId = Theatre.instance.speakingAs;\n            if (!imgId) return;\n\n            const insert = Theatre.instance.portraitDocks.find((p) => p.imgId === imgId);\n            const oleft = insert.portraitContainer.x,\n                otop = insert.portraitContainer.y;\n            const tweenId = \"portraitMove\";\n            const tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { x: oleft - 50, y: otop },\n                ease: Power3.easeOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n\n            // send sceneEvent\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: { x: oleft - 50, y: otop, mirror: insert.mirrored },\n            });\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"nudgePortraitRight\", {\n        name: \"Theatre.UI.Keybinds.nudgePortraitRight\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyC\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const imgId = Theatre.instance.speakingAs;\n            if (!imgId) return;\n\n            const insert = Theatre.instance.portraitDocks.find((p) => p.imgId === imgId);\n            const oleft = insert.portraitContainer.x,\n                otop = insert.portraitContainer.y;\n            const tweenId = \"portraitMove\";\n            const tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { x: oleft + 50, y: otop },\n                ease: Power3.easeOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n\n            // send sceneEvent\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: { x: oleft + 50, y: otop, mirror: insert.mirrored },\n            });\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"nudgePortraitUp\", {\n        name: \"Theatre.UI.Keybinds.nudgePortraitUp\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyS\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const imgId = Theatre.instance.speakingAs;\n            if (!imgId) return;\n\n            const insert = Theatre.instance.portraitDocks.find((p) => p.imgId === imgId);\n            const oleft = insert.portraitContainer.x,\n                otop = insert.portraitContainer.y;\n            const tweenId = \"portraitMove\";\n            const tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { x: oleft, y: otop - 50 },\n                ease: Power3.easeOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n\n            // send sceneEvent\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: { x: oleft, y: otop - 50, mirror: insert.mirrored },\n            });\n        },\n        restricted: false,\n    });\n\n    game.keybindings.register(CONSTANTS.MODULE_ID, \"nudgePortraitDown\", {\n        name: \"Theatre.UI.Keybinds.nudgePortraitDown\",\n        hint: \"\",\n        editable: [\n            {\n                key: \"KeyX\",\n                modifiers: [\"Alt\"],\n            },\n        ],\n        onDown: () => {\n            const imgId = Theatre.instance.speakingAs;\n            if (!imgId) return;\n\n            const insert = Theatre.instance.portraitDocks.find((p) => p.imgId === imgId);\n            const oleft = insert.portraitContainer.x,\n                otop = insert.portraitContainer.y;\n            const tweenId = \"portraitMove\";\n            const tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { x: oleft, y: otop + 50 },\n                ease: Power3.easeOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n\n            // send sceneEvent\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: { x: oleft, y: otop + 50, mirror: insert.mirrored },\n            });\n        },\n        restricted: false,\n    });\n\n    for (let i = 1; i < 11; i++) {\n        game.keybindings.register(CONSTANTS.MODULE_ID, `activateStaged${i}`, {\n            name: game.i18n.format(`Theatre.UI.Keybinds.activateStaged`, { number: i }),\n            hint: \"\",\n            editable: [\n                {\n                    key: `Digit${i === 10 ? 0 : i}`,\n                    modifiers: [\"Control\"],\n                },\n            ],\n            onDown: () => {\n                const ids = Object.keys(Theatre.instance.stage);\n                const id = ids[i - 1];\n                if (id) Theatre.instance.activateInsertById(id);\n\n                document.getElementById(\"chat-message\").blur();\n            },\n            restricted: false,\n            reservedModifiers: [\"Shift\"],\n        });\n\n        game.keybindings.register(CONSTANTS.MODULE_ID, `removeStaged${i}`, {\n            name: game.i18n.format(`Theatre.UI.Keybinds.removeStaged`, { number: i }),\n            hint: \"\",\n            editable: [\n                {\n                    key: `Digit${i === 10 ? 0 : i}`,\n                    modifiers: [\"Control\", \"Alt\"],\n                },\n            ],\n            onDown: () => {\n                const ids = Object.keys(Theatre.instance.stage);\n                const id = ids[i - 1];\n                if (id) Theatre.instance.removeInsertById(id);\n            },\n            restricted: true,\n        });\n    }\n};\n","import API from \"./API/api.js\";\nimport CONSTANTS from \"./constants/constants.js\";\nimport Logger from \"./lib/Logger.js\";\n\nexport let theatreSocket;\n\nexport function registerSocket() {\n  Logger.debug(\"Registered theatreSocket\");\n  if (theatreSocket) {\n    return theatreSocket;\n  }\n\n  theatreSocket = socketlib.registerModule(CONSTANTS.MODULE_ID);\n\n  // ON Theatre.js class\n  // theatreSocket.register(\"processEvent\", (...args) => API.processEventArr(...args));\n\n  game.modules.get(CONSTANTS.MODULE_ID).socket = theatreSocket;\n  return theatreSocket;\n}\n","import KHelpers from \"./KHelpers.js\";\nimport { Theatre } from \"./Theatre.js\";\nimport { TheatreActor } from \"./TheatreActor.js\";\nimport { TheatreActorConfig } from \"./TheatreActorConfig.js\";\nimport CONSTANTS from \"./constants/constants.js\";\nimport Logger from \"./lib/Logger.js\";\n\nexport class TheatreHelpers {\n    /**\n     * Reorder theatre inserts in the dockContainer to align with where their\n     * text-box's position is on the bar such that the insert is always over\n     * the corresponding text-box.\n     *\n     */\n    static reorderInserts() {\n        if (!Theatre.instance) {\n            return;\n        }\n        let boxes = Theatre.instance._getTextBoxes();\n        let containerWidth = Theatre.instance.theatreDock.offsetWidth;\n        // Min 22px, max 32px, scale for all values inbetween\n        let fontSize = Math.floor(Math.max((Math.min(containerWidth / boxes.length, 500) / 500) * 28, 18));\n        Logger.debug(\"Reorder CALCUALTED FONT SIZE: \", fontSize);\n\n        for (let textBox of boxes) {\n            let theatreId = textBox.getAttribute(\"imgid\");\n            let insert = Theatre.instance.getInsertById(theatreId);\n\n            if (!insert) {\n                Theatre.instance._removeTextBoxFromTheatreBar(textBox);\n                continue;\n            }\n            // if somehow the containers are not setup, skip and hope the next re-order has them ready\n\n            if (!insert.portrait || !insert.label) {\n                Logger.warn(\"WARN: %s : %s was not ready!\", false, insert.name, insert.imgId);\n                continue;\n            }\n            // if the insert/textBox pair is in the process of being removed.\n            if (textBox.getAttribute(\"deleting\")) continue;\n\n            Logger.debug(\"repositioning %s :\", theatreId, insert);\n            let offset = KHelpers.offset(textBox);\n            //left calc\n            let leftPos = Math.round(\n                Number(offset.left || 0) -\n                    Number(KHelpers.style(textBox)[\"left\"].match(/\\-*\\d+\\.*\\d*/) || 0) -\n                    Number(KHelpers.style(Theatre.instance.theatreBar)[\"margin-left\"].match(/\\-*\\d+\\.*\\d*/) || 0),\n            );\n\n            //insert.dockContainer.width = textBox.offsetWidth;\n\n            if (insert.exitOrientation == \"left\") {\n                Logger.debug(\n                    \"LEFT (name: %s): \",\n                    insert.nameOrientation,\n                    leftPos,\n                    insert.name,\n                    Theatre.instance.theatreBar.offsetWidth / 2,\n                );\n                if (leftPos + insert.dockContainer.width / 2 > Theatre.instance.theatreBar.offsetWidth / 2) {\n                    Logger.log(\"swapping \" + insert.name + \" to right alignment from left\");\n                    insert.exitOrientation = \"right\";\n                }\n            } else {\n                Logger.debug(\n                    \"RIGHT (name: %s): \",\n                    insert.nameOrientation,\n                    leftPos,\n                    insert.name,\n                    Theatre.instance.theatreBar.offsetWidth / 2,\n                );\n                //right\n                if (leftPos + insert.dockContainer.width / 2 <= Theatre.instance.theatreBar.offsetWidth / 2) {\n                    Logger.debug(\"swapping \" + insert.name + \" to left alignment from right\");\n                    insert.exitOrientation = \"left\";\n                }\n            }\n            // pre-split measurement\n            insert.label.style.fontSize = game.settings.get(CONSTANTS.MODULE_ID, \"nameFontSize\");\n            insert.label.style.lineHeight = game.settings.get(CONSTANTS.MODULE_ID, \"nameFontSize\") * 1.5;\n            insert.label.style.wordWrap = false;\n            insert.label.style.wordWrapWidth = insert.portrait.width;\n            let labelExceeds = insert.label.width + 20 + insert.label.style.fontSize > textBox.offsetWidth;\n            let preLabelWidth = insert.label.width;\n            // split measurement\n            insert.label.style.wordWrap = true;\n            insert.label.style.wordWrapWidth = textBox.offsetWidth;\n            // shrink if label exceeds\n            if (labelExceeds) {\n                // apply title font size\n                let titleFontSize = Math.floor(Math.max((Math.min(containerWidth / boxes.length, 600) / 600) * 44, 28));\n                insert.label.style.fontSize = titleFontSize;\n                insert.label.style.lineHeight = titleFontSize * 1.5;\n            }\n\n            // Scale the name bar length and orient the portait\n\n            if (insert.nameOrientation == \"left\") {\n                insert.label.x = 20;\n                insert.typingBubble.anchor.set(0.5);\n                insert.typingBubble.x = Math.min(\n                    preLabelWidth + 20 + insert.typingBubble.width / 2,\n                    textBox.offsetWidth - insert.typingBubble.width / 2,\n                );\n            } else {\n                if (labelExceeds) {\n                    insert.label.x = insert.portrait.width - insert.label.width - 20;\n                    if (insert.label.width - 20 > insert.portrait.width)\n                        insert.typingBubble.x = Math.min(\n                            insert.portrait.width - insert.label.width - insert.typingBubble.texture.width / 2 - 20,\n                            insert.typingBubble.width / 2,\n                        );\n                    else\n                        insert.typingBubble.x = Math.max(\n                            insert.portrait.width - insert.label.width - insert.typingBubble.texture.width / 2 - 20,\n                            insert.typingBubble.width / 2,\n                        );\n                } else {\n                    insert.label.x = insert.portrait.width - preLabelWidth - 20;\n                    if (preLabelWidth - 20 > insert.portrait.width)\n                        insert.typingBubble.x = Math.min(\n                            insert.portrait.width - preLabelWidth - insert.typingBubble.texture.width / 2 - 20,\n                            insert.typingBubble.width / 2,\n                        );\n                    else\n                        insert.typingBubble.x = Math.max(\n                            insert.portrait.width - preLabelWidth - insert.typingBubble.texture.width / 2 - 20,\n                            insert.typingBubble.width / 2,\n                        );\n                }\n\n                insert.typingBubble.anchor.set(0.5);\n\n                leftPos += textBox.offsetWidth - insert.portrait.width;\n            }\n            insert.typingBubble.y =\n                insert.portrait.height -\n                (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n                insert.label.style.lineHeight +\n                insert.typingBubble.height / 2;\n            // if the label height > font-size, it word wrapped wrap, so we need to bump up the height\n            if (labelExceeds) {\n                let divisor = Math.round(insert.label.height / insert.label.style.lineHeight);\n                insert.label.y =\n                    insert.portrait.height -\n                    (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n                    insert.label.style.lineHeight * divisor;\n            } else {\n                // normal\n                insert.label.y =\n                    insert.portrait.height -\n                    (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n                    insert.label.style.lineHeight;\n            }\n            insert.typingBubble.rotation = 0.1745;\n            insert.dockContainer.y =\n                Theatre.instance.theatreDock.offsetHeight -\n                (insert.optAlign == \"top\" ? Theatre.instance.theatreBar.offsetHeight : 0) -\n                insert.portrait.height;\n\n            // theatreStyle specific adjustments\n            switch (Theatre.instance.settings.theatreStyle) {\n                case \"lightbox\":\n                    // to allow top-aligned portraits to work without a seam\n                    insert.dockContainer.y += insert.optAlign == \"top\" ? 8 : 0;\n                    insert.label.y -= insert.optAlign == \"top\" ? 8 : 0;\n                    break;\n                case \"clearbox\":\n                    insert.dockContainer.y = Theatre.instance.theatreDock.offsetHeight - insert.portrait.height;\n                    insert.label.y += insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight;\n                    insert.typingBubble.y += insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight;\n                    break;\n                case \"mangabubble\":\n                    break;\n                case \"textbox\":\n                    break;\n                default:\n                    break;\n            }\n\n            // Based on the number of active inserts, space, and user /desired/ font size, we'll set the font size\n            let insertFontSize = fontSize;\n            textBox.setAttribute(\"osize\", insertFontSize);\n            switch (Number(insert.textSize)) {\n                case 3:\n                    insertFontSize *= 1.5;\n                    break;\n                case 1:\n                    insertFontSize *= 0.5;\n                    break;\n                default:\n                    break;\n            }\n            textBox.style[\"font-size\"] = `${insertFontSize}px`;\n\n            // now apply it to all children and sub child heights if the height is different\n            // note that we only care about growing, not shrinking to conserve a bit.\n            if (\n                textBox.children[0] &&\n                textBox.children[0].tagName.toLowerCase() != \"hr\" &&\n                textBox.children[0].offsetHeight != insertFontSize\n            ) {\n                for (let c of textBox.children) {\n                    if (c.tagName.toLowerCase() == \"hr\") continue;\n                    for (let sc of c.children) sc.style.height = `${insertFontSize}px`;\n                    c.style.height = `${insertFontSize}px`;\n                }\n            }\n            // bookmark leftPos as order for sorting\n            insert.order = leftPos;\n            insert.renderOrder = leftPos;\n\n            let tweenId = \"containerSlide\";\n            let tween = TweenMax.to(insert.dockContainer, 1, {\n                //delay: 0.5,\n                pixi: { x: leftPos, alpha: 1 },\n                ease: Power4.easeOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(theatreId, tween, tweenId);\n        }\n        // sort the render order by left position order\n        Theatre.instance.portraitDocks.sort((a, b) => {\n            return a.order - b.order;\n        });\n    }\n\n    /**\n     * Set wither or not to display or hide theatre debug information.\n     *\n     * @params state (Boolean) : Boolean indicating if we should toggle debug on/off\n     */\n    static setDebug(state) {\n        if (state) {\n            // Theatre.DEBUG = true;\n            game.settings.set(CONSTANTS.MODULE_ID, \"debug\", true);\n            for (let insert of Theatre.instance.portraitDocks) {\n                Theatre.instance.renderInsertById(insert.imgId);\n            }\n        } else {\n            // Theatre.DEBUG = false;\n            game.settings.set(CONSTANTS.MODULE_ID, \"debug\", false);\n            for (let insert of Theatre.instance.portraitDocks) {\n                Theatre.instance.renderInsertById(insert.imgId);\n            }\n        }\n    }\n\n    static _isDebugActive() {\n        return game.settings.get(CONSTANTS.MODULE_ID, \"debug\");\n    }\n\n    /**\n     * Verify the TweenMax ease from the animation syntax shorthand.\n     *\n     * @params str (String) : the ease to verify.\n     */\n    static verifyEase(str) {\n        switch (str) {\n            case \"power1\":\n            case \"power1Out\":\n                return Power1.easeOut;\n                break;\n            case \"power1In\":\n                return Power1.easeIn;\n                break;\n            case \"power1InOut\":\n                return Power1.easeInOut;\n                break;\n            case \"power2\":\n            case \"power2Out\":\n                return Power2.easeOut;\n                break;\n            case \"power2In\":\n                return Power2.easeIn;\n                break;\n            case \"power2InOut\":\n                return Power2.easeInOut;\n                break;\n\n            case \"power3\":\n            case \"power3Out\":\n                return Power3.easeOut;\n                break;\n            case \"power3In\":\n                return Power3.easeIn;\n                break;\n            case \"power3InOut\":\n                return Power3.easeInOut;\n                break;\n\n            case \"power4\":\n            case \"power4Out\":\n                return Power4.easeOut;\n                break;\n            case \"power4In\":\n                return Power4.easeIn;\n                break;\n            case \"power4InOut\":\n                return Power4.easeInOut;\n                break;\n\n            case \"back\":\n            case \"backOut\":\n                return Back.easeOut;\n                break;\n            case \"backIn\":\n                return Back.easeIn;\n                break;\n            case \"backInOut\":\n                return Back.easeInOut;\n                break;\n\n            case \"elastic\":\n            case \"elasticOut\":\n                return Elastic.easeOut;\n                break;\n            case \"elasticIn\":\n                return Elastic.easeIn;\n                break;\n            case \"elasticInOut\":\n                return Elastic.easeInOut;\n                break;\n\n            case \"bounce\":\n            case \"bounceOut\":\n                return Bounce.easeOut;\n                break;\n            case \"bounceIn\":\n                return Bounce.easeIn;\n                break;\n            case \"bounceInOut\":\n                return Bounce.easeInOut;\n                break;\n\n            case \"circ\":\n            case \"circOut\":\n                return Circ.easeOut;\n                break;\n            case \"circIn\":\n                return Circ.easeIn;\n                break;\n            case \"circInOut\":\n                return Circ.easeInOut;\n                break;\n\n            case \"expo\":\n            case \"expoOut\":\n                return Expo.easeOut;\n                break;\n            case \"expoIn\":\n                return Expo.easeIn;\n                break;\n            case \"expoInOut\":\n                return Expo.easeInOut;\n                break;\n\n            case \"sine\":\n            case \"sineOut\":\n                return Sine.easeOut;\n                break;\n            case \"sineIn\":\n                return Sine.easeIn;\n                break;\n            case \"sineInOut\":\n                return Sine.easeInOut;\n                break;\n\n            case \"power0\":\n            default:\n                return Power0.easeNone;\n                break;\n        }\n    }\n\n    /**\n     * Return an array of tween params if the syntax is correct,\n     * else return an empty array if any tweens in the syntax\n     * are flag as incorrect.\n     *\n     * @param str (String) : The syntax to verify\n     *\n     * @return (Array[Object]) : The array of verified tween params, or null\n     */\n    static verifyAnimationSyntax(str) {\n        if (!str || typeof str != \"string\") {\n            return null;\n        }\n        Logger.debug(\"verifying syntax %s\", str);\n        let tweenParams = [];\n\n        try {\n            let sections = str.split(\"|\");\n            let resName = sections[0];\n\n            let verifyTarget = function (target) {\n                // TODO verify each property\n                return true;\n            };\n\n            for (let sdx = 1; sdx < sections.length; ++sdx) {\n                let parts = sections[sdx].split(\";\");\n                let idx = 0;\n                let duration, advOptions, targets, propDefs;\n\n                duration = Number(parts[idx]) || 1;\n                if (/\\([^\\)\\(]*\\)/g.test(parts[++idx])) {\n                    advOptions = parts[idx];\n                    idx++;\n                }\n                if (advOptions) {\n                    advOptions = advOptions.replace(/[\\(\\)]/g, \"\");\n                    let advParts = advOptions.split(\",\");\n                    advOptions = {};\n                    for (let advPart of advParts) {\n                        let components = advPart.split(\":\");\n                        if (components.length !== 2) {\n                            throw Logger.error(\"component properties definition : \" + advPart + \" is incorrect\");\n                        }\n                        let advPropName = components[0].trim();\n                        let advPropValue = components[1].trim();\n                        advOptions[advPropName] = advPropValue;\n                    }\n                }\n\n                targets = [];\n                propDefs = [];\n                for (idx; idx < parts.length; ++idx) {\n                    targets.push(parts[idx]);\n                }\n                for (let target of targets) {\n                    let components = target.split(\":\");\n                    if (components.length !== 2) {\n                        throw Logger.error(\"component properties definition : \" + target + \" is incorrect\");\n                    }\n                    let propName = components[0];\n                    let scomps = components[1].split(\",\");\n                    if (scomps.length !== 2) {\n                        throw Logger.error(\"component properties definition : \" + target + \" is incorrect\");\n                    }\n                    let init = scomps[0];\n                    let fin = scomps[1];\n                    if (verifyTarget(propName, init, fin)) {\n                        let propDef = { name: propName, initial: init, final: fin };\n                        propDefs.push(propDef);\n                    } else {\n                        throw Logger.error(\"component properties definition : \" + target + \" is incorrect\");\n                    }\n                }\n\n                Logger.debug(\"Animation Syntax breakdown of %s : \", sections[sdx], duration, advOptions, propDefs);\n                tweenParams.push({ resName: resName, duration: duration, advOptions: advOptions, props: propDefs });\n            }\n        } catch (e) {\n            Logger.error(\"BAD ANIMATION SYNTAX: %s\", true, e);\n            return tweenParams;\n        }\n\n        Logger.debug(\"tween params are valid with: \", tweenParams);\n\n        return tweenParams;\n    }\n\n    /**\n     * Prepare fonts and return the list of fonts available\n     *\n     * @return (Array[(String)]) : The array of font familys to use.\n     */\n    static getFonts() {\n        if (!Theatre.FONTS) {\n            // language specific fonts\n            switch (game.i18n.lang) {\n                case \"cn\":\n                    Theatre.instance.titleFont = \"SourceHanSerifSC-Medium\";\n                    Theatre.instance.textFont = \"BianHeiti\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\"SourceHanSerifSC-Medium\", \"BianHeiti\"];\n                    break;\n                case \"ja\":\n                    Theatre.instance.titleFont = \"Togalite\";\n                    Theatre.instance.textFont = \"NotoSansJPBold\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\n                        \"NotoSansJPBold\",\n                        \"Togalite\",\n                        \"GenEiLateMin_v2\",\n                        \"HannariMincho\",\n                        \"TogoshiMincho\",\n                        \"AppliMincho\",\n                        \"GenkaiMincho\",\n                        \"CorporateLogoBold\",\n                        \"CineCaption\",\n                        \"RiiPopkk\",\n                        \"MikaChan\",\n                        \"PopRumCute\",\n                        \"MaleCharacters\",\n                        \"AsobiMemogaki\",\n                        \"ArmedLemon\",\n                        \"ChikaraYowaku\",\n                        \"Otsutome\",\n                        \"ZinHenaBokuryu\",\n                        \"KohichiFeltPen\",\n                        \"KaisoNextB\",\n                        \"TegakiKakutto\",\n                        \"NicoMojiPlus\",\n                        \"Pigmo01\",\n                        \"NagurigakiCrayon\",\n                        \"TanukiPermanentMarker\",\n                        \"MinaMoji\",\n                        \"Zomzi\",\n                        \"ReallyScaryMinchotai\",\n                    ];\n                    break;\n                case \"ko\":\n                    Theatre.instance.titleFont = \"BMDohyeon\";\n                    Theatre.instance.textFont = \"NotoSansKRBold\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\n                        \"NotoSansKRBold\",\n                        \"BMDohyeon\",\n                        \"BMHannaPro\",\n                        \"BMYeonSung\",\n                        \"Sunflower\",\n                        \"BlackHanSans\",\n                        \"JejuHallasan\",\n                        \"KirangHaerang\",\n                        \"Daraehand\",\n                        \"GabiaSolmee\",\n                        \"NanumBrush\",\n                        \"HiMelody\",\n                        \"UhBeeSeHyun\",\n                        \"UhBeeJisyuk\",\n                        \"SSShinRegular\",\n                        \"SSShinB7Regular\",\n                        \"TvNEnjoyStories\",\n                    ];\n                    break;\n                case \"th\":\n                    Theatre.instance.titleFont = \"Prompt\";\n                    Theatre.instance.textFont = \"NotoSansThaiBold\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\n                        \"NotoSansThaiBold\",\n                        \"Prompt\",\n                        \"K2DBold\",\n                        \"Kanit\",\n                        \"Chonburi\",\n                        \"Charm\",\n                        \"Charmonman\",\n                        \"Srisakdi\",\n                        \"Sriracha\",\n                        \"Pattaya\",\n                        \"Athiti\",\n                        \"ChakraPetch\",\n                        \"Kodchasan\",\n                        \"Fahkwang\",\n                        \"Itim\",\n                        \"KoHo\",\n                        \"Krub\",\n                        \"Maitree\",\n                        \"Mali\",\n                        \"Niramit\",\n                        \"Pridi\",\n                        \"Sarabun\",\n                        \"Taviraj\",\n                        \"Thasadith\",\n                        \"BaiJamjuree\",\n                    ];\n                    break;\n                case \"en\":\n                    Theatre.instance.titleFont = \"Riffic\";\n                    Theatre.instance.textFont = \"SignikaBold\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\n                        \"Caslon\",\n                        \"CaslonAntique\",\n                        \"SignikaBold\",\n                        \"Riffic\",\n                        \"IronSans\",\n                        \"LinLibertine\",\n                        \"TimesNewRomance\",\n                        \"TimesNewYorker\",\n                        \"LPEducational\",\n                        \"Cardinal\",\n                        \"OldLondon\",\n                        \"StoneHenge\",\n                        \"SunnyDay\",\n                        \"PaulSignature\",\n                        \"LemonTuesday\",\n                        \"FairProsper\",\n                        \"BalletHarmony\",\n                        \"MagieraScript\",\n                        \"Cathallina\",\n                        \"Hamish\",\n                        \"DreamersBrush\",\n                        \"FastInMyCar\",\n                        \"ChildWriting\",\n                        \"Kindergarten\",\n                        \"FuturaHandwritten\",\n                        \"Fewriter\",\n                        \"TrashHand\",\n                        \"GoodBrush\",\n                        \"BaksoSapi\",\n                        \"SuplexmentaryComic\",\n                        \"ComicInk\",\n                        \"DreamyLand\",\n                        \"Yikes\",\n                        \"GangOfThree\",\n                        \"JianGkrik\",\n                        \"Yozakura\",\n                        \"Hiroshio\",\n                        \"ArabDances\",\n                        \"Rooters\",\n                        \"Subway\",\n                        \"Himagsikan\",\n                        \"MilTown\",\n                        \"Galactico\",\n                        \"Oko\",\n                        \"Ethnocentric\",\n                        \"VenusRising\",\n                        \"StampAct\",\n                        \"Kirsty\",\n                        \"Western\",\n                        \"BreakAway\",\n                        \"YoungerThanMe\",\n                        \"Underground\",\n                        \"VarsityTeam\",\n                        \"Valentino\",\n                        \"GlassHouses\",\n                        \"Makayla\",\n                        \"DancingVampyrish\",\n                        \"Codex\",\n                        \"DSNetStamped\",\n                        \"HappyFrushZero\",\n                        \"Shoplifter\",\n                        \"Stereofidelic\",\n                        \"Headache\",\n                        \"HorrorHouse\",\n                        \"GhostTheory2\",\n                        \"Syemox\",\n                        \"GhostChase\",\n                    ];\n                    break;\n                default:\n                    Theatre.instance.titleFont = \"Riffic\";\n                    Theatre.instance.textFont = \"SignikaBold\";\n                    Theatre.instance.fontWeight = \"normal\";\n                    Theatre.FONTS = [\n                        \"Caslon\",\n                        \"CaslonAntique\",\n                        \"SignikaBold\",\n                        \"Riffic\",\n                        \"LinLibertine\",\n                        \"TimesNewRomance\",\n                        \"LPEducational\",\n                        \"Cardinal\",\n                        \"OldLondon\",\n                        \"StoneHenge\",\n                        \"Alamain\",\n                        \"LemonTuesday\",\n                        \"FairProsper\",\n                        \"Exmouth\",\n                        \"Hamish\",\n                        \"DreamersBrush\",\n                        \"FuturaHandwritten\",\n                        \"Fewriter\",\n                        \"TrashHand\",\n                        \"GoodBrush\",\n                        \"BaksoSapi\",\n                        \"SuplexmentaryComic\",\n                        \"DreamyLand\",\n                        \"GangOfThree\",\n                        \"JianGkrik\",\n                        \"Yozakura\",\n                        \"Hiroshio\",\n                        \"Rooters\",\n                        \"Himagsikan\",\n                        \"Galactico\",\n                        \"Oko\",\n                        \"Ethnocentric\",\n                        \"VenusRising\",\n                        \"StampAct\",\n                        \"Kirsty\",\n                        \"YoungerThanMe\",\n                        \"Underground\",\n                        \"VarsityTeam\",\n                        \"Valentino\",\n                        \"Makayla\",\n                        \"HappyFrushZero\",\n                        \"Stereofidelic\",\n                        \"Headache\",\n                        \"HorrorHouse\",\n                        \"Syemox\",\n                    ];\n                    break;\n            }\n            // Load some essential fonts we use in PIXI\n            FontsLoader.load({\n                custom: {\n                    families: [Theatre.instance.titleFont, Theatre.instance.textFont],\n                },\n            });\n            // async load everything else\n            let oFonts = [];\n            for (let idx = Theatre.FONTS.length - 1; idx >= 0; --idx) {\n                if (Theatre.FONTS[idx] == Theatre.instance.titleFont || Theatre.FONTS[idx] == Theatre.instance.textFont)\n                    continue;\n                oFonts.push(Theatre.FONTS[idx]);\n            }\n            var aLoader = async function (fonts) {\n                FontsLoader.load({\n                    custom: {\n                        families: fonts,\n                    },\n                });\n            };\n\n            aLoader(oFonts);\n        }\n\n        return Theatre.FONTS;\n    }\n\n    static getActorDisplayName(actorId) {\n        const actor = game.actors.get(actorId);\n        if (game.modules.get(\"anonymous\")?.active) {\n            return game.modules.get(\"anonymous\").api.getName(actor);\n        }\n        if (game.modules.get(\"combat-utility-belt\")?.active) {\n            if (game.settings.get(\"combat-utility-belt\", \"enableHideNPCNames\")) {\n                if (game.cub.hideNames.constructor.shouldReplaceName(actor)) {\n                    return game.cub.hideNames.constructor.getReplacementName(actor);\n                }\n            }\n        }\n        return actor.name;\n    }\n\n    /**\n     * Get the emotes for the actor by merging\n     * whatever is in the emotes flag with the default base\n     *\n     * @param actorId (String) : The actorId of the actor to get emotes from.\n     * @param disableDefault (Boolean) : Wither or not default emotes are disabled.\n     *                                   in which case, we don't merge the actor\n     *                                   emotes with the default ones.\n     *\n     * @return (Object) : An Object containg the emotes for the requested actorId.\n     */\n    static getActorEmotes(actorId, disableDefault) {\n        let actor = game.actors.get(actorId);\n        let ae, de, re;\n\n        if (actor && actor.flags.theatre) {\n            ae = actor.flags.theatre.emotes;\n            if (disableDefault) {\n                re = ae;\n            } else {\n                de = Theatre.getDefaultEmotes();\n                re = foundry.utils.mergeObject(de, ae);\n            }\n        } else re = Theatre.getDefaultEmotes();\n\n        return re;\n    }\n\n    /**\n     * Get the rigging resources for the actor by merging\n     * whater is in the rigging.resources flag with the default base\n     *\n     * @params actorId (String) : The actorId of the actor to get rigging resources\n     *                            from.\n     *\n     * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n     *                             representing the rigging resource map for the specified actorId.\n     */\n    static getActorRiggingResources(actorId) {\n        let actor = game.actors.get(actorId);\n        let ar, dr, rr;\n\n        dr = Theatre.getDefaultRiggingResources();\n        if (actor && actor.flags.theatre && actor.flags.theatre.rigging && actor.flags.theatre.rigging.resources) {\n            ar = actor.flags.theatre.rigging.resources;\n            rr = defaultRiggingResources.concat(ar);\n        } else rr = dr;\n\n        return rr;\n    }\n\n    /**\n     * Default rigging resources\n     *\n     * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n     *                             representing the default rigging resource map.\n     */\n    static getDefaultRiggingResources() {\n        return [\n            // bubbles\n            { name: \"angry\", path: \"modules/theatre/assets/graphics/bubbles/angry.png\" },\n            { name: \"frustrated\", path: \"modules/theatre/assets/graphics/bubbles/frustrated.png\" },\n            { name: \"annoyed\", path: \"modules/theatre/assets/graphics/bubbles/annoyed.png\" },\n            { name: \"hearts\", path: \"modules/theatre/assets/graphics/bubbles/hearts.png\" },\n            { name: \"sleeping\", path: \"modules/theatre/assets/graphics/bubbles/sleeping.png\" },\n            { name: \"surprised\", path: \"modules/theatre/assets/graphics/bubbles/surprised.png\" },\n            { name: \"confused\", path: \"modules/theatre/assets/graphics/bubbles/confused.png\" },\n            { name: \"awe-struck\", path: \"modules/theatre/assets/graphics/bubbles/awe-struck.png\" },\n            { name: \"kiss\", path: \"modules/theatre/assets/graphics/bubbles/kiss.png\" },\n            { name: \"blushing\", path: \"modules/theatre/assets/graphics/bubbles/blushing.png\" },\n            { name: \"cry\", path: \"modules/theatre/assets/graphics/bubbles/cry.png\" },\n            { name: \"dissatisfied\", path: \"modules/theatre/assets/graphics/bubbles/dissatisfied.png\" },\n            { name: \"dizzy\", path: \"modules/theatre/assets/graphics/bubbles/dizzy.png\" },\n            { name: \"evil\", path: \"modules/theatre/assets/graphics/bubbles/evil.png\" },\n            { name: \"frown\", path: \"modules/theatre/assets/graphics/bubbles/frown.png\" },\n            { name: \"happy\", path: \"modules/theatre/assets/graphics/bubbles/happy.png\" },\n            { name: \"grin\", path: \"modules/theatre/assets/graphics/bubbles/grin.png\" },\n            { name: \"happytears\", path: \"modules/theatre/assets/graphics/bubbles/happytears.png\" },\n            { name: \"laughing\", path: \"modules/theatre/assets/graphics/bubbles/laughing.png\" },\n            { name: \"laughingsquint\", path: \"modules/theatre/assets/graphics/bubbles/laughingsquint.png\" },\n            { name: \"meh\", path: \"modules/theatre/assets/graphics/bubbles/meh.png\" },\n            { name: \"worried\", path: \"modules/theatre/assets/graphics/bubbles/worried.png\" },\n            { name: \"panic\", path: \"modules/theatre/assets/graphics/bubbles/panic.png\" },\n            { name: \"rofl\", path: \"modules/theatre/assets/graphics/bubbles/rofl.png\" },\n            { name: \"sad\", path: \"modules/theatre/assets/graphics/bubbles/sad.png\" },\n            { name: \"scared\", path: \"modules/theatre/assets/graphics/bubbles/scared.png\" },\n            { name: \"smile\", path: \"modules/theatre/assets/graphics/bubbles/smile.png\" },\n            { name: \"playful\", path: \"modules/theatre/assets/graphics/bubbles/playful.png\" },\n            { name: \"smug\", path: \"modules/theatre/assets/graphics/bubbles/smug.png\" },\n            { name: \"tongue\", path: \"modules/theatre/assets/graphics/bubbles/tongue.png\" },\n            { name: \"wink\", path: \"modules/theatre/assets/graphics/bubbles/wink.png\" },\n            { name: \"speechless\", path: \"modules/theatre/assets/graphics/bubbles/speechless.png\" },\n            { name: \"thinking\", path: \"modules/theatre/assets/graphics/bubbles/thinking.png\" },\n            { name: \"idea\", path: \"modules/theatre/assets/graphics/bubbles/idea.png\" },\n            { name: \"serious\", path: \"modules/theatre/assets/graphics/bubbles/serious.png\" },\n            { name: \"innocent\", path: \"modules/theatre/assets/graphics/bubbles/innocent.png\" },\n            { name: \"carefree\", path: \"modules/theatre/assets/graphics/bubbles/carefree.png\" },\n\n            // effects\n            { name: \"swirl\", path: \"modules/theatre/assets/graphics/effects/swirl.png\" },\n            { name: \"sweatdrop\", path: \"modules/theatre/assets/graphics/effects/sweatdrop.png\" },\n            { name: \"notice\", path: \"modules/theatre/assets/graphics/effects/notice.png\" },\n            { name: \"loud\", path: \"modules/theatre/assets/graphics/effects/loud.png\" },\n            { name: \"semiloud\", path: \"modules/theatre/assets/graphics/effects/semi-loud.png\" },\n            { name: \"veins\", path: \"modules/theatre/assets/graphics/effects/veins.png\" },\n            { name: \"veins_red\", path: \"modules/theatre/assets/graphics/effects/veins_red.png\" },\n            { name: \"twisty\", path: \"modules/theatre/assets/graphics/effects/twisty.png\" },\n            { name: \"glimmer\", path: \"modules/theatre/assets/graphics/effects/glimmer.png\" },\n            { name: \"heart\", path: \"modules/theatre/assets/graphics/effects/heart.png\" },\n            { name: \"puff\", path: \"modules/theatre/assets/graphics/effects/puff.png\" },\n            { name: \"line\", path: \"modules/theatre/assets/graphics/effects/line.png\" },\n            { name: \"linesteep\", path: \"modules/theatre/assets/graphics/effects/line_steep.png\" },\n            { name: \"star\", path: \"modules/theatre/assets/graphics/effects/star.png\" },\n            { name: \"musicnote\", path: \"modules/theatre/assets/graphics/effects/musicnote.png\" },\n            //{name: \"ghostball\", path: \"modules/theatre/assets/graphics/effects/ghostball.png\"},\n            { name: \"ghostball1\", path: \"modules/theatre/assets/graphics/effects/ghostball1.png\" },\n            { name: \"ghostball2\", path: \"modules/theatre/assets/graphics/effects/ghostball2.png\" },\n            { name: \"scribbleball\", path: \"modules/theatre/assets/graphics/effects/scribbleball.png\" },\n            { name: \"thoughtbubble\", path: \"modules/theatre/assets/graphics/effects/thoughtbubble.png\" },\n            { name: \"bubbledot\", path: \"modules/theatre/assets/graphics/effects/bubbledot.png\" },\n            { name: \"dot\", path: \"modules/theatre/assets/graphics/effects/dot.png\" },\n            { name: \"ziggy\", path: \"modules/theatre/assets/graphics/effects/ziggy.png\" },\n            { name: \"sinking\", path: \"modules/theatre/assets/graphics/effects/sinking.png\" },\n            { name: \"zzz\", path: \"modules/theatre/assets/graphics/effects/zzz.png\" },\n            { name: \"lightbulb\", path: \"modules/theatre/assets/graphics/effects/lightbulb.png\" },\n            { name: \"sigh\", path: \"modules/theatre/assets/graphics/effects/sigh.png\" },\n            { name: \"halo\", path: \"modules/theatre/assets/graphics/effects/halo.png\" },\n            { name: \"blush\", path: \"modules/theatre/assets/graphics/effects/blush.png\" },\n            { name: \"miasma\", path: \"modules/theatre/assets/graphics/effects/miasma.png\" },\n            { name: \"darkness\", path: \"modules/theatre/assets/graphics/effects/darkness.png\" },\n            { name: \"tears\", path: \"modules/theatre/assets/graphics/effects/tears.png\" },\n        ];\n    }\n\n    /**\n     * Get default emotes, immutable\n     *\n     * @return (Object) : An Object, whose properties are the default set\n     *                     emotes.\n     */\n    static getDefaultEmotes() {\n        return {\n            smile: {\n                name: \"smile\",\n                fatype: \"far\",\n                faname: \"fa-smile\",\n                label: game.i18n.localize(\"Theatre.Emote.Smile\"),\n                rigging: {\n                    animations: [{ name: \"smile\", syntax: \"smile|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" }],\n                },\n            },\n            grin: {\n                name: \"grin\",\n                fatype: \"far\",\n                faname: \"fa-grin\",\n                label: game.i18n.localize(\"Theatre.Emote.Grin\"),\n                rigging: {\n                    animations: [{ name: \"grin\", syntax: \"grin|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" }],\n                },\n            },\n            happy: {\n                name: \"happy\",\n                fatype: \"far\",\n                faname: \"fa-smile-beam\",\n                label: game.i18n.localize(\"Theatre.Emote.Happy\"),\n                rigging: {\n                    animations: [\n                        { name: \"happy\", syntax: \"happy|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        { name: \"line_a\", syntax: \"line|0.5;(ease:bounce);x:45%,40%;y:5%,0%;rotation:-20,-20\" },\n                        { name: \"line_b\", syntax: \"line|0.5;(ease:bounce);x:35%,25%;y:15%,12%;rotation:-65,-65\" },\n                        { name: \"line_c\", syntax: \"line|0.5;(ease:bounce);x:55%,60%;y:5%,0%;rotation:20,20\" },\n                        { name: \"line_d\", syntax: \"line|0.5;(ease:bounce);x:65%,75%;y:15%,12%;rotation:65,65\" },\n                    ],\n                },\n            },\n            happytears: {\n                name: \"happytears\",\n                fatype: \"far\",\n                faname: \"fa-grin-tears\",\n                label: game.i18n.localize(\"Theatre.Emote.HappyTears\"),\n                rigging: {\n                    animations: [\n                        { name: \"happytears\", syntax: \"happytears|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"line_a\",\n                            syntax: \"line|0.5;(ease:bounce);x:40%,35%;y:5%,0%;rotation:-20,-20|0.5;(repeat:-1,yoyo:true);scaleX:1,1.2;scaleY:1,1.5\",\n                        },\n                        {\n                            name: \"line_b\",\n                            syntax: \"line|0.5;(ease:bounce);x:30%,20%;y:15%,12%;rotation:-65,-65|0.5;(repeat:-1,yoyo:true);scaleX:1,1.2;scaleY:1,1.5\",\n                        },\n                        {\n                            name: \"line_c\",\n                            syntax: \"line|0.5;(ease:bounce);x:60%,65%;y:5%,0%;rotation:20,20|0.5;(repeat:-1,yoyo:true);scaleX:1,1.2;scaleY:1,1.5\",\n                        },\n                        {\n                            name: \"line_d\",\n                            syntax: \"line|0.5;(ease:bounce);x:70%,80%;y:15%,12%;rotation:65,65|0.5;(repeat:-1,yoyo:true);scaleX:1,1.2;scaleY:1,1.5\",\n                        },\n                        {\n                            name: \"tears_a\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:1.7);x:60%,110%;y:25%,40%;rotation:-30,-30;alpha:0.5,0|0;scaleX:-1,-1\",\n                        },\n                        {\n                            name: \"tears_b\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.8);x:40%,-10%;y:25%,40%;rotation:30,30;alpha:0.5,0\",\n                        },\n                    ],\n                },\n            },\n            dissatisfied: {\n                name: \"dissatisfied\",\n                fatype: \"far\",\n                faname: \"fa-frown-open\",\n                label: game.i18n.localize(\"Theatre.Emote.Dissatisfied\"),\n                rigging: {\n                    animations: [\n                        { name: \"dissatisfied\", syntax: \"dissatisfied|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                    ],\n                },\n            },\n            frown: {\n                name: \"frown\",\n                fatype: \"far\",\n                faname: \"fa-frown\",\n                label: game.i18n.localize(\"Theatre.Emote.Frown\"),\n                rigging: {\n                    animations: [\n                        { name: \"frown\", syntax: \"frown|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        { name: \"sinking\", syntax: \"sinking|0.5;(ease:power2);x:50%,50%;y:-20%,15%;alpha:0,0.5\" },\n                    ],\n                },\n            },\n            sad: {\n                name: \"sad\",\n                fatype: \"far\",\n                faname: \"fa-sad-tear\",\n                label: game.i18n.localize(\"Theatre.Emote.Sad\"),\n                rigging: {\n                    animations: [\n                        { name: \"sad\", syntax: \"sad|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"swirl_a\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,75%;y:0%,10%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_b\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,65%;y:0%,40%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_c\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,90%;y:110%,50%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_d\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,85%;y:110%,70%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_e\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,25%;y:0%,15%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_f\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,15%;y:0%,38%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_g\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,20%;y:110%,55%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_h\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,35%;y:110%,67%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_i\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,10%;y:110%,85%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_j\",\n                            syntax: \"swirl|0.5;(ease:power4);x:-10%,45%;y:110%,95%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_k\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,95%;y:110%,90%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"swirl_l\",\n                            syntax: \"swirl|0.5;(ease:power4);x:110%,70%;y:110%,82%;alpha:0,1|1;(repeat:-1);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            cry: {\n                name: \"cry\",\n                fatype: \"far\",\n                faname: \"fa-sad-cry\",\n                label: game.i18n.localize(\"Theatre.Emote.Cry\"),\n                rigging: {\n                    animations: [\n                        { name: \"cry\", syntax: \"cry|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"tears_a\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.7);x:60%,110%;y:25%,40%;rotation:-30,-30;alpha:0.5,0|0;scaleX:-1,-1\",\n                        },\n                        {\n                            name: \"tears_b\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.3);x:40%,-10%;y:25%,40%;rotation:30,30;alpha:0.5,0\",\n                        },\n                        {\n                            name: \"tears_c\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.8);x:60%,90%;y:25%,50%;rotation:-10,-10;alpha:0.5,0|0;scaleX:-1,-1\",\n                        },\n                        {\n                            name: \"tears_d\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:1.0);x:40%,10%;y:25%,50%;rotation:10,10;alpha:0.5,0\",\n                        },\n                        {\n                            name: \"tears_e\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.2);x:60%,90%;y:25%,30%;rotation:-50,-50;alpha:0.5,0|0;scaleX:-1,-1\",\n                        },\n                        {\n                            name: \"tears_f\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:1.2);x:40%,10%;y:25%,30%;rotation:50,50;alpha:0.5,0\",\n                        },\n                    ],\n                },\n            },\n            serious: {\n                name: \"serious\",\n                fatype: \"far\",\n                faname: \"fa-meh-rolling-eyes\",\n                image: \"modules/theatre/assets/graphics/emotes/serious.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Serious\"),\n                rigging: {\n                    animations: [{ name: \"serious\", syntax: \"serious|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" }],\n                },\n            },\n            annoyed: {\n                name: \"annoyed\",\n                fatype: \"far\",\n                faname: \"fa-meh-rolling-eyes\",\n                label: game.i18n.localize(\"Theatre.Emote.Annoyed\"),\n                rigging: {\n                    animations: [\n                        { name: \"annoyed\", syntax: \"annoyed|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"ziggy\",\n                            syntax: \"ziggy|0;x:25%,25%;y:20%,20%|0.25;(repeat:-1,yoyo:true);rotation:-2,2\",\n                        },\n                        {\n                            name: \"ziggy_2\",\n                            syntax: \"ziggy|1;(repeat:-1,delay:1,repeatDelay:2);scaleX:1,2;scaleY:1,2;x:25%,25%;y:20%,20%;alpha:0.5,0|0.25;(repeat:-1,yoyo:true);rotation:0,5\",\n                        },\n                    ],\n                },\n            },\n            frustrated: {\n                name: \"frustrated\",\n                fatype: \"far\",\n                faname: \"fa-meh-rolling-eyes\",\n                image: \"modules/theatre/assets/graphics/emotes/frustrated.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Frustrated\"),\n                rigging: {\n                    animations: [\n                        { name: \"frustrated\", syntax: \"frustrated|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"veins\",\n                            syntax: \"veins|0.5;x:45%,45%;y:10%,10%;alpha:0,1|1;(repeat:-1,yoyo:true,ease:bounce);scaleX:0.7,1;scaleY:0.7,1\",\n                        },\n                    ],\n                },\n            },\n            angry: {\n                name: \"angry\",\n                fatype: \"far\",\n                faname: \"fa-angry\",\n                label: game.i18n.localize(\"Theatre.Emote.Angry\"),\n                rigging: {\n                    animations: [\n                        { name: \"angry\", syntax: \"angry|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"veins\",\n                            syntax: \"veins_red|0.5;x:45%,45%;y:10%,10%;alpha:0,1|1;(repeat:-1,yoyo:true,ease:elastic);scaleX:0.5,1;scaleY:0.5,1|0.25;(repeat:-1,yoyo:true);rotation:0,10\",\n                        },\n                        {\n                            name: \"puff_a\",\n                            syntax: \"puff|0;x:80%,80%;y:15%,15%;rotation:0,0|1;(repeat:-1,delay:1,yoyo:true,ease:power4);scaleX:0.3,1;scaleY:0.3,1;alpha:0,0.5\",\n                        },\n                        {\n                            name: \"puff_b\",\n                            syntax: \"puff|0;x:20%,20%;y:15%,15%;rotation:0,0|1;(repeat:-1,delay:1.5,yoyo:true,ease:power4);scaleX:-0.3,-1;scaleY:0.3,1;alpha:0,0.5\",\n                        },\n                        {\n                            name: \"puff_c\",\n                            syntax: \"puff|0;x:70%,70%;y:5%,5%;rotation:330,330|1;(repeat:-1,delay:2,yoyo:true,ease:power4);scaleX:0.3,1;scaleY:0.3,1;alpha:0,0.5\",\n                        },\n                        {\n                            name: \"puff_d\",\n                            syntax: \"puff|0;x:30%,30%;y:5%,5%;rotation:30,30|1;(repeat:-1,delay:2.5,yoyo:true,ease:power4);scaleX:-0.3,-1;scaleY:0.3,1;alpha:0,0.5\",\n                        },\n                    ],\n                },\n            },\n            laughing: {\n                name: \"laughing\",\n                fatype: \"far\",\n                faname: \"fa-laugh-beam\",\n                label: game.i18n.localize(\"Theatre.Emote.Laughing\"),\n                rigging: {\n                    animations: [\n                        { name: \"laughing\", syntax: \"laughing|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"semiloud\",\n                            syntax: \"semiloud|0.5;x:25%,25%;y:20%,20%;alpha:0,1|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1|0.25;(repeat:-1,yoyo:true);rotation:-1,1\",\n                        },\n                    ],\n                },\n            },\n            laughingsquint: {\n                name: \"laughingsquint\",\n                fatype: \"far\",\n                faname: \"fa-laugh-squint\",\n                label: game.i18n.localize(\"Theatre.Emote.LaughingSquint\"),\n                rigging: {\n                    animations: [\n                        {\n                            name: \"laughingsquint\",\n                            syntax: \"laughingsquint|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\",\n                        },\n                        {\n                            name: \"loud\",\n                            syntax: \"loud|0.5;x:25%,25%;y:20%,20%;alpha:0,1|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1|0.125;(repeat:-1,yoyo:true);rotation:-1,1\",\n                        },\n                    ],\n                },\n            },\n            rofl: {\n                name: \"rofl\",\n                fatype: \"far\",\n                faname: \"fa-grin-squint-tears\",\n                label: game.i18n.localize(\"Theatre.Emote.ROFL\"),\n                rigging: {\n                    animations: [\n                        { name: \"rofl\", syntax: \"rofl|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"loud_a\",\n                            syntax: \"loud|0.5;(ease:bounce);x:20%,20%;y:20%,20%;scaleX:0.1,1;scaleY:0.1,1|0.125;(repeat:-1,yoyo:true);rotation:-2,2\",\n                        },\n                        {\n                            name: \"loud_b\",\n                            syntax: \"loud|0.5;(ease:bounce);x:80%,80%;y:20%,20%;scaleX:-0.1,-1;scaleY:0.1,1|0.125;(repeat:-1,yoyo:true);rotation:-2,2\",\n                        },\n                        {\n                            name: \"loud_c\",\n                            syntax: \"loud|0;x:20%,20%;y:20%,20%|0.125;(repeat:-1,yoyo:true);rotation:-2,2|1;(repeat:-1);scaleX:1,1.5;scaleY:1,2;alpha:0.25,0\",\n                        },\n                        {\n                            name: \"loud_d\",\n                            syntax: \"loud|0;x:80%,80%;y:20%,20%|0.125;(repeat:-1,yoyo:true);rotation:-2,2|1;(repeat:-1);scaleX:-1,-1.5;scaleY:1,2;alpha:0.25,0\",\n                        },\n                        {\n                            name: \"tears_a\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:1.7);x:60%,110%;y:25%,40%;rotation:-30,-30;alpha:0.5,0|0;scaleX:-1,-1\",\n                        },\n                        {\n                            name: \"tears_b\",\n                            syntax: \"tears|0.5;(repeat:-1,repeatDelay:0.8);x:40%,-10%;y:25%,40%;rotation:30,30;alpha:0.5,0\",\n                        },\n                    ],\n                },\n            },\n            worried: {\n                name: \"worried\",\n                fatype: \"far\",\n                faname: \"fa-grin-beam-sweat\",\n                label: game.i18n.localize(\"Theatre.Emote.Worried\"),\n                rigging: {\n                    animations: [\n                        { name: \"worried\", syntax: \"worried|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        { name: \"sweatdrop\", syntax: \"sweatdrop|2;(ease:bounce);x:30%,30%;y:0%,25%;alpha:0,1\" },\n                    ],\n                },\n            },\n            surprised: {\n                name: \"surprised\",\n                fatype: \"far\",\n                faname: \"fa-surprise\",\n                label: game.i18n.localize(\"Theatre.Emote.Surprised\"),\n                rigging: {\n                    animations: [\n                        { name: \"surprised\", syntax: \"surprised|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"notice\",\n                            syntax: \"notice|0.5;x:25%,25%;y:20%,20%;alpha:0,1|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1\",\n                        },\n                    ],\n                },\n            },\n            \"awe-struck\": {\n                name: \"awe-struck\",\n                fatype: \"far\",\n                faname: \"fa-grin-stars\",\n                label: game.i18n.localize(\"Theatre.Emote.Awe-Struck\"),\n                rigging: {\n                    animations: [\n                        { name: \"awe-struck\", syntax: \"awe-struck|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"glimmer_a\",\n                            syntax: \"glimmer|0.5;x:10%,10%;y:58%,58%|0.5;(delay:0.2,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_b\",\n                            syntax: \"glimmer|0.5;x:85%,85%;y:20%,20%|0.5;(delay:0.3,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_c\",\n                            syntax: \"glimmer|0.5;x:40%,40%;y:45%,45%|0.5;(delay:0.5,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_d\",\n                            syntax: \"glimmer|0.5;x:35%,35%;y:30%,30%|0.5;(delay:0.6,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_e\",\n                            syntax: \"glimmer|0.5;x:65%,65%;y:35%,35%|0.5;(delay:0.4,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_f\",\n                            syntax: \"glimmer|0.5;x:80%,80%;y:50%,50%|0.5;(delay:0.1,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_g\",\n                            syntax: \"glimmer|0.5;x:16%,16%;y:81%,81%|0.5;(delay:0.8,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_h\",\n                            syntax: \"glimmer|0.5;x:55%,55%;y:64%,64%|0.5;(delay:0.9,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_i\",\n                            syntax: \"glimmer|0.5;x:44%,44%;y:95%,95%|0.5;(delay:0.7,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_j\",\n                            syntax: \"glimmer|0.5;x:67%,67%;y:84%,84%|0.5;(delay:0.35,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_k\",\n                            syntax: \"glimmer|0.5;x:44%,44%;y:70%,70%|0.5;(delay:0,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"glimmer_l\",\n                            syntax: \"glimmer|0.5;x:20%,20%;y:23%,23%|0.5;(delay:0.65,repeat:-1,yoyo:true);scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                    ],\n                },\n            },\n            blushing: {\n                name: \"blushing\",\n                fatype: \"far\",\n                faname: \"fa-flushed\",\n                label: game.i18n.localize(\"Theatre.Emote.Blushing\"),\n                rigging: {\n                    animations: [\n                        { name: \"blushing\", syntax: \"blushing|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"blush\",\n                            syntax: \"blush|0.5;x:25%,25%;y:25%,25%|2;(ease:sineInOut,repeat:-1,yoyo:true);scaleX:0.9,1;scaleY:0.9,1;alpha:0.5,1|0.5;(repeat:-1,yoyo:true);rotation:-3,3\",\n                        },\n                    ],\n                },\n            },\n            hearts: {\n                name: \"hearts\",\n                fatype: \"far\",\n                faname: \"fa-grin-hearts\",\n                label: game.i18n.localize(\"Theatre.Emote.Hearts\"),\n                rigging: {\n                    animations: [\n                        { name: \"hearts\", syntax: \"hearts|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"heart_a\",\n                            syntax: \"heart|2;(repeat:-1,delay:1.3);y:110%,-10%;alpha:1,0|0.5;(delay:0.1,repeat:-1,yoyo:true);x:5%,10%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_b\",\n                            syntax: \"heart|2;(repeat:-1,delay:0.3);y:110%,-10%;alpha:1,0|0.5;(delay:0.9,repeat:-1,yoyo:true);x:5%,10%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_c\",\n                            syntax: \"heart|2;(repeat:-1,delay:0.8);y:110%,-10%;alpha:1,0|0.5;(delay:0.2,repeat:-1,yoyo:true);x:15%,20%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_d\",\n                            syntax: \"heart|2;(repeat:-1,delay:0.5);y:110%,-10%;alpha:1,0|0.5;(delay:0.8,repeat:-1,yoyo:true);x:25%,30%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_e\",\n                            syntax: \"heart|2;(repeat:-1,delay:1.7);y:110%,-10%;alpha:1,0|0.5;(delay:0.3,repeat:-1,yoyo:true);x:35%,40%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_f\",\n                            syntax: \"heart|2;(repeat:-1,delay:2);y:110%,-10%;alpha:1,0|0.5;(delay:0.7,repeat:-1,yoyo:true);x:45%,50%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_g\",\n                            syntax: \"heart|2;(repeat:-1,delay:1.5);y:110%,-10%;alpha:1,0|0.5;(delay:0.4,repeat:-1,yoyo:true);x:55%,60%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_h\",\n                            syntax: \"heart|2;(repeat:-1,delay:0.7);y:110%,-10%;alpha:1,0|0.5;(delay:0.6,repeat:-1,yoyo:true);x:65%,70%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_i\",\n                            syntax: \"heart|2;(repeat:-1,delay:1.7);y:110%,-10%;alpha:1,0|0.5;(delay:0.5,repeat:-1,yoyo:true);x:75%,80%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_j\",\n                            syntax: \"heart|2;(repeat:-1,delay:0.4);y:110%,-10%;alpha:1,0|0.5;(delay:0.35,repeat:-1,yoyo:true);x:85%,90%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                        {\n                            name: \"heart_k\",\n                            syntax: \"heart|2;(repeat:-1,delay:2.3);y:110%,-10%;alpha:1,0|0.5;(delay:0.25,repeat:-1,yoyo:true);x:95%,100%|0.25;(delay:0.2,repeat:-1,yoyo:true,ease:bounce);scaleX:0.8,1;scaleY:0.8,1\",\n                        },\n                    ],\n                },\n            },\n            kiss: {\n                name: \"kiss\",\n                fatype: \"far\",\n                faname: \"fa-kiss-wink-heart\",\n                label: game.i18n.localize(\"Theatre.Emote.Kiss\"),\n                rigging: {\n                    animations: [\n                        { name: \"kiss\", syntax: \"kiss|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"blowkiss\",\n                            syntax: \"heart|4;(ease:expo);x:45%,-10%;alpha:1,0|0.25;(repeat:6,yoyo:true);y:25%,30%|0.25;(repeat:6,yoyo:true,ease:power4);scaleX:0.8,1.5;scaleY:0.8,1.5\",\n                        },\n                    ],\n                },\n            },\n            thinking: {\n                name: \"thinking\",\n                fatype: \"far\",\n                faname: \"fa-blank\",\n                image: \"modules/theatre/assets/graphics/emotes/thinking.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Thinking\"),\n                rigging: {\n                    animations: [\n                        { name: \"thinking\", syntax: \"thinking|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"thoughtbubble\",\n                            syntax: \"thoughtbubble|0.5;(ease:power3);x:25%,25%;y:10%,10%;alpha:0,1|0.5;(repeat:-1,yoyo:true);scaleX:0.95,1;scaleY:0.95,1\",\n                        },\n                        {\n                            name: \"bubbledot_a\",\n                            syntax: \"bubbledot|0.5;(ease:power3);x:28%,28%;y:18%,18%;alpha:0,1|1;(repeat:-1,yoyo:true,repeatDelay:0.3);scaleX:0.5,1;scaleY:0.5,1|5;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"bubbledot_b\",\n                            syntax: \"bubbledot|0.5;(ease:power3);x:31%,31%;y:21%,21%;alpha:0,1|1;(repeat:-1,yoyo:true,repeatDelay:0.1);scaleX:0.5,1;scaleY:0.5,1|5;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"bubbledot_c\",\n                            syntax: \"bubbledot|0.5;(ease:power3);x:34%,34%;y:24%,24%;alpha:0,1|1;(repeat:-1,yoyo:true,repeatDelay:0.5);scaleX:0.5,1;scaleY:0.5,1|5;(repeat:-1);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            confused: {\n                name: \"confused\",\n                fatype: \"far\",\n                faname: \"fa-question-circle\",\n                image: \"modules/theatre/assets/graphics/emotes/confused.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Confused\"),\n                rigging: {\n                    animations: [\n                        { name: \"confused\", syntax: \"confused|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"scribbleball\",\n                            syntax: \"scribbleball|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1;x:45%,45%;y:0%,0%;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:0,5\",\n                        },\n                    ],\n                },\n            },\n            idea: {\n                name: \"idea\",\n                fatype: \"far\",\n                faname: \"fa-lightbulb\",\n                image: \"modules/theatre/assets/graphics/emotes/idea.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Idea\"),\n                rigging: {\n                    animations: [\n                        { name: \"idea\", syntax: \"idea|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"lightbulb\",\n                            syntax: \"lightbulb|0.5;(ease:bounce);x:50%,50%;y:-10%,-10%;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:0,5|1;(repeat:-1,yoyo:true);scaleX:1,1.3;scaleY:1,1.3\",\n                        },\n                    ],\n                },\n            },\n            meh: {\n                name: \"meh\",\n                fatype: \"far\",\n                faname: \"fa-meh\",\n                label: game.i18n.localize(\"Theatre.Emote.Meh\"),\n                rigging: {\n                    animations: [\n                        { name: \"meh\", syntax: \"meh|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"sigh\",\n                            syntax: \"sigh|3;(ease:power2);x:30%,10%;y:25%,45%;alpha:1,0;rotation:225,225;scaleX:1,1.5;scaleY:1,1.5\",\n                        },\n                    ],\n                },\n            },\n            smug: {\n                name: \"smug\",\n                fatype: \"far\",\n                faname: \"fa-grin-tongue-wink\",\n                image: \"modules/theatre/assets/graphics/emotes/smug.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Smug\"),\n                rigging: {\n                    animations: [{ name: \"smug\", syntax: \"smug|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" }],\n                },\n            },\n            wink: {\n                name: \"wink\",\n                fatype: \"far\",\n                faname: \"fa-grin-wink\",\n                label: game.i18n.localize(\"Theatre.Emote.Wink\"),\n                rigging: {\n                    animations: [\n                        { name: \"wink\", syntax: \"wink|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"kawaii_a\",\n                            syntax: \"star|4;(ease:expo);x:45%,-10%;y:25%,25%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_b\",\n                            syntax: \"star|3;(ease:expo);x:45%,10%;y:25%,12%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_c\",\n                            syntax: \"star|3;(ease:expo);x:45%,10%;y:25%,38%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            tongue: {\n                name: \"tongue\",\n                fatype: \"far\",\n                faname: \"fa-grin-tongue\",\n                label: game.i18n.localize(\"Theatre.Emote.Tongue\"),\n                rigging: {\n                    animations: [\n                        { name: \"tongue\", syntax: \"tongue|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"kawaii\",\n                            syntax: \"star|4;(ease:expo,delay:2);x:30%,30%;y:25%,25%;alpha:1,0;scaleX:1.3,0.1;scaleY:1.3,0.1|2;(repeat:4);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            playful: {\n                name: \"playful\",\n                fatype: \"far\",\n                faname: \"fa-grin-tongue-wink\",\n                label: game.i18n.localize(\"Theatre.Emote.Playful\"),\n                rigging: {\n                    animations: [\n                        { name: \"playful\", syntax: \"playful|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"kawaii_a\",\n                            syntax: \"star|3;(ease:expo);x:40%,-10%;y:25%,-15%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_b\",\n                            syntax: \"star|4;(ease:expo);x:40%,-40%;y:25%,30%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_c\",\n                            syntax: \"star|3;(ease:expo);x:40%,-10%;y:25%,55%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_d\",\n                            syntax: \"star|3;(ease:expo);x:60%,110%;y:25%,-15%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_e\",\n                            syntax: \"star|4;(ease:expo);x:60%,140%;y:25%,30%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_f\",\n                            syntax: \"star|3;(ease:expo);x:60%,110%;y:25%,55%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_g\",\n                            syntax: \"star|4;(ease:expo);x:50%,50%;y:15%,-35%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                        {\n                            name: \"kawaii_h\",\n                            syntax: \"star|4;(ease:expo);x:50%,50%;y:35%,85%;alpha:1,0|2;(repeat:4);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            mischevious: {\n                name: \"mischevious\",\n                fatype: \"fas\",\n                faname: \"fa-book-dead\",\n                image: \"modules/theatre/assets/graphics/emotes/evil.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Mischevious\"),\n                rigging: {\n                    animations: [\n                        { name: \"evil\", syntax: \"evil|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        { name: \"shroud\", syntax: \"darkness|0;x:50%,50%;y:50%,50%\" },\n                        {\n                            name: \"miasma_a\",\n                            syntax: \"miasma|0;x:25%,25%;y:78%,78%|3;(repeat:-1,delay:0.3);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_b\",\n                            syntax: \"miasma|0;x:73%,73%;y:68%,68%|3;(repeat:-1,delay:1.3);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_c\",\n                            syntax: \"miasma|0;x:15%,15%;y:60%,60%|3;(repeat:-1,delay:0.8);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_d\",\n                            syntax: \"miasma|0;x:45%,45%;y:85%,85%|3;(repeat:-1,delay:2.6);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_e\",\n                            syntax: \"miasma|0;x:90%,90%;y:80%,80%|3;(repeat:-1,delay:3.5);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_f\",\n                            syntax: \"miasma|0;x:55%,55%;y:60%,60%|3;(repeat:-1,delay:2.1);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_g\",\n                            syntax: \"miasma|0;x:10%,10%;y:90%,90%|3;(repeat:-1,delay:3.8);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_h\",\n                            syntax: \"miasma|0;x:95%,95%;y:70%,70%|3;(repeat:-1,delay:1.8);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_i\",\n                            syntax: \"miasma|0;x:50%,50%;y:72%,72%|3;(repeat:-1,delay:5.8);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_j\",\n                            syntax: \"miasma|0;x:10%,10%;y:66%,66%|3;(repeat:-1,delay:3.6);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_k\",\n                            syntax: \"miasma|0;x:3%,3%;y:88%,88%|3;(repeat:-1,delay:2.2);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_l\",\n                            syntax: \"miasma|0;x:78%,78%;y:75%,75%|3;(repeat:-1,delay:1.7);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_m\",\n                            syntax: \"miasma|0;x:65%,65%;y:98%,98%|3;(repeat:-1,delay:.7);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_n\",\n                            syntax: \"miasma|0;x:33%,33%;y:78%,78%|3;(repeat:-1,delay:4.4);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                        {\n                            name: \"miasma_o\",\n                            syntax: \"miasma|0;x:80%,80%;y:92%,92%|3;(repeat:-1,delay:5.2);alpha:1,0;scaleX:0.0,1;scaleY:0.0,1\",\n                        },\n                    ],\n                },\n            },\n            innocent: {\n                name: \"innocent\",\n                fatype: \"fas\",\n                faname: \"fa-book-dead\",\n                image: \"modules/theatre/assets/graphics/emotes/innocent.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Innocent\"),\n                rigging: {\n                    animations: [\n                        { name: \"innocent\", syntax: \"innocent|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"halo\",\n                            syntax: \"halo|2;(ease:power2);x:50%,50%;alpha:0,1|2;(ease:sine,repeat:-1,yoyo:true,yoyoEase:sine);y:-3%,-5%\",\n                        },\n                    ],\n                },\n            },\n            carefree: {\n                name: \"carefree\",\n                fatype: \"fas\",\n                faname: \"fa-book-dead\",\n                image: \"modules/theatre/assets/graphics/emotes/carefree.png\",\n                label: game.i18n.localize(\"Theatre.Emote.CareFree\"),\n                rigging: {\n                    animations: [\n                        { name: \"carefree\", syntax: \"carefree|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"musicnote_a\",\n                            syntax: \"musicnote|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1;x:10%,10%;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-10,10|1;(ease:sine,yoyo:true,yoyoEase:sine,repeat:-1);y:20%,30%\",\n                        },\n                        {\n                            name: \"musicnote_b\",\n                            syntax: \"musicnote|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1;x:20%,20%;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-10,10|1;(ease:sine,yoyo:true,yoyoEase:sine,repeat:-1,delay:0.25);y:15%,25%\",\n                        },\n                        {\n                            name: \"musicnote_c\",\n                            syntax: \"musicnote|0.5;(ease:bounce);scaleX:0.1,1;scaleY:0.1,1;x:30%,30%;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-10,10|1;(ease:sine,yoyo:true,yoyoEase:sine,repeat:-1,delay:0.5);y:20%,30%\",\n                        },\n                    ],\n                },\n            },\n            panic: {\n                name: \"panic\",\n                fatype: \"far\",\n                faname: \"fa-tired\",\n                label: game.i18n.localize(\"Theatre.Emote.Panic\"),\n                rigging: {\n                    animations: [\n                        { name: \"panic\", syntax: \"panic|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"line_a\",\n                            syntax: \"linesteep|0;x:50%,50%;y:-10%,-10%|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n\n                        {\n                            name: \"line_b\",\n                            syntax: \"linesteep|0;x:35%,35%;y:-5%,-5%;rotation:-22.5,-22.5|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_c\",\n                            syntax: \"linesteep|0;x:15%,15%;y:5%,5%;rotation:-45,-45|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_d\",\n                            syntax: \"linesteep|0;x:0%,0%;y:20%,20%;rotation:-67.5,-67.5|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_e\",\n                            syntax: \"linesteep|0;x:-10%,-10%;y:30%,30%;rotation:-90,-90|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n\n                        {\n                            name: \"line_f\",\n                            syntax: \"linesteep|0;x:65%,65%;y:-5%,-5%;rotation:22.5,22.5|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_g\",\n                            syntax: \"linesteep|0;x:85%,85%;y:5%,5%;rotation:45,45|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_h\",\n                            syntax: \"linesteep|0;x:100%,100%;y:20%,20%;rotation:67.5,67.5|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"line_i\",\n                            syntax: \"linesteep|0;x:110%,110%;y:30%,30%;rotation:90,90|1;(repeat:-1,yoyo:true);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                    ],\n                },\n            },\n            dizzy: {\n                name: \"dizzy\",\n                fatype: \"far\",\n                faname: \"fa-dizzy\",\n                label: game.i18n.localize(\"Theatre.Emote.Dizzy\"),\n                rigging: {\n                    animations: [\n                        { name: \"dizzy\", syntax: \"dizzy|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"stars_a\",\n                            syntax: \"star|2;(ease:sineInOut,repeat:-1,yoyo:true);x:10%,90%;y:35%,5%|1;(repeatDelay:1,repeat:-1,yoyo:true);scaleX:0.2,1;scaleY:0.2,1;alpha:0.2,1|2;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"stars_b\",\n                            syntax: \"star|2;(ease:sineInOut,repeat:-1,yoyo:true);x:90%,10%;y:5%,35%|1;(repeatDelay:1,repeat:-1,yoyo:true);scaleX:1,0.2;scaleY:1,0.2;alpha:1,0.2|2;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"stars_c\",\n                            syntax: \"star|2;(ease:sineInOut,repeat:-1,yoyo:true,delay:1);x:10%,90%;y:5%,35%|1;(repeatDelay:1,delay:1,repeat:-1,yoyo:true);scaleX:0.2,1;scaleY:0.2,1;alpha:0.2,1|2;(repeat:-1);rotation:0,360\",\n                        },\n                        {\n                            name: \"stars_d\",\n                            syntax: \"star|2;(ease:sineInOut,repeat:-1,yoyo:true,delay:1);x:90%,10%;y:35%,5%|1;(repeatDelay:1,delay:1,repeat:-1,yoyo:true);scaleX:1,0.2;scaleY:1,0.2;alpha:1,0.2|2;(repeat:-1);rotation:0,360\",\n                        },\n                    ],\n                },\n            },\n            speechless: {\n                name: \"speechless\",\n                fatype: \"far\",\n                faname: \"fa-comment-dots\",\n                image: \"modules/theatre/assets/graphics/emotes/speechless.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Speechless\"),\n                rigging: {\n                    animations: [\n                        { name: \"speechless\", syntax: \"speechless|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"dot_a\",\n                            syntax: \"dot|0.5;(ease:power3);x:30%,30%;y:25%,25%;alpha:0,1|1;(ease:bounce,repeat:-1,delay:0,repeatDelay:3,yoyo:true,yoyoEase:power0);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"dot_b\",\n                            syntax: \"dot|0.5;(ease:power3);x:25%,25%;y:25%,25%;alpha:0,1|1;(ease:bounce,repeat:-1,delay:1,repeatDelay:3,yoyo:true,yoyoEase:power0);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                        {\n                            name: \"dot_c\",\n                            syntax: \"dot|0.5;(ease:power3);x:20%,20%;y:25%,25%;alpha:0,1|1;(ease:bounce,repeat:-1,delay:2,repeatDelay:3,yoyo:true,yoyoEase:power0);scaleX:0.5,1;scaleY:0.5,1\",\n                        },\n                    ],\n                },\n            },\n            scared: {\n                name: \"scared\",\n                fatype: \"far\",\n                faname: \"fa-grimace\",\n                label: game.i18n.localize(\"Theatre.Emote.Scared\"),\n                rigging: {\n                    animations: [\n                        { name: \"scared\", syntax: \"scared|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"ghostball_a\",\n                            syntax: \"ghostball1|0;x:70%,70%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:0.5);y:30%,35%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_b\",\n                            syntax: \"ghostball1|0;x:30%,30%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:1);y:10%,15%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_c\",\n                            syntax: \"ghostball1|0;x:20%,20%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:0.8);y:60%,65%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_d\",\n                            syntax: \"ghostball2|0;x:85%,85%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:0.4);y:75%,80%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_e\",\n                            syntax: \"ghostball2|0;x:10%,10%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:1.2);y:40%,45%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_f\",\n                            syntax: \"ghostball2|0;x:60%,60%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:0.6);y:80%,85%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_g\",\n                            syntax: \"ghostball1|0;x:90%,90%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:1.5);y:10%,15%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                        {\n                            name: \"ghostball_h\",\n                            syntax: \"ghostball2|0;x:75%,75%|1;(ease:sine,yoyoEase:sine,repeat:-1,yoyo:true,delay:0.9);y:50%,55%;scaleX:0.8,1;scaleY:0.8,1;alpha:0,1|0.25;(repeat:-1,yoyo:true);rotation:-5,5\",\n                        },\n                    ],\n                },\n            },\n            sleeping: {\n                name: \"sleeping\",\n                fatype: \"fas\",\n                faname: \"fa-bed\",\n                image: \"modules/theatre/assets/graphics/emotes/sleeping.png\",\n                label: game.i18n.localize(\"Theatre.Emote.Sleeping\"),\n                rigging: {\n                    animations: [\n                        { name: \"sleeping\", syntax: \"sleeping|1;(ease:elastic);x:80%,80%;y:0%,25%;alpha:0,1\" },\n                        {\n                            name: \"zzz_a\",\n                            syntax: \"zzz|4;(repeat:-1,delay:0);y:25%,-20%;alpha:0,1;scaleX:0.1,1;scaleY:0.1,1|1;(ease:sineInOut,repeat:-1,delay:0,yoyo:true);x:30%,40%\",\n                        },\n                        {\n                            name: \"zzz_b\",\n                            syntax: \"zzz|4;(repeat:-1,delay:1);y:25%,-20%;alpha:0,1;scaleX:0.1,1;scaleY:0.1,1|1;(ease:sineInOut,repeat:-1,delay:0.5,yoyo:true);x:30%,40%\",\n                        },\n                        {\n                            name: \"zzz_c\",\n                            syntax: \"zzz|4;(repeat:-1,delay:2);y:25%,-20%;alpha:0,1;scaleX:0.1,1;scaleY:0.1,1|1;(ease:sineInOut,repeat:-1,delay:1,yoyo:true);x:30%,40%\",\n                        },\n                        {\n                            name: \"zzz_d\",\n                            syntax: \"zzz|4;(repeat:-1,delay:3);y:25%,-20%;alpha:0,1;scaleX:0.1,1;scaleY:0.1,1|1;(ease:sineInOut,repeat:-1,delay:1.5,yoyo:true);x:30%,40%\",\n                        },\n                    ],\n                },\n            },\n        };\n    }\n\n    /**\n     * Split to chars, logically group words based on language.\n     *\n     * @param text (String) : The text to split.\n     * @param textBox (HTMLElement) : The textBox the text will be contained in.\n     *\n     * @return (Array[HTMLElement]) : An array of HTMLElements of the split text.\n     */\n    static splitTextBoxToChars(text, textBox) {\n        let charSpans = [];\n        let fontSize = Number(KHelpers.style(textBox)[\"font-size\"].match(/\\-*\\d+\\.*\\d*/) || 0);\n        let splitMode = 1;\n\n        // we have 2 modes, if we're a latin based language, or a language that does word\n        // grouping of characters, we should attempt to preserve words by collecting\n        // character spans into divs.\n        // If we're a language that is symbol based, and don't care about word groupings\n        // then we just out a stream of characters without regard to groupings.\n        //\n        //\n        switch (game.i18n.lang) {\n            case \"ja\":\n                // Kinsoku Shori (JP)\n                splitMode = 3;\n                break;\n            case \"cn\":\n                // 按照日文方式换行 (CN)\n                splitMode = 3;\n                break;\n            case \"ko\":\n                // KS X ISO/IEC 26300:2007 (KO)\n                splitMode = 4;\n                break;\n            case \"zh\":\n            case \"th\":\n                // word break with impunity\n                splitMode = 1;\n                break;\n            default:\n                // don't word break\n                splitMode = 2;\n                break;\n        }\n\n        if (splitMode == 1) {\n            // split chars\n            for (let c of text) {\n                if (c == \" \") {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.width = `${fontSize / 4}px`;\n                    cspan.style.position = \"relative\";\n                    textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                } else if (c == \"\\n\") {\n                    let cspan = document.createElement(\"hr\");\n                    textBox.appendChild(cspan);\n                } else {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.position = \"relative\";\n                    textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                }\n\n                // relative positioning\n            }\n        } else if (splitMode == 2) {\n            // split chars, group words\n            let word = document.createElement(\"div\");\n            let prevChar = \"\";\n            word.style.height = `${fontSize}px`;\n            word.style.position = \"relative\";\n\n            for (let c of text) {\n                if (c == \" \") {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.width = `${fontSize / 4}px`;\n                    // not part of an extended white space, append word, start new one\n                    if (prevChar != \" \" && prevChar != \"\\n\") {\n                        textBox.appendChild(word);\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                    }\n                    textBox.appendChild(cspan);\n                    cspan.style.position = \"relative\";\n                    charSpans.push(cspan);\n                } else if (c == \"\\n\") {\n                    let cspan = document.createElement(\"hr\");\n                    if (prevChar != \" \" && prevChar != \"\\n\") {\n                        textBox.appendChild(word);\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                    }\n                    textBox.appendChild(cspan);\n                } else {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    // we're part of a word\n                    cspan.style.position = \"relative\";\n                    word.appendChild(cspan);\n                    charSpans.push(cspan);\n                }\n\n                // prevChar\n                prevChar = c;\n            }\n            textBox.append(word);\n        } else if (splitMode == 3) {\n            // Kinsoku Shori (JP)\n            let rHead =\n                \")）]｝〕〉》」』】〙〗〟'\\\"｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜? ! ‼ ⁇ ⁈ ⁉・、:;,。.\";\n            let rTail = \"(（[｛〔〈《「『【〘〖〝'\\\"｟«\";\n            let rSplit = \"—.‥〳〴〵\";\n            let word = null;\n            for (let idx = 0; idx < text.length; ++idx) {\n                let c = text[idx];\n                let rh = false;\n                let rt = false;\n                let rs = false;\n                let nl = false;\n                let sp = false;\n                let nv = false;\n                let la = text[idx + 1];\n                //if (!la) la = text[idx+1];\n\n                if (la && rHead.match(RegExp.escape(la))) {\n                    // if la is of the rHead set\n                    rh = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n                if (rTail.match(RegExp.escape(c))) {\n                    // if c is of the rTail set\n                    rt = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n                if (rSplit.match(RegExp.escape(c)) && text[idx + 1] && text[idx + 1] == c) {\n                    // if c is of the rSplit set, and is followed by another of its type\n                    rs = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n                if (!isNaN(Number(c)) && text[idx + 1] && !isNaN(Number(text[idx + 1]))) {\n                    // keep numbers together\n                    rs = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n\n                // scan next character to see if it belongs in the rHead or rTail\n                if (text[idx + 1] && /*rTail.match(text[idx+1]) || */ rHead.match(RegExp.escape(text[idx + 1])))\n                    nv = true;\n\n                if (c == \" \") {\n                    sp = true;\n                } else if (c == \"\\n\") {\n                    // end any word immediately, we trust the formatting over the Kinsoku Shori\n                    nl = true;\n                } else {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.position = \"relative\";\n                    if (word) word.appendChild(cspan);\n                    else textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                }\n\n                // output word when we hit our limit, and current c is not in rTail/rHead/rSplit\n                // and that the character following our word is not in the restricted rHead\n                if (word && word.children.length >= 2 && !rt && !rh && !rs && !nv) {\n                    textBox.appendChild(word);\n                    word = null;\n                }\n\n                if (nl) {\n                    // newline after word if present\n                    let cspan = document.createElement(\"hr\");\n                    if (word) {\n                        textBox.appendChild(word);\n                        word = null;\n                    }\n                    textBox.appendChild(cspan);\n                } else if (sp) {\n                    // if not a newline, but a space output word before space\n                    if (word) {\n                        textBox.appendChild(word);\n                        word = null;\n                    }\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.width = `${fontSize / 4}px`;\n                    cspan.style.position = \"relative\";\n                    textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                }\n            }\n            if (word) {\n                textBox.appendChild(word);\n                word = null;\n            }\n        } else if (splitMode == 4) {\n            // Korean Line breaking KS X ISO/IEC 26300:2007 (KO)\n            let rHead = \"!%),.:;?]}¢°'\\\"†‡℃〆〈《「『〕！％），．：；？］｝ \";\n            let rTail = \"$([\\\\{£¥'\\\"々〇〉》」〔＄（［｛｠￥￦#\";\n            let word = null;\n            for (let idx = 0; idx < text.length; ++idx) {\n                let c = text[idx];\n                let rh = false;\n                let rt = false;\n                let rs = false;\n                let nl = false;\n                let nv = false;\n                let la = text[idx + 1];\n                //if (!la) la = text[idx+1];\n\n                if (la && rHead.match(RegExp.escape(la))) {\n                    // if la is of the rHead set\n                    rh = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n                if (rTail.match(RegExp.escape(c))) {\n                    // if c is of the rTail set\n                    rt = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n                if (!isNaN(Number(c)) && text[idx + 1] && !isNaN(Number(text[idx + 1]))) {\n                    // keep numbers together\n                    rs = true;\n                    if (!word) {\n                        word = document.createElement(\"div\");\n                        word.style.height = `${fontSize}px`;\n                        word.style.position = \"relative\";\n                        if (this._isDebugActive()) {\n                            word.style[\"background-color\"] = \"rgba(0,255,0,0.25)\";\n                            word.style[\"color\"] = \"lime\";\n                        }\n                    }\n                }\n\n                // scan next character to see if it belongs in the rHead or rTail\n                if (text[idx + 1] && /*rTail.match(text[idx+1]) || */ rHead.match(RegExp.escape(text[idx + 1])))\n                    nv = true;\n\n                if (c == \" \") {\n                    // if not a newline, but a space output the space just like any other character.\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.width = `${fontSize / 4}px`;\n                    cspan.style.position = \"relative\";\n                    if (word) word.appendChild(cspan);\n                    else textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                } else if (c == \"\\n\") {\n                    // end any word immediately, we trust the formatting over the Kinsoku Shori\n                    nl = true;\n                } else {\n                    let cspan = document.createElement(\"span\");\n                    cspan.textContent = c;\n                    cspan.style.height = `${fontSize}px`;\n                    cspan.style.position = \"relative\";\n                    if (word) word.appendChild(cspan);\n                    else textBox.appendChild(cspan);\n                    charSpans.push(cspan);\n                }\n\n                // output word when we hit our limit, and current c is not in rTail/rHead/rSplit\n                // and that the character following our word is not in the restricted rHead\n                if (word && word.children.length >= 2 && !rh && !rt && !rs && !nv) {\n                    textBox.appendChild(word);\n                    word = null;\n                }\n\n                if (nl) {\n                    // newline after word if present\n                    let cspan = document.createElement(\"hr\");\n                    if (word) {\n                        textBox.appendChild(word);\n                        word = null;\n                    }\n                    textBox.appendChild(cspan);\n                }\n            }\n            if (word) {\n                textBox.appendChild(word);\n                word = null;\n            }\n        }\n\n        return charSpans;\n    }\n\n    /**\n     *\n     * ActorSheet Configue Options\n     *\n     * @params ev (Event) : The event that triggered the configuration option.\n     * @params actorSheet (Object ActorSheet) : The ActorSheet Object to spawn a configure\n     *                                          window from.\n     */\n    static onConfigureInsert(ev, actorSheet) {\n        ev.preventDefault();\n\n        Logger.debug(\"Click Event on Configure Theatre!!!\", actorSheet, actorSheet.actor, actorSheet.position);\n\n        if (!actorSheet.actor.flags.theatre) {\n            actorSheet.actor.flags.theatre = { baseinsert: \"\", name: \"\" };\n        }\n\n        new TheatreActorConfig(actorSheet.actor, {\n            top: actorSheet.position.top + 40,\n            left: actorSheet.position.left + (actorSheet.position.width - 500) / 2,\n            configureDefault: true,\n        }).render(true);\n    }\n\n    /**\n     * Add to the nav bar staging area with an actorSheet.\n     *\n     * @params ev (Event) : The event that triggered adding to the NavBar staging area.\n     */\n    static onAddToNavBar(ev, actorSheet, removeLabelSheetHeader) {\n        Logger.debug(\"Click Event on Add to NavBar!!\", actorSheet, actorSheet.actor, actorSheet.position);\n        const actor = actorSheet.object;\n        const addLabel = removeLabelSheetHeader ? \"\" : game.i18n.localize(\"Theatre.UI.Config.AddToStage\");\n        const removeLabel = removeLabelSheetHeader ? \"\" : game.i18n.localize(\"Theatre.UI.Config.RemoveFromStage\");\n        let newText;\n        if (Theatre.isActorStaged(actor)) {\n            Theatre.removeFromNavBar(actor);\n            newText = addLabel;\n        } else {\n            Theatre.addToNavBar(actor);\n            newText = removeLabel;\n        }\n        // Toggle iconElement class\n        const iconElement = ev.currentTarget.querySelector(\"i\");\n        iconElement.className = Theatre.isActorStaged(actor) ? \"fas fa-mask\" : \"fas fa-theater-masks\";\n        //Set the new text content\n        const textNode = ev.currentTarget.childNodes[1];\n        if (textNode.nodeType === Node.TEXT_NODE) {\n            textNode.textContent = newText;\n        }\n    }\n\n    static _getTheatreId(actor) {\n        return `theatre-${actor._id}`;\n    }\n\n    /**\n     * Add to the NavBar staging area\n     *\n     * @params actor (Actor) : The actor from which to add to the NavBar staging area.\n     */\n    static addToNavBar(actor) {\n        if (!actor) {\n            return;\n        }\n        Logger.debug(\"actor is valid!\");\n        // if already on stage, dont add it again\n        // create nav-list-item\n        // set picture as actor.img\n        // set attribute \"theatre-id\" to \"theatre\" + _id\n        // set attribute \"insertImg\" to object.flags.theatre.baseinsert or img if not specified\n        // add click handler to push it into the theatre bar, if it already exists on the bar, remove it\n        // from the bar\n        // add click handler logic to remove it from the stage\n        let theatreId = Theatre._getTheatreId(actor);\n        let portrait = actor.img ? actor.img : CONSTANTS.DEFAULT_PORTRAIT;\n        let optAlign = \"top\";\n        let name = actor.name;\n\n        if (!Theatre.instance.isActorOwner(game.user.id, theatreId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return;\n        }\n\n        // Use defaults incase the essential flag attributes are missing\n        if (actor.flags.theatre) {\n            if (actor.flags.theatre.name && actor.flags.theatre.name != \"\") {\n                name = actor.flags.theatre.name;\n            }\n            if (actor.flags.theatre.baseinsert && actor.flags.theatre.baseinsert != \"\") {\n                portrait = actor.flags.theatre.baseinsert;\n            }\n            if (actor.flags.theatre.optalign && actor.flags.theatre.optalign != \"\") {\n                optAlign = actor.flags.theatre.optalign;\n            }\n        }\n\n        if (Theatre.instance.stage[theatreId]) {\n            Logger.info(actor.name + game.i18n.localize(\"Theatre.UI.Notification.AlreadyStaged\"), true);\n            return;\n        }\n\n        Logger.debug(\"new theatre id: \" + theatreId);\n\n        let navItem = document.createElement(\"img\");\n        KHelpers.addClass(navItem, \"theatre-control-nav-bar-item\");\n        //navItem.setAttribute(\"draggable\",false);\n        navItem.setAttribute(\"imgId\", theatreId);\n        navItem.setAttribute(\"src\", portrait);\n        navItem.setAttribute(\"title\", name + (name == actor.name ? \"\" : ` (${actor.name})`));\n        navItem.setAttribute(\"name\", name);\n        navItem.setAttribute(\"optalign\", optAlign);\n\n        // if the theatreId is present, then set our navItem as active!\n        if (!!Theatre.instance.getInsertById(theatreId))\n            KHelpers.addClass(navItem, \"theatre-control-nav-bar-item-active\");\n\n        navItem.addEventListener(\"mouseup\", Theatre.instance.handleNavItemMouseUp);\n        navItem.addEventListener(\"dragstart\", Theatre.instance.handleNavItemDragStart);\n        navItem.addEventListener(\"dragend\", Theatre.instance.handleNavItemDragEnd);\n        navItem.addEventListener(\"dragover\", Theatre.instance.handleNavItemDragOver);\n        navItem.addEventListener(\"drop\", Theatre.instance.handleNavItemDragDrop);\n        Theatre.instance.theatreNavBar.appendChild(navItem);\n        // stage event\n        Theatre.instance.stageInsertById(theatreId);\n        // Store reference\n        Theatre.instance.stage[theatreId] = new TheatreActor(actor, navItem);\n    }\n\n    /**\n     * Removes the actor from the nav bar.\n     *\n     * @params actor (Actor) : The actor to remove from the NavBar staging area.\n     */\n    static removeFromNavBar(actor) {\n        if (!actor) {\n            return;\n        }\n        const theatreId = Theatre._getTheatreId(actor);\n        Theatre.instance._removeFromStage(theatreId);\n    }\n\n    /**\n     * Removes the actor from the stage.\n     *\n     * @params id (string) : The theatreId to remove from the stage.\n     */\n    static _removeFromStage(theatreId) {\n        const staged = Theatre.instance.stage[theatreId];\n        if (staged) {\n            if (staged.navElement) {\n                Theatre.instance.theatreNavBar.removeChild(staged.navElement);\n            }\n            Theatre.instance.removeInsertById(theatreId);\n            delete Theatre.instance.stage[theatreId];\n        }\n    }\n\n    /**\n     * Returns whether the actor is on the stage.\n     * @params actor (Actor) : The actor.\n     */\n    static isActorStaged(actor) {\n        if (!actor) {\n            return false;\n        }\n        return !!Theatre.instance.stage[Theatre._getTheatreId(actor)];\n    }\n\n    static clearStage() {\n        Object.keys(Theatre.instance.stage).forEach((theatreId) => {\n            Theatre.instance._removeFromStage(theatreId);\n        });\n    }\n\n    /**\n     * get the text animation given the name\n     *\n     * @param name (String) : The name of the standing text animation to get.\n     *\n     * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n     *                     representing the animation function and function label.\n     *\n     */\n    static textStandingAnimation(name) {\n        if (!Theatre.STANDING_ANIMS)\n            Theatre.STANDING_ANIMS = {\n                impact: {\n                    func: function (target, shakeradius) {\n                        if (!target) return;\n                        shakeradius = shakeradius || Math.random() * 7 + 7;\n                        shakeradius = Math.max(shakeradius - Math.random() * 0.5, 0);\n                        // Impact complete!\n                        if (shakeradius == 0) {\n                            target.style.left = \"0px\";\n                            target.style.top = \"0px\";\n                            return;\n                        }\n\n                        TweenMax.to(target, 0.025, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * shakeradius}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * shakeradius}px`,\n                            onComplete: Theatre.textStandingAnimation(\"impact\"),\n                            onCompleteParams: [target, shakeradius],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Impact\"),\n                },\n\n                quiver: {\n                    func: function (target, quiverAmt) {\n                        if (!target) return;\n                        quiverAmt = quiverAmt || 2;\n                        quiverAmt = Math.max(quiverAmt - Math.random() * 0.1, 0);\n                        // Waver complete\n                        if (quiverAmt == 0) {\n                            target.style.left = \"0px\";\n                            target.style.top = \"0px\";\n                            return;\n                        }\n\n                        TweenMax.to(target, 0.1, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * quiverAmt}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * quiverAmt}px`,\n                            onComplete: Theatre.textStandingAnimation(\"quiver\"),\n                            onCompleteParams: [target, quiverAmt],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Quiver\"),\n                },\n\n                wave: {\n                    func: function (target, waveAmp) {\n                        if (!target) return;\n                        waveAmp = waveAmp || 4;\n                        if (waveAmp > 0) waveAmp = waveAmp - 0.5;\n                        else waveAmp = waveAmp + 0.5;\n\n                        // Waver complete\n                        if (waveAmp == 0) {\n                            target.style.top = \"0px\";\n                            return;\n                        }\n\n                        TweenMax.to(target, 0.5, {\n                            top: `${waveAmp}px`,\n                            onComplete: Theatre.textStandingAnimation(\"wave\"),\n                            onCompleteParams: [target, -waveAmp],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Wave\"),\n                },\n\n                fade: {\n                    func: function (target, fade) {\n                        if (!target) return;\n                        fade = fade || 1;\n                        fade = Math.max(fade - 0.025, 0);\n                        // fade complete\n                        if (fade <= 0) {\n                            target.style.opacity = 0;\n                            return;\n                        }\n\n                        TweenMax.to(target, 0.1, {\n                            opacity: fade,\n                            onComplete: Theatre.textStandingAnimation(\"fade\"),\n                            onCompleteParams: [target, fade],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Fade\"),\n                },\n\n                excited: {\n                    func: function (target) {\n                        if (!target) return;\n                        TweenMax.to(target, 0.025, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 1}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 1}px`,\n                            onComplete: Theatre.textStandingAnimation(\"excited\"),\n                            onCompleteParams: [target],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Excited\"),\n                },\n\n                violent: {\n                    func: function (target, oshakeradius, ox, oy) {\n                        if (!target) return;\n                        ox = ox || 0;\n                        oy = oy || 0;\n                        oshakeradius = oshakeradius || 2;\n                        let shakeradius = Math.random() * oshakeradius + oshakeradius;\n                        if (!target.style.left.match(\"0px\") || !target.style.top.match(\"0px\")) shakeradius = 0;\n\n                        TweenMax.to(target, 0.025, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * shakeradius + ox}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * shakeradius + oy}px`,\n                            scale: `${Math.random() / 3 + 0.9}`,\n                            onComplete: Theatre.textStandingAnimation(\"violent\"),\n                            onCompleteParams: [target, oshakeradius, ox, oy],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Violent\"),\n                },\n\n                bubbly: {\n                    func: function (target) {\n                        if (!target) return;\n                        TweenMax.to(target, 0.5, {\n                            scale: `${Math.floor((Math.random() * 0.4 + 0.8) * 100) / 100}`,\n                            onComplete: Theatre.textStandingAnimation(\"bubbly\"),\n                            onCompleteParams: [target],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Bubbly\"),\n                },\n\n                spooky: {\n                    func: function (target) {\n                        if (!target) return;\n                        TweenMax.to(target, Math.floor((Math.random() * 0.25 + 0.2) * 100) / 100, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 3}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 3}px`,\n                            onComplete: Theatre.textStandingAnimation(\"spooky\"),\n                            onCompleteParams: [target],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Spooky\"),\n                },\n\n                insane: {\n                    func: function (target, rotation, scale) {\n                        if (!target) return;\n                        let spin = Math.random() * 100;\n                        let grow = Math.random() * 200;\n                        let animtime = 0.025;\n                        rotation = rotation || 0;\n                        scale = scale || 1;\n\n                        if (spin >= 99.95) {\n                            animtime = Math.random() * 0.5;\n                            rotation = 1080;\n                        } else if (spin >= 99.8) {\n                            animtime = Math.random() * 0.5 + 0.5;\n                            rotation = 360;\n                        } else if (spin >= 80) {\n                            rotation =\n                                rotation != 0 ? 0 : (Math.random() < 0.5 ? -1 : 1) * Math.floor(Math.random() * 30);\n                        }\n\n                        if (grow >= 199) {\n                            if (scale != 1) scale = 1;\n                            else scale = Math.random() * 0.5 + 1;\n                        }\n\n                        TweenMax.to(target, animtime, {\n                            left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 1}px`,\n                            top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 1}px`,\n                            rotation: rotation,\n                            scale: scale,\n                            onComplete: Theatre.textStandingAnimation(\"insane\"),\n                            onCompleteParams: [target, rotation, scale],\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Standing.Insane\"),\n                },\n            };\n\n        if (Theatre.STANDING_ANIMS[name]) {\n            return Theatre.STANDING_ANIMS[name].func;\n        }\n    }\n\n    /**\n     * Get text Flyin Animation funciton, still needs to supply\n     * 1. charSpans\n     * 2. delay\n     * 3. speed\n     * 4. standingAnim (optional standin animation)\n     *\n     * @params name (String) : The name of the fly-in animation to use\n     *\n     * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n     *                     representing the animation function and function label.\n     *\n     */\n    static textFlyinAnimation(name) {\n        if (!Theatre.FLYIN_ANIMS)\n            Theatre.FLYIN_ANIMS = {\n                typewriter: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        gsap.from(charSpans, {\n                            duration: 0.05,\n                            stagger: {\n                                each: 0.05,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            scale: 1.5,\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Typewriter\"),\n                },\n\n                fadein: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        gsap.from(charSpans, {\n                            duration: animTime,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Fadein\"),\n                },\n\n                slidein: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        gsap.from(charSpans, {\n                            duration: animTime,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            left: 200,\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Slidein\"),\n                },\n\n                scalein: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        gsap.from(charSpans, {\n                            duration: animTime,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            scale: 5,\n                            //rotation: -180,\n                            ease: Power4.easeOut,\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Scalein\"),\n                },\n\n                fallin: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        let textBox = null;\n                        if (charSpans[0]) {\n                            switch (Theatre.instance.settings.theatreStyle) {\n                                case \"lightbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-light\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"clearbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-clear\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"mangabubble\":\n                                    break;\n                                case \"textbox\":\n                                default:\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                            }\n                            if (textBox) {\n                                textBox.style[\"overflow-y\"] = \"visible\";\n                                textBox.style[\"overflow-x\"] = \"visible\";\n                            }\n                        }\n                        gsap.from(charSpans, {\n                            duration: animTime,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            top: -100,\n                            ease: Power4.easeOut,\n                            onComplete: () => {\n                                Logger.debug(\"completeAll\");\n                                if (textBox) {\n                                    textBox.style[\"overflow-y\"] = \"scroll\";\n                                    textBox.style[\"overflow-x\"] = \"hidden\";\n                                }\n                            },\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Fallin\"),\n                },\n\n                spin: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        gsap.from(charSpans, {\n                            duration: animTime,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            rotation: -360,\n                            left: 100,\n                            ease: Power4.easeOut,\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Spin\"),\n                },\n\n                spinscale: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        let textBox = null;\n                        if (charSpans[0]) {\n                            switch (Theatre.instance.settings.theatreStyle) {\n                                case \"lightbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-light\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"clearbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-clear\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"mangabubble\":\n                                    break;\n                                case \"textbox\":\n                                default:\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                            }\n                            if (textBox) {\n                                textBox.style[\"overflow-y\"] = \"visible\";\n                                textBox.style[\"overflow-x\"] = \"visible\";\n                            }\n                        }\n                        gsap.from(charSpans, animTime * 1.5, {\n                            duration: animTime * 1.5,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            scale: 5,\n                            rotation: -360,\n                            left: 150,\n                            ease: Power4.easeOut,\n                            onComplete: () => {\n                                Logger.debug(\"completeAll\");\n                                if (textBox) {\n                                    textBox.style[\"overflow-y\"] = \"scroll\";\n                                    textBox.style[\"overflow-x\"] = \"hidden\";\n                                }\n                            },\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.SpinScale\"),\n                },\n\n                outlaw: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        //let barTop = 0;\n                        //let barLeft = 0;\n                        let textBox = null;\n                        if (charSpans[0]) {\n                            switch (Theatre.instance.settings.theatreStyle) {\n                                case \"lightbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-light\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"clearbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-clear\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"mangabubble\":\n                                    break;\n                                case \"textbox\":\n                                default:\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                            }\n                            if (textBox) {\n                                textBox.style[\"overflow-y\"] = \"visible\";\n                                textBox.style[\"overflow-x\"] = \"visible\";\n                            }\n                        }\n                        gsap.from(charSpans, {\n                            duration: animTime * 1.5,\n                            stagger: {\n                                each: speed,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            },\n                            opacity: 0,\n                            scale: 6,\n                            rotation: -1080,\n                            ease: Power4.easeOut,\n                            onComplete: () => {\n                                Logger.debug(\"completeAll\");\n                                if (textBox) {\n                                    textBox.style[\"overflow-y\"] = \"scroll\";\n                                    textBox.style[\"overflow-x\"] = \"hidden\";\n                                    // shaking box\n                                    //TweenMax.killTweensOf(charSpans[0].parentNode.parentNode);\n                                    //charSpans[0].parentNode.parentNode.style.top = `${barTop}px`;\n                                    //charSpans[0].parentNode.parentNode.style.left = `${barLeft}px`;\n                                }\n                            },\n                        });\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Outlaw\"),\n                },\n\n                vortex: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        let textBox = null;\n                        if (charSpans[0]) {\n                            switch (Theatre.instance.settings.theatreStyle) {\n                                case \"lightbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-light\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"clearbox\":\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box-clear\", 5);\n                                    if (!textBox)\n                                        textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                                case \"mangabubble\":\n                                    break;\n                                case \"textbox\":\n                                default:\n                                    textBox = KHelpers.seekParentClass(charSpans[0], \"theatre-text-box\", 5);\n                                    break;\n                            }\n                            if (textBox) {\n                                textBox.style[\"overflow-y\"] = \"visible\";\n                                textBox.style[\"overflow-x\"] = \"visible\";\n                            }\n                        }\n                        for (let idx = 0; idx < charSpans.length; ++idx) {\n                            TweenMax.from(charSpans[idx], animTime, {\n                                delay: idx * speed,\n                                opacity: 0,\n                                scale: 5,\n                                rotation: -720,\n                                left: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 500}px`,\n                                top: `${(Math.random() < 0.5 ? -1 : 1) * Math.random() * 500}px`,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            });\n                        }\n                        if (textBox) {\n                            Logger.debug(\"vortext all start\");\n                            TweenMax.from(textBox, 0.1, {\n                                delay: speed * charSpans.length + animTime,\n                                //opacity: 1,\n                                onComplete: function () {\n                                    Logger.debug(\"vortex all complete\");\n                                    if (this.targets().length) {\n                                        this.targets()[0].style[\"overflow-y\"] = \"scroll\";\n                                        this.targets()[0].style[\"overflow-x\"] = \"visible\";\n                                    }\n                                },\n                            });\n                        }\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Vortex\"),\n                },\n\n                assemble: {\n                    func: function (charSpans, animTime, speed, standingAnim) {\n                        for (let idx = 0; idx < charSpans.length; ++idx) {\n                            TweenMax.from(charSpans[idx], animTime, {\n                                delay: idx * speed,\n                                opacity: 0,\n                                scale: 5,\n                                rotation: -180,\n                                left: `${Math.random() * 500}px`,\n                                top: `${Math.random() * 500}px`,\n                                onComplete: function () {\n                                    if (standingAnim) standingAnim.call(this, this.targets()[0]);\n                                },\n                            });\n                        }\n                    },\n                    label: game.i18n.localize(\"Theatre.Flyin.Assemble\"),\n                },\n            };\n\n        if (Theatre.FLYIN_ANIMS[name]) {\n            return Theatre.FLYIN_ANIMS[name].func;\n        } else {\n            return Theatre.FLYIN_ANIMS[\"typewriter\"].func;\n        }\n    }\n}\n","import API from \"./API/api.js\";\nimport KHelpers from \"./KHelpers.js\";\nimport { TheatreActor } from \"./TheatreActor.js\";\nimport { TheatreActorConfig } from \"./TheatreActorConfig.js\";\nimport CONSTANTS from \"./constants/constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport { registerSettings } from \"./settings.js\";\nimport { registerSocket, theatreSocket } from \"./socket.js\";\nimport { TheatreHelpers } from \"./theatre-helpers.js\";\n\n/**\n * ============================================================\n * Singleton Theatre\n *\n *\n *\n *\n *\n * ============================================================\n */\nexport class Theatre {\n    // TODO to move in a constants file on next pr...\n    // static SOCKET = \"module.theatre\";\n    // static SETTINGS = \"theatre\";\n    // static NARRATOR = \"Narrator\";\n    // static ICONLIB = \"modules/theatre/assets/graphics/emotes\";\n\n    // static DEBUG = false;\n\n    /**\n     * Make singleton and initalize the inner instance object.\n     * Return singleton if already created.\n     */\n    constructor() {\n        if (!Theatre.instance) {\n            // build theater-wide statics\n            Theatre.instance = this;\n            Theatre.textStandingAnimation(null);\n            Theatre.textFlyinAnimation(null);\n            // build theater variables\n            // font related\n            this.titleFont = \"Riffic\";\n            this.textFont = \"SignikaBold\";\n            this.fontWeight = \"bold\";\n            // position/order related\n            this.reorderTOId = null;\n            this.swapTarget = null;\n            this.dragPoint = null;\n            this.dragNavItem = null;\n            // toggle related\n            this.isNarratorActive = false;\n            this.isSuppressed = false;\n            this.isQuoteAuto = false;\n            this.isDelayEmote = false;\n            this.delayedSentState = 0;\n            // render related\n            this.rendering = false;\n            this.renderAnims = 0;\n            // global insert state related\n            this.speakingAs = null;\n            // Map of theatreId to TheatreActor\n            this.stage = {};\n            this.portraitDocks = [];\n            this.userEmotes = {};\n            this.usersTyping = {};\n            this.userSettings = {};\n            this.pixiCTX = null;\n            this.pixiToolTipCTX = null;\n            this.lastTyping = 0;\n            this.resync = {\n                type: \"any\",\n                timeoutId: null,\n            };\n            // configurable settings\n            this.settings = {\n                autoDecay: true,\n                decayRate: 1000,\n                decayMin: 30000,\n                barStyle: \"textbox\",\n                narrHeight: \"50%\",\n            };\n            // Font library\n            Theatre.getFonts();\n            // FaceAPI\n            //this._initFaceAPI();\n            // module settings\n            this._initModuleSettings();\n        }\n        return Theatre.instance;\n    }\n\n    functions = {\n        addToNavBar: (actor) => Theatre.addToNavBar(actor),\n        removeFromNavBar: (actor) => Theatre.removeFromNavBar(actor),\n        activateStagedByID: (i) => {\n            const ids = Object.keys(Theatre.instance.stage);\n            Theatre.instance.activateInsertById(ids[i]);\n            document.getElementById(\"chat-message\").blur();\n        },\n        removeFromStagedByID: (i) => {\n            const ids = Object.keys(Theatre.instance.stage);\n            Theatre.instance.removeInsertById(ids[i]);\n        },\n    };\n\n    initialize() {\n        // inject HTML\n        this._injectHTML();\n        // socket\n        this._initSocket();\n        // global listeners\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        // request a resync if needed\n        this._sendResyncRequest(\"any\");\n    }\n\n    /**\n     * Inject HTML\n     *\n     * @private\n     */\n    _injectHTML() {\n        /**\n         * Theatre Dock + Theatre Bar\n         */\n        let body = document.getElementsByTagName(\"body\")[0];\n        let chatSidebar = document.getElementById(\"chat\");\n\n        this.theatreGroup = document.createElement(\"div\");\n        this.theatreDock = this._initTheatreDockCanvas();\n        this.theatreToolTip = this._initTheatreToolTip();\n        if (!this.theatreDock || !this.theatreToolTip) {\n            Logger.error(\"Theatre encountered a FATAL error during initialization\", true);\n            Logger.error(game.i18n.localize(\"Theatre.UI.Notification.Fatal\"), true);\n            return;\n        }\n\n        this.theatreGroup.id = \"theatre-group\";\n        this.theatreDock.id = \"theatre-dock\";\n        this.theatreToolTip.id = \"theatre-tooltip\";\n        this.theatreBar = document.createElement(\"div\");\n        this.theatreBar.id = \"theatre-bar\";\n        this.theatreNarrator = document.createElement(\"div\");\n        this.theatreNarrator.id = \"theatre-narrator\";\n        //this.theatreError = document.createElement(\"div\");\n        //this.theatreError.id = \"theatre-error\";\n\n        let barContainerPrime = document.createElement(\"div\");\n        let barContainerSecond = document.createElement(\"div\");\n        barContainerPrime.id = \"theatre-prime-bar\";\n        barContainerSecond.id = \"theatre-second-bar\";\n\n        let narratorBackdrop = document.createElement(\"div\");\n        let narratorContent = document.createElement(\"div\");\n\n        KHelpers.addClass(barContainerPrime, \"theatre-bar-left\");\n        KHelpers.addClass(barContainerSecond, \"theatre-bar-right\");\n        KHelpers.addClass(narratorBackdrop, \"theatre-narrator-backdrop\");\n        KHelpers.addClass(narratorContent, \"theatre-narrator-content\");\n        KHelpers.addClass(narratorContent, \"no-scrollbar\");\n        KHelpers.addClass(this.theatreGroup, \"theatre-group\");\n        KHelpers.addClass(this.theatreDock, \"theatre-dock\");\n        KHelpers.addClass(this.theatreDock, \"no-scrollbar\");\n        KHelpers.addClass(this.theatreBar, \"theatre-bar\");\n        KHelpers.addClass(this.theatreNarrator, \"theatre-narrator\");\n\n        this.theatreNarrator.appendChild(narratorBackdrop);\n        this.theatreNarrator.appendChild(narratorContent);\n\n        this.theatreBar.appendChild(barContainerPrime);\n        this.theatreBar.appendChild(barContainerSecond);\n\n        this.theatreGroup.appendChild(this.theatreDock);\n        this.theatreGroup.appendChild(this.theatreBar);\n        this.theatreGroup.appendChild(this.theatreNarrator);\n        this.theatreGroup.appendChild(this.theatreToolTip);\n\n        body.appendChild(this.theatreGroup);\n        // set theatreStyle\n        this.settings.theatreStyle = game.settings.get(CONSTANTS.MODULE_ID, \"theatreStyle\");\n        this.configTheatreStyle(this.settings.theatreStyle);\n        // set narrator height\n        this.settings.narrHeight = game.settings.get(CONSTANTS.MODULE_ID, \"theatreNarratorHeight\");\n        this.theatreNarrator.style.top = `calc(${this.settings.narrHeight} - 50px)`;\n        // set z-index class for other UI elements\n        const uiAbove = game.settings.get(CONSTANTS.MODULE_ID, \"showUIAboveStage\");\n        const leftAbove = uiAbove == \"left\" || uiAbove == \"both\";\n        if (leftAbove) document.getElementById(\"ui-left\").classList.add(\"z-higher\");\n        const middleAbove = uiAbove == \"middle\" || uiAbove == \"both\";\n        if (middleAbove) document.getElementById(\"ui-middle\").classList.add(\"z-higher\");\n\n        // set dock canvas hard dimensions after CSS has caclulated it\n\n        /**\n         * Theatre Chat Controls\n         */\n        let chatControls = document.getElementById(\"chat-controls\");\n        let controlButtons = chatControls.getElementsByClassName(\"control-buttons\")[0];\n        let chatForm = document.getElementById(\"chat-form\");\n        let chatMessage = document.getElementById(\"chat-message\");\n\n        this.theatreControls = document.createElement(\"div\");\n        this.theatreNavBar = document.createElement(\"div\");\n        this.theatreChatCover = document.createElement(\"div\");\n\n        if (!game.user.isGM && game.settings.get(CONSTANTS.MODULE_ID, \"gmOnly\")) {\n            this.theatreControls.style.display = \"none\";\n        }\n\n        let imgCover = document.createElement(\"img\");\n        let btnSuppress = document.createElement(\"div\");\n        let iconSuppress = document.createElement(\"div\");\n        let btnEmote = document.createElement(\"div\");\n        let iconEmote = document.createElement(\"div\");\n        //let btnCinema = document.createElement(\"div\");\n        //let iconCinema = document.createElement(\"div\");\n        let btnNarrator;\n        let iconNarrator;\n\n        let btnResync = document.createElement(\"a\");\n        let iconResync = document.createElement(\"i\");\n        let btnQuote = document.createElement(\"a\");\n        let iconQuote = document.createElement(\"i\");\n        let btnDelayEmote = document.createElement(\"a\");\n        let iconDelayEmote = document.createElement(\"i\");\n\n        KHelpers.addClass(this.theatreControls, \"theatre-control-group\");\n        KHelpers.addClass(this.theatreNavBar, \"theatre-control-nav-bar\");\n        KHelpers.addClass(this.theatreNavBar, \"no-scrollbar\");\n        KHelpers.addClass(this.theatreChatCover, \"theatre-control-chat-cover\");\n        KHelpers.addClass(btnSuppress, \"theatre-control-btn\");\n        KHelpers.addClass(iconSuppress, \"theatre-icon-suppress\");\n        KHelpers.addClass(btnEmote, \"theatre-control-btn\");\n        KHelpers.addClass(iconEmote, \"theatre-icon-emote\");\n        //KHelpers.addClass(btnCinema,\"theatre-control-btn\");\n        //KHelpers.addClass(iconCinema,\"theatre-icon-cinema\");\n        KHelpers.addClass(btnResync, \"button\");\n        KHelpers.addClass(btnResync, \"resync-theatre\");\n        KHelpers.addClass(iconResync, \"fas\");\n        KHelpers.addClass(iconResync, \"fa-sync\");\n        KHelpers.addClass(btnQuote, \"button\");\n        KHelpers.addClass(iconQuote, \"fas\");\n        KHelpers.addClass(iconQuote, \"fa-quote-right\");\n        KHelpers.addClass(btnDelayEmote, \"button\");\n        KHelpers.addClass(iconDelayEmote, \"fas\");\n        KHelpers.addClass(iconDelayEmote, \"fa-comment-alt\");\n\n        btnEmote.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.EmoteSelector\"));\n        btnSuppress.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.SuppressTheatre\"));\n        btnResync.setAttribute(\n            \"title\",\n            game.user.isGM\n                ? game.i18n.localize(\"Theatre.UI.Title.ResyncGM\")\n                : game.i18n.localize(\"Theatre.UI.Title.ResyncPlayer\"),\n        );\n        btnQuote.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.QuoteToggle\"));\n        btnDelayEmote.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.DelayEmoteToggle\"));\n        //btnCinema.setAttribute(\"title\",game.i18n.localize(\"Theatre.UI.Title.CinemaSelector\"));\n        btnEmote.addEventListener(\"click\", this.handleBtnEmoteClick);\n        btnSuppress.addEventListener(\"click\", this.handleBtnSuppressClick);\n        btnResync.addEventListener(\"click\", this.handleBtnResyncClick);\n        btnQuote.addEventListener(\"click\", this.handleBtnQuoteClick);\n        btnDelayEmote.addEventListener(\"click\", this.handleBtnDelayEmoteClick);\n        //btnCinema.addEventListener(\"click\", this.handleBtnCinemaClick);\n        this.theatreNavBar.addEventListener(\"wheel\", this.handleNavBarWheel);\n\n        btnEmote.appendChild(iconEmote);\n        btnSuppress.appendChild(iconSuppress);\n        btnResync.appendChild(iconResync);\n        btnQuote.appendChild(iconQuote);\n        btnDelayEmote.appendChild(iconDelayEmote);\n        //btnCinema.appendChild(iconCinema);\n        this.theatreChatCover.appendChild(imgCover);\n\n        this.theatreControls.appendChild(this.theatreNavBar);\n\n        if (game.user.isGM) {\n            btnNarrator = document.createElement(\"div\");\n            iconNarrator = document.createElement(\"div\");\n            KHelpers.addClass(btnNarrator, \"theatre-control-btn\");\n            KHelpers.addClass(iconNarrator, \"theatre-icon-narrator\");\n            btnNarrator.setAttribute(\"title\", game.i18n.localize(\"Theatre.UI.Title.Narrator\"));\n            btnNarrator.appendChild(iconNarrator);\n            btnNarrator.addEventListener(\"click\", this.handleBtnNarratorClick);\n            this.theatreControls.appendChild(btnNarrator);\n        }\n\n        this.theatreControls.appendChild(btnEmote);\n        //this.theatreControls.appendChild(btnCinema);\n        this.theatreControls.appendChild(btnSuppress);\n\n        btnDelayEmote.style[\"margin\"] = \"0 4px\";\n        btnQuote.style[\"margin\"] = \"0 4px\";\n        btnResync.style[\"margin\"] = \"0 4px\";\n\n        if (game.user.isGM || !game.settings.get(CONSTANTS.MODULE_ID, \"gmOnly\")) {\n            if (controlButtons) {\n                controlButtons.style[\"flex-basis\"] = \"150px\";\n                KHelpers.insertBefore(btnResync, controlButtons.children[0]);\n                KHelpers.insertBefore(btnQuote, btnResync);\n                KHelpers.insertBefore(btnDelayEmote, btnQuote);\n            } else {\n                controlButtons = document.createElement(\"div\");\n                KHelpers.addClass(controlButtons, \"control-buttons\");\n                controlButtons.style[\"flex-basis\"] = \"66px\";\n                controlButtons.appendChild(btnDelayEmote);\n                controlButtons.appendChild(btnQuote);\n                controlButtons.appendChild(btnResync);\n                chatControls.appendChild(controlButtons);\n            }\n        }\n\n        KHelpers.insertBefore(this.theatreControls, chatControls);\n        KHelpers.insertAfter(this.theatreChatCover, chatMessage);\n\n        // bind listener to chat message\n        chatMessage.addEventListener(\"keydown\", this.handleChatMessageKeyDown);\n        chatMessage.addEventListener(\"keyup\", this.handleChatMessageKeyUp);\n        chatMessage.addEventListener(\"focusout\", this.handleChatMessageFocusOut);\n\n        /*\n         * Emote Menu\n         */\n        this.theatreEmoteMenu = document.createElement(\"div\");\n        KHelpers.addClass(this.theatreEmoteMenu, \"theatre-emote-menu\");\n        KHelpers.addClass(this.theatreEmoteMenu, \"app\");\n        KHelpers.insertBefore(this.theatreEmoteMenu, this.theatreControls);\n\n        /**\n         * Tooltip\n         */\n        this.theatreEmoteMenu.addEventListener(\"mousemove\", this.handleEmoteMenuMouseMove);\n    }\n\n    /**\n     * Init Module Settings\n     *\n     * @private\n     */\n    _initModuleSettings() {\n        // module settings\n        this.settings = foundry.utils.mergeObject(this.settings, registerSettings());\n    }\n\n    /**\n     * Configure the theatre display mode\n     *\n     * @param theatreStyle (String) : The theatre Style to apply\n     */\n    configTheatreStyle(theatreStyle) {\n        Logger.debug(\"SWITCHING THEATRE BAR MODE : %s from %s\", theatreStyle, this.settings.theatreStyle);\n        let oldStyle = this.settings.theatreStyle;\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n        let textBoxes = this._getTextBoxes();\n        //\n        //let app = Theatre.instance.pixiCTX;\n        let dockWidth = this.theatreDock.offsetWidth;\n        let dockHeight = this.theatreDock.offsetHeight;\n\n        // clear old style\n        switch (oldStyle || \"textbox\") {\n            case \"lightbox\":\n                KHelpers.removeClass(primeBar, \"theatre-bar-left\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-right\");\n                KHelpers.removeClass(primeBar, \"theatre-bar-lightleft\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-lightright\");\n                for (let tb of textBoxes) {\n                    KHelpers.removeClass(tb, \"theatre-text-box-light\");\n                    KHelpers.removeClass(tb, \"theatre-text-box\");\n                }\n                break;\n            case \"clearbox\":\n                KHelpers.removeClass(primeBar, \"theatre-bar-left\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-right\");\n                KHelpers.removeClass(primeBar, \"theatre-bar-clearleft\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-clearright\");\n                for (let tb of textBoxes) {\n                    KHelpers.removeClass(tb, \"theatre-text-box-clear\");\n                    KHelpers.removeClass(tb, \"theatre-text-box\");\n                }\n                break;\n            case \"mangabubble\":\n                KHelpers.removeClass(primeBar, \"theatre-bar-left\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-right\");\n                for (let tb of textBoxes) {\n                    KHelpers.removeClass(tb, \"theatre-text-box\");\n                }\n                // PLACEHOLDER FOR FUTURE\n                break;\n            case \"textbox\":\n            default:\n                KHelpers.removeClass(primeBar, \"theatre-bar-left\");\n                KHelpers.removeClass(secondBar, \"theatre-bar-right\");\n                for (let tb of textBoxes) KHelpers.removeClass(tb, \"theatre-text-box\");\n                break;\n        }\n\n        // apply new style\n        switch (theatreStyle) {\n            case \"lightbox\":\n                KHelpers.addClass(primeBar, \"theatre-bar-lightleft\");\n                KHelpers.addClass(secondBar, \"theatre-bar-lightright\");\n                this.theatreDock.style.height = \"100%\";\n                this.theatreBar.style.top = \"calc(100% - 170px)\";\n                this.theatreBar.style.height = \"170px\";\n                this.theatreBar.style[\"border-radius\"] = \"5px 0px 0px 5px\";\n                this.theatreBar.style[\"box-shadow\"] = \"0 0 40px #000\";\n                this.theatreBar.style.background =\n                    \"linear-gradient(transparent, rgba(20,20,20,0.98) 5%,rgba(20,20,20,0.85) 40%, rgba(20,20,20,0.6) 70%, rgba(20,20,20,0.5) 95%)\";\n                for (let tb of textBoxes) KHelpers.addClass(tb, \"theatre-text-box-light\");\n                break;\n            case \"clearbox\":\n                KHelpers.addClass(primeBar, \"theatre-bar-clearleft\");\n                KHelpers.addClass(secondBar, \"theatre-bar-clearright\");\n                this.theatreDock.style.height = \"100%\";\n                this.theatreBar.style.top = \"calc(100% - 170px)\";\n                this.theatreBar.style.height = \"170px\";\n                this.theatreBar.style[\"border-radius\"] = \"unset\";\n                this.theatreBar.style[\"box-shadow\"] = \"unset\";\n                this.theatreBar.style.background = \"unset\";\n                for (let tb of textBoxes) KHelpers.addClass(tb, \"theatre-text-box-clear\");\n                break;\n            case \"mangabubble\":\n                // PLACEHOLDER FOR FUTURE\n                break;\n            case \"textbox\":\n            default:\n                KHelpers.addClass(primeBar, \"theatre-bar-left\");\n                KHelpers.addClass(secondBar, \"theatre-bar-right\");\n                this.theatreDock.style.height = \"99.5vh\";\n                this.theatreBar.style.top = \"calc(100% - 160px - 0.5vh)\";\n                this.theatreBar.style.height = \"160px\";\n                this.theatreBar.style[\"border-radius\"] = \"unset\";\n                this.theatreBar.style[\"box-shadow\"] = \"unset\";\n                this.theatreBar.style.background = \"unset\";\n                for (let tb of textBoxes) KHelpers.addClass(tb, \"theatre-text-box\");\n                break;\n        }\n\n        this.settings.theatreStyle = theatreStyle;\n\n        // re-render all inserts\n        for (let insert of this.portraitDocks) this.renderInsertById(insert.imgId);\n\n        // apply resize adjustments (ev is unused)\n        this.handleWindowResize(null);\n    }\n\n    /**\n     * Socket backup to the module method\n     *\n     * bind socket receiver for theatre events\n     *\n     * @private\n     */\n    _initSocket() {\n        // module socket\n        Hooks.once(\"socketlib.ready\", registerSocket);\n        registerSocket();\n        theatreSocket.register(\"processEvent\", (payload) => {\n            Logger.debug(\"Received packet\", payload);\n            switch (payload.type) {\n                case \"sceneevent\": {\n                    this._processSceneEvent(payload.senderId, payload.subtype, payload.data);\n                    break;\n                }\n                case \"typingevent\": {\n                    this._processTypingEvent(payload.senderId, payload.data);\n                    break;\n                }\n                case \"resyncevent\": {\n                    this._processResyncEvent(payload.subtype, payload.senderId, payload.data);\n                    break;\n                }\n                case \"reqresync\": {\n                    this._processResyncRequest(payload.subtype, payload.senderId, payload.data);\n                    break;\n                }\n                default: {\n                    Logger.log(\"UNKNOWN THEATRE EVENT TYPE %s\", payload.type, payload);\n                    break;\n                }\n            }\n        });\n    }\n\n    /**\n\t * Send a packet to all clients indicating the event type, and\n\t * the data relevant to the event. The caller must specify this\n\t * data.\n\t *\n\t * Scene Event Sub Types\n\t *\n\t * enterscene : an insert was injected remotely\n\t * exitscene : an insert was removed remotely\n\t * positionupdate : an insert was moved removely\n\t * push : an insert was pushed removely\n\t * swap : an insert was swapped remotely\n\t * emote : an emote was triggered removely\n\t * addtexture : a texture asset was added remotely\n\t * addalltextures : a group of textures were added remotely\n\t * state : an insert's assets were staged remotely\n\t * narrator : the narrator bar was activated remotely\n\t * decaytext : an insert's text was decayed remotely\n\t * renderinsert : an insert is requesting to be rendered immeidately remotely\n\n\t *\n\t * @param eventType (String) : The scene event subtype\n\t * @param evenData (Object) : An Object whose properties are needed for\n\t *                            the scene event subtype\n\t *\n\t * @private\n\t */\n    _sendSceneEvent(eventType, eventData) {\n        Logger.debug(\"Sending Scene state %s with payload: \", eventType, eventData);\n\n        // Do we even need verification? There's no User Input outside of\n        // cookie cutter responses\n        theatreSocket.executeForEveryone(\"processEvent\", {\n            senderId: game.user.id,\n            type: \"sceneevent\",\n            subtype: eventType,\n            data: eventData,\n        });\n    }\n\n    /**\n     * Send a packet to all clients indicating\n     *\n     * 1. Which insert we're speaking as, or no longer speaking as\n     * 2. Wither or not we're typing currently\n     * 3. What typing animations we've chosen\n     *\n     * @private\n     */\n    _sendTypingEvent() {\n        Logger.debug(\"Sending Typing Event\");\n\n        let insert = this.getInsertById(this.speakingAs);\n        let insertEmote = this._getEmoteFromInsert(insert);\n        let insertTextFlyin = insert\n            ? this._getTextFlyinFromInsert(insert)\n            : this.speakingAs == CONSTANTS.NARRATOR\n              ? this.theatreNarrator.getAttribute(\"textflyin\")\n              : \"typewriter\";\n        let insertTextStanding = insert\n            ? this._getTextStandingFromInsert(insert)\n            : this.speakingAs == CONSTANTS.NARRATOR\n              ? this.theatreNarrator.getAttribute(\"textstanding\")\n              : \"none\";\n        let insertTextFont = insert\n            ? this._getTextFontFromInsert(insert)\n            : this.speakingAs == CONSTANTS.NARRATOR\n              ? this.theatreNarrator.getAttribute(\"textfont\")\n              : null;\n        let insertTextSize = insert\n            ? this._getTextSizeFromInsert(insert)\n            : this.speakingAs == CONSTANTS.NARRATOR\n              ? this.theatreNarrator.getAttribute(\"textsize\")\n              : null;\n        let insertTextColor = insert\n            ? this._getTextColorFromInsert(insert)\n            : this.speakingAs == CONSTANTS.NARRATOR\n              ? this.theatreNarrator.getAttribute(\"textcolor\")\n              : null;\n\n        let emotedata = {\n            emote: insertEmote,\n            textflyin: insertTextFlyin,\n            textstanding: insertTextStanding,\n            textfont: insertTextFont,\n            textsize: insertTextSize,\n            textcolor: insertTextColor,\n        };\n\n        theatreSocket.executeForEveryone(\"processEvent\", {\n            senderId: game.user.id,\n            type: \"typingevent\",\n            data: {\n                insertid: this.speakingAs,\n                emotions: emotedata,\n            },\n        });\n    }\n\n    /**\n     * Someone is asking for a re-sync event, so we broadcast the entire scene\n     * state to this target individual\n     *\n     * @param targetId (String) : The userId whom is requesting a resync event\n     *\n     * @private\n     */\n    _sendResyncEvent(targetId) {\n        let insertData = this._buildResyncData();\n        Logger.debug(\"Sending RESYNC Event (isGM)%s (to)%s: \", game.user.isGM, targetId, insertData);\n\n        theatreSocket.executeForEveryone(\"processEvent\", {\n            senderId: game.user.id,\n            type: \"resyncevent\",\n            subtype: game.user.isGM ? \"gm\" : \"player\",\n            data: {\n                targetid: targetId,\n                insertdata: insertData,\n                narrator: this.isNarratorActive,\n            },\n        });\n    }\n\n    /**\n     * Compiles Resync insertdata\n     *\n     * @return (Array[Object]) : The array of objects that represent an insert's data\n     *\n     * @private\n     */\n    _buildResyncData() {\n        let insertData = [];\n        for (let idx = 0; idx < this.portraitDocks.length; ++idx) {\n            let insert = this.portraitDocks[idx];\n            let insertEmote = this._getEmoteFromInsert(insert);\n            let insertTextFlyin = this._getTextFlyinFromInsert(insert);\n            let insertTextStanding = this._getTextStandingFromInsert(insert);\n            let insertTextFont = this._getTextFontFromInsert(insert);\n            let insertTextSize = this._getTextSizeFromInsert(insert);\n            let insertTextColor = this._getTextColorFromInsert(insert);\n\n            let dat = {\n                insertid: insert.imgId,\n                position: {\n                    x: insert.portraitContainer.x /* - insert.portrait.width/2*/,\n                    y: insert.portraitContainer.y /* - insert.portrait.height/2*/,\n                    mirror: insert.mirrored,\n                },\n                emotions: {\n                    emote: insertEmote,\n                    textflyin: insertTextFlyin,\n                    textstanding: insertTextStanding,\n                    textfont: insertTextFont,\n                    textsize: insertTextSize,\n                    textcolor: insertTextColor,\n                },\n                sortidx: insert.order || 0,\n            };\n            insertData.push(dat);\n        }\n        insertData.sort((a, b) => {\n            return a.sortidx - b.sortidx;\n        });\n        return insertData;\n    }\n\n    /**\n     * Send a request for for a Resync Event.\n     *\n     * Resync Request Types\n     *\n     * any : sender is asking for a resync packet from anyone\n     * gm : sender is asking for a resync packet from a GM\n     * players : sender is a GM and is telling all players to resync with them\n     *\n     * @param type (String) : The type of resync event, can either be \"players\" or \"gm\"\n     *                        indicating wither it's to resync \"all players\" or to resync with a gm (any GM)\n     * @private\n     */\n    _sendResyncRequest(type) {\n        Logger.debug(\"Sending RESYNC Request \", type);\n\n        // If there's a GM, request to resync from them\n        let data = {};\n        if (type == \"players\" && game.user.isGM) {\n            data.insertdata = this._buildResyncData();\n            data.narrator = this.isNarratorActive;\n        }\n\n        theatreSocket.executeForEveryone(\"processEvent\", {\n            senderId: game.user.id,\n            type: \"reqresync\",\n            subtype: type || \"any\",\n            data: data,\n        });\n\n        if (type != \"players\") {\n            this.resync.type = type;\n            this.resync.timeoutId = window.setTimeout(() => {\n                Logger.log(\"RESYNC REQUEST TIMEOUT\");\n                this.resync.timeoutId = null;\n            }, 5000);\n        }\n    }\n\n    /**\n     * Resync rquests can be either :\n     *\n     * any : sender is asking for a resync packet from anyone\n     * gm : sender is asking for a resync packet from a GM\n     * players : sender is a GM and is telling all players to resync with them\n     *\n     * @param type (String) : The type of resync request, can either be \"players\" or \"gm\"\n     * @param senderId (String) : The userId of the player requesting the resync event\n     * @param data (Object) : The data payload of the resync request. If the type is\n     *                        \"players\" then chain process this as a resync event rather\n     *                        than a request.\n     *\n     * @private\n     */\n    _processResyncRequest(type, senderId, data) {\n        Logger.debug(\"Processing resync request\");\n        // If the dock is not active, no need to send anything\n        if (type == \"any\" && this.dockActive <= 0 && !this.isNarratorActive) {\n            Logger.warn(\"OUR DOCK IS NOT ACTIVE, Not responding to reqresync\");\n            return;\n        } else if (type == \"gm\" && !game.user.isGM) {\n            return;\n        } else if (type == \"players\") {\n            // clear our theatre\n            for (let insert of this.portraitDocks) this.removeInsertById(insert.imgId, true);\n            // process this as if it were a resyncevent\n            this.resync.timeoutId = 1;\n            this._processResyncEvent(\"gm\", senderId, {\n                targetid: game.user.id,\n                insertdata: data.insertdata,\n                narrator: data.narrator,\n            });\n        } else {\n            this._sendResyncEvent(senderId);\n        }\n    }\n\n    /**\n     * Process a resync event, and if valid, unload all inserts, prepare assets for inserts to inject,\n     * and inject them.\n     *\n     * @param type (String) : The type of the resync event, can either be \"player\" or \"gm\" indicating\n     *                        the permission level of the sender (only player or gm atm).\n     * @param senderId (String) : The userId of the player whom sent the resync event.\n     * @param data (Object) : The data of the resync Event which will contain the\n     *                        information of the inserts we need to load in.\n     * @private\n     */\n    _processResyncEvent(type, senderId, data) {\n        Logger.debug(\"Processing resync event %s :\", type, data, game.users.get(senderId));\n        // if we're resyncing and it's us that's the target\n        if (this.resync.timeoutId && (data.targetid == game.user.id || (\"gm\" == this.resync.type) == type)) {\n            // drop all other resync responses, first come, first process\n            window.clearTimeout(this.resync.timeoutId);\n            this.resync.timeoutId = null;\n\n            // clear our theatre\n            for (let insert of this.portraitDocks) this.removeInsertById(insert.imgId, true);\n\n            if (type == \"gm\") {\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.ResyncGM\"), true);\n            } else {\n                Logger.info(\n                    game.i18n.localize(\"Theatre.UI.Notification.ResyncPlayer\") + game.users.get(senderId).name,\n                    true,\n                );\n            }\n            let theatreId, insert, port, actorId, actor, params;\n            let toInject = [];\n            for (let dat of data.insertdata) {\n                theatreId = dat.insertid;\n                actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n                params = this._getInsertParamsFromActorId(actorId);\n                if (!params) continue;\n\n                Logger.debug(\"params + emotions: \", params, dat.emotions);\n                toInject.push({ params: params, emotions: dat.emotions });\n            }\n            // let the clearing animation complete\n            window.setTimeout(async () => {\n                // stage all inserts;\n                let ids = data.insertdata.map((e) => e.insertid);\n                //once all inserts are staged, start our injections\n                await this.stageAllInserts(ids);\n                // due to the 'dual dock' mode and how it combines, we can't just push the reverse\n                // if we want to preserve order\n                if (toInject.length >= 2) {\n                    await this.injectLeftPortrait(\n                        toInject[toInject.length - 2].params.src,\n                        toInject[toInject.length - 2].params.name,\n                        toInject[toInject.length - 2].params.imgId,\n                        toInject[toInject.length - 2].params.optalign,\n                        {\n                            emote: toInject[toInject.length - 2].emotions.emote,\n                            textFlyin: toInject[toInject.length - 2].emotions.textflyin,\n                            textStanding: toInject[toInject.length - 2].emotions.textstanding,\n                            textFont: toInject[toInject.length - 2].emotions.textfont,\n                            textSize: toInject[toInject.length - 2].emotions.textsize,\n                            textColor: toInject[toInject.length - 2].emotions.textcolor,\n                        },\n                        true,\n                    );\n                    await this.injectLeftPortrait(\n                        toInject[toInject.length - 1].params.src,\n                        toInject[toInject.length - 1].params.name,\n                        toInject[toInject.length - 1].params.imgId,\n                        toInject[toInject.length - 1].params.optalign,\n                        {\n                            emote: toInject[toInject.length - 1].emotions.emote,\n                            textFlyin: toInject[toInject.length - 1].emotions.textflyin,\n                            textStanding: toInject[toInject.length - 1].emotions.textstanding,\n                            textFont: toInject[toInject.length - 1].emotions.textfont,\n                            textSize: toInject[toInject.length - 1].emotions.textsize,\n                            textColor: toInject[toInject.length - 1].emotions.textcolor,\n                        },\n                        true,\n                    );\n                    for (let idx = toInject.length - 3; idx >= 0; --idx)\n                        await this.injectLeftPortrait(\n                            toInject[idx].params.src,\n                            toInject[idx].params.name,\n                            toInject[idx].params.imgId,\n                            toInject[idx].params.optalign,\n                            {\n                                emote: toInject[idx].emotions.emote,\n                                textFlyin: toInject[idx].emotions.textflyin,\n                                textStanding: toInject[idx].emotions.textstanding,\n                                textFont: toInject[idx].emotions.textfont,\n                                textSize: toInject[idx].emotions.textsize,\n                                textColor: toInject[idx].emotions.textcolor,\n                            },\n                            true,\n                        );\n                } else if (toInject.length == 1) {\n                    await this.injectLeftPortrait(\n                        toInject[0].params.src,\n                        toInject[0].params.name,\n                        toInject[0].params.imgId,\n                        toInject[0].params.optalign,\n                        {\n                            emote: toInject[0].emotions.emote,\n                            textFlyin: toInject[0].emotions.textflyin,\n                            textStanding: toInject[0].emotions.textstanding,\n                            textFont: toInject[0].emotions.textfont,\n                            textSize: toInject[0].emotions.textsize,\n                            textColor: toInject[0].emotions.textcolor,\n                        },\n                        true,\n                    );\n                }\n                // finally apply positioning for 3n total run speed\n                window.setTimeout(() => {\n                    for (let dat of data.insertdata) {\n                        insert = this.getInsertById(dat.insertid);\n                        //Logger.debug(\"attempting to apply position to \",insert,dat.insertid,dat);\n                        if (insert) {\n                            Logger.debug(\"insert active post resync add, appying position\");\n                            // apply mirror state\n                            /*\n\t\t\t\t\t\t\tif (Boolean(dat.position.mirror) != insert.mirrored)\n\t\t\t\t\t\t\t\tthis._mirrorInsert(port,true);\n\t\t\t\t\t\t\t*/\n                            Logger.debug(\"Mirror ? %s : %s\", dat.position.mirror, insert.mirrored);\n                            if (Boolean(dat.position.mirror) != insert.mirrored) {\n                                Logger.debug(\"no match!\");\n                                insert.mirrored = Boolean(dat.position.mirror);\n                            }\n                            // apply positioning data\n                            insert.portraitContainer.scale.x = insert.mirrored ? -1 : 1;\n                            insert.portraitContainer.x = dat.position.x;\n                            insert.portraitContainer.y = dat.position.y;\n                            // apply texyflyin/textstanding data\n                            insert.textFlyin = dat.emotions.textflyin;\n                            insert.textStanding = dat.emotions.textstanding;\n                            insert.textFont = dat.emotions.textfont;\n                            insert.textSize = dat.emotions.textsize;\n                            insert.textColor = dat.emotions.textcolor;\n                        }\n                    }\n                    // apply Narrator bar last\n                    this.toggleNarratorBar(data.narrator);\n                }, 1000);\n            }, 1600);\n        }\n    }\n\n    /**\n     * Process a scene update payload\n     *\n     * if we receive an event of the same type that is older\n     * than one we've already resceived, notify, and drop it.\n     *\n     * Scene Events\n     *\n     * enterscene : an insert was injected remotely\n     * exitscene : an insert was removed remotely\n     * positionupdate : an insert was moved removely\n     * push : an insert was pushed removely\n     * swap : an insert was swapped remotely\n     * emote : an emote was triggered removely\n     * addtexture : a texture asset was added remotely\n     * addalltextures : a group of textures were added remotely\n     * state : an insert's assets were staged remotely\n     * narrator : the narrator bar was activated remotely\n     * decaytext : an insert's text was decayed remotely\n     * renderinsert : an insert is requesting to be rendered immeidately remotely\n     *\n     * @params senderId (String) : The userId of the playerId whom sent the scene event\n     * @params type (String) : The scene event subtype to process, and is represented in the data object\n     * @params data (Object) : An object whose properties contain the relevenat data needed for each scene subtype\n     *\n     * @private\n     */\n    async _processSceneEvent(senderId, type, data) {\n        Logger.debug(\"Processing scene event %s\", type, data);\n        let insert, actorId, params, emote, port, emotions, resName, app, insertEmote, render;\n\n        switch (type) {\n            case \"enterscene\": {\n                Logger.debug(\"enterscene: aid:%s\", actorId);\n                actorId = data.insertid.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n                params = this._getInsertParamsFromActorId(actorId);\n                emotions = data.emotions\n                    ? data.emotions\n                    : {\n                          emote: null,\n                          textFlying: null,\n                          textStanding: null,\n                          textFont: null,\n                          textSize: null,\n                          textColor: null,\n                      };\n                if (!params) {\n                    return;\n                }\n                Logger.debug(\"params: \", params);\n                if (data.isleft) {\n                    await this.injectLeftPortrait(\n                        params.src,\n                        params.name,\n                        params.imgId,\n                        params.optalign,\n                        emotions,\n                        true,\n                    );\n                } else {\n                    await this.injectRightPortrait(\n                        params.src,\n                        params.name,\n                        params.imgId,\n                        params.optalign,\n                        emotions,\n                        true,\n                    );\n                }\n\n                break;\n            }\n            case \"exitscene\": {\n                Logger.debug(\"exitscene: tid:%s\", data.insertid);\n                this.removeInsertById(data.insertid, true);\n                break;\n            }\n            case \"positionupdate\": {\n                Logger.debug(\"positionupdate: tid:%s\", data.insertid);\n                insert = this.getInsertById(data.insertid);\n                if (insert) {\n                    // apply mirror state\n                    Logger.debug(\"mirroring desired: %s , current mirror %s\", data.position.mirror, insert.mirrored);\n                    if (Boolean(data.position.mirror) != insert.mirrored) {\n                        insert.mirrored = data.position.mirror;\n                    }\n                    // apply positioning data\n                    //insert.portraitContainer.x = data.position.x;\n                    //insert.portraitContainer.y = data.position.y;\n                    let tweenId = \"portraitMove\";\n                    let tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                        pixi: { scaleX: data.position.mirror ? -1 : 1, x: data.position.x, y: data.position.y },\n                        ease: Power3.easeOut,\n                        onComplete: function (ctx, imgId, tweenId) {\n                            // decrement the rendering accumulator\n                            ctx._removeDockTween(imgId, this, tweenId);\n                            // remove our own reference from the dockContainer tweens\n                        },\n                        onCompleteParams: [this, insert.imgId, tweenId],\n                    });\n                    this._addDockTween(insert.imgId, tween, tweenId);\n                }\n                break;\n            }\n            case \"push\": {\n                Logger.debug(\"insertpush: tid:%s\", data.insertid);\n                this.pushInsertById(data.insertid, data.tofront, true);\n                break;\n            }\n            case \"swap\": {\n                Logger.debug(\"insertswap: tid1:%s tid2:%s\", data.insertid1, data.insertid2);\n                this.swapInsertsById(data.insertid1, data.insertid2, true);\n                break;\n            }\n            case \"move\": {\n                Logger.debug(\"insertmove: tid1:%s tid2:%s\", data.insertid1, data.insertid2);\n                this.moveInsertById(data.insertid1, data.insertid2, true);\n                break;\n            }\n            case \"emote\": {\n                Logger.debug(\"emote:\", data);\n                emote = data.emotions.emote;\n                let textFlyin = data.emotions.textflyin;\n                let textStanding = data.emotions.textstanding;\n                let textFont = data.emotions.textfont;\n                let textSize = data.emotions.textsize;\n                let textColor = data.emotions.textcolor;\n                this.setUserEmote(senderId, data.insertid, \"emote\", emote, true);\n                this.setUserEmote(senderId, data.insertid, \"textflyin\", textFlyin, true);\n                this.setUserEmote(senderId, data.insertid, \"textstanding\", textStanding, true);\n                this.setUserEmote(senderId, data.insertid, \"textfont\", textFont, true);\n                this.setUserEmote(senderId, data.insertid, \"textsize\", textSize, true);\n                this.setUserEmote(senderId, data.insertid, \"textcolor\", textColor, true);\n                if (data.insertid == this.speakingAs) {\n                    this.renderEmoteMenu();\n                }\n                break;\n            }\n            case \"addtexture\": {\n                Logger.debug(\"texturereplace:\", data);\n                insert = this.getInsertById(data.insertid);\n                actorId = data.insertid.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n                params = this._getInsertParamsFromActorId(actorId);\n                if (!params) return;\n\n                app = this.pixiCTX;\n                insertEmote = this._getEmoteFromInsert(insert);\n                render = false;\n\n                if (insertEmote == data.emote) render = true;\n                else if (!data.emote) render = true;\n\n                const resources = await this._AddTextureResource(\n                    data.imgsrc,\n                    data.resname,\n                    data.insertid,\n                    data.emote,\n                    true,\n                );\n                // if oure emote is active and we're replacing the emote texture, or base is active, and we're replacing the base texture\n                Logger.debug(\"add replacement complete! \", resources[data.resname], insertEmote, data.emote, render);\n                if (render && app && insert && insert.dockContainer) {\n                    Logger.debug(\"RE-RENDERING with NEW texture resource %s : %s\", data.resname, data.imgsrc);\n\n                    // bubble up dataum from the update\n                    insert.optAlign = params.optalign;\n                    insert.name = params.name;\n                    insert.label.text = params.name;\n\n                    this._clearPortraitContainer(data.insertid);\n                    await this._setupPortraitContainer(data.insertid, insert.optAlign, data.resname, resources);\n                    // re-attach label + typingBubble\n                    insert.dockContainer.addChild(insert.label);\n                    insert.dockContainer.addChild(insert.typingBubble);\n\n                    this._repositionInsertElements(insert);\n\n                    if (data.insertid == this.speakingAs);\n                    this.renderEmoteMenu();\n                    if (!this.rendering) this._renderTheatre(performance.now());\n                }\n                break;\n            }\n            case \"addalltextures\": {\n                Logger.debug(\"textureallreplace:\", data);\n                insert = this.getInsertById(data.insertid);\n                actorId = data.insertid.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n                params = this._getInsertParamsFromActorId(actorId);\n                if (!params) return;\n\n                app = this.pixiCTX;\n                insertEmote = this._getEmoteFromInsert(insert);\n                render = false;\n\n                if (insertEmote == data.emote) render = true;\n                else if (!data.emote) render = true;\n\n                const resources = await this._AddAllTextureResources(\n                    data.imgsrcs,\n                    data.insertid,\n                    data.emote,\n                    data.eresname,\n                    true,\n                );\n                // if oure emote is active and we're replacing the emote texture, or base is active, and we're replacing the base texture\n\n                Logger.debug(\"add all textures complete! \", data.emote, data.eresname, params.emotes[data.emote]);\n                if (render && app && insert && insert.dockContainer && data.eresname) {\n                    Logger.debug(\"RE-RENDERING with NEW texture resource %s\", data.eresname);\n\n                    // bubble up dataum from the update\n                    insert.optAlign = params.optalign;\n                    insert.name = params.name;\n                    insert.label.text = params.name;\n\n                    this._clearPortraitContainer(data.insertid);\n                    await this._setupPortraitContainer(data.insertid, insert.optAlign, data.eresname, resources);\n                    // re-attach label + typingBubble\n                    insert.dockContainer.addChild(insert.label);\n                    insert.dockContainer.addChild(insert.typingBubble);\n\n                    this._repositionInsertElements(insert);\n\n                    if (data.insertid == this.speakingAs);\n                    this.renderEmoteMenu();\n                    if (!this.rendering) this._renderTheatre(performance.now());\n                }\n\n                break;\n            }\n            case \"stage\": {\n                Logger.debug(\"staging insert\", data.insertid);\n                this.stageInsertById(data.insertid, true);\n                break;\n            }\n            case \"narrator\": {\n                Logger.debug(\"toggle narrator bar\", data.active);\n                this.toggleNarratorBar(data.active, true);\n                break;\n            }\n            case \"decaytext\": {\n                Logger.debug(\"decay textbox\", data.insertid);\n                this.decayTextBoxById(data.insertid, true);\n                break;\n            }\n            case \"renderinsert\": {\n                insert = this.getInsertById(data.insertid);\n                if (insert) await this.renderInsertById(data.insertid);\n                break;\n            }\n            default: {\n                Logger.warn(\"UNKNOWN SCENE EVENT: %s with data: \", false, type, data);\n            }\n        }\n    }\n\n    /**\n     * Merely getting the typing event is the payload, we just refresh the typing timout\n     * for the given userId\n     */\n\n    /**\n     * Process a typing event payload\n     *\n     * @param userId (String) : The userId of the user that is typing\n     * @param data (Object) : The Object payload that contains the typing event data\n     *\n     * @private\n     */\n    _processTypingEvent(userId, data) {\n        // Possibly other things ?\n        this.setUserTyping(userId, data.insertid);\n        // emote information is a rider on this event, process it\n        let emote = data.emotions.emote;\n        let textFlyin = data.emotions.textflyin;\n        let textStanding = data.emotions.textstanding;\n        let textFont = data.emotions.textfont;\n        let textSize = data.emotions.textsize;\n        let textColor = data.emotions.textcolor;\n\n        this.setUserEmote(userId, data.insertid, \"emote\", emote, true);\n        this.setUserEmote(userId, data.insertid, \"textflyin\", textFlyin, true);\n        this.setUserEmote(userId, data.insertid, \"textstanding\", textStanding, true);\n        this.setUserEmote(userId, data.insertid, \"textfont\", textFont, true);\n        this.setUserEmote(userId, data.insertid, \"textsize\", textSize, true);\n        this.setUserEmote(userId, data.insertid, \"textcolor\", textColor, true);\n        // if the insertid is our speaking id, update our emote menu\n        if (data.insertid == this.speakingAs) this.renderEmoteMenu();\n    }\n\n    /**\n     * Test wither a user is typing given user id\n     *\n     * @param userId (String) : The userId of user to check\n     */\n    isUserTyping(userId) {\n        if (!this.usersTyping[userId]) return false;\n\n        return this.usersTyping[userId].timeoutId;\n    }\n\n    /**\n     * Get the text color given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The text color active for the insert.\n     *\n     * @private\n     */\n    _getTextColorFromInsert(insert) {\n        if (!insert) return null;\n        return insert.textColor;\n    }\n    /**\n     * Get the text size given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The text size active for the insert.\n     *\n     * @private\n     */\n    _getTextSizeFromInsert(insert) {\n        if (!insert) return null;\n        return insert.textSize;\n    }\n    /**\n     * Get the text font given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The text font active for the insert.\n     *\n     * @private\n     */\n    _getTextFontFromInsert(insert) {\n        if (!insert) return null;\n        return insert.textFont;\n    }\n    /**\n     * Get the text fly-in animation given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The text flyin active for the insert.\n     *\n     * @private\n     */\n    _getTextFlyinFromInsert(insert) {\n        if (!insert) return null;\n        return insert.textFlyin;\n    }\n    /**\n     * Get the text standing animation given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The text standing active for the insert.\n     *\n     * @private\n     */\n    _getTextStandingFromInsert(insert) {\n        if (!insert) return null;\n        return insert.textStanding;\n    }\n\n    /**\n     * Get the insert emote given the insert\n     *\n     * @param insert (Object) : An object represeting an insert\n     *\n     * @return (String) The emote active for the insert.\n     *\n     * @private\n     */\n    _getEmoteFromInsert(insert) {\n        if (!insert) return null;\n        if (this.isDelayEmote) return insert.delayedOldEmote;\n        return insert.emote;\n    }\n\n    /**\n     * Get the inserts which are typing based on if their users are typing\n     */\n    getInsertsTyping() {\n        let typing = [];\n        for (let userId in this.usersTyping) if (this.usersTyping[userId].theatreId) typing.push(userId);\n\n        return typing;\n    }\n\n    /**\n     * Set the user emote state, and change the insert if one is active for that\n     * user.\n     *\n     * @param userId (String) : The userId of the user whom triggered the emote state change\n     * @param theatreId (String) : The theatreId of the insert that is changing\n     * @param subType (String) : The subtype of the emote state that is being changed\n     * @param value (String) : The value of the emote state that is being set\n     * @param remote (Boolean) : Boolean indicating if this is a remote or local action\n     */\n    setUserEmote(userId, theatreId, subType, value, remote) {\n        if (!this.userEmotes[userId]) this.userEmotes[userId] = {};\n\n        let userEmoting = this.userEmotes[userId];\n        let insert = this.getInsertById(theatreId);\n\n        switch (subType) {\n            case \"textfont\":\n                if (insert) {\n                    if (value) insert.textFont = value;\n                    else insert.textFont = null;\n                } else if (theatreId == CONSTANTS.NARRATOR) {\n                    if (value) this.theatreNarrator.setAttribute(\"textfont\", value);\n                    else this.theatreNarrator.removeAttribute(\"textfont\", value);\n                } else {\n                    userEmoting.textFont = value;\n                }\n                break;\n            case \"textsize\":\n                if (insert) {\n                    if (value) insert.textSize = value;\n                    else insert.textSize = null;\n                } else if (theatreId == CONSTANTS.NARRATOR) {\n                    if (value) this.theatreNarrator.setAttribute(\"textsize\", value);\n                    else this.theatreNarrator.removeAttribute(\"textsize\", value);\n                    userEmoting.textSize = value;\n                } else {\n                    userEmoting.textSize = value;\n                }\n                break;\n            case \"textcolor\":\n                if (insert) {\n                    if (value) insert.textColor = value;\n                    else insert.textColor = null;\n                } else if (theatreId == CONSTANTS.NARRATOR) {\n                    if (value) this.theatreNarrator.setAttribute(\"textcolor\", value);\n                    else this.theatreNarrator.removeAttribute(\"textcolor\", value);\n                } else {\n                    userEmoting.textColor = value;\n                }\n                break;\n            case \"textflyin\":\n                if (insert) {\n                    if (value) insert.textFlyin = value;\n                    else insert.textFlyin = null;\n                } else if (theatreId == CONSTANTS.NARRATOR) {\n                    if (value) this.theatreNarrator.setAttribute(\"textflyin\", value);\n                    else this.theatreNarrator.removeAttribute(\"textflyin\", value);\n                } else {\n                    userEmoting.textFlyin = value;\n                }\n                break;\n            case \"textstanding\":\n                if (insert) {\n                    if (value) insert.textStanding = value;\n                    else insert.textStanding = null;\n                } else if (theatreId == CONSTANTS.NARRATOR) {\n                    if (value) this.theatreNarrator.setAttribute(\"textstanding\", value);\n                    else this.theatreNarrator.removeAttribute(\"textstanding\", value);\n                } else {\n                    userEmoting.textStanding = value;\n                }\n                break;\n            case \"emote\":\n                // if provided a theatreId, set that insert's emote image + effects\n                if (insert) {\n                    // if we're delaying our emote, and ths user is us, hold off on setting it\n                    if (\n                        this.isDelayEmote &&\n                        userId == game.user.id &&\n                        (this.delayedSentState == 0 || this.delayedSentState == 1)\n                    ) {\n                        if (this.delayedSentState == 0) {\n                            insert.delayedOldEmote = insert.emote;\n                            this.delayedSentState = 1;\n                        }\n                        Logger.debug(\"DELAYING EMOTE %s, 'showing' %s\", value, insert.delayedOldEmote);\n                    } else {\n                        insert.delayedOldEmote = insert.emote;\n                        this.setEmoteForInsertById(value, theatreId, remote);\n                    }\n                    if (value) insert.emote = value;\n                    else insert.emote = null;\n                } else {\n                    userEmoting.emote = value;\n                }\n                break;\n        }\n        // Send to socket\n        Logger.debug(\"SEND EMOTE PACKET %s,%s ??\", this.isDelayEmote, this.delayedSentState);\n        if (\n            !remote &&\n            (!this.isDelayEmote || this.delayedSentState == 2) &&\n            (insert || theatreId == CONSTANTS.NARRATOR)\n        ) {\n            Logger.debug(\"SENDING EMOTE PACKET %s,%s\", this.isDelayEmote, this.delayedSentState);\n            this._sendSceneEvent(\"emote\", {\n                insertid: insert ? insert.imgId : CONSTANTS.NARRATOR,\n                emotions: {\n                    emote: insert ? this._getEmoteFromInsert(insert) : null,\n                    textflyin: insert\n                        ? this._getTextFlyinFromInsert(insert)\n                        : this.theatreNarrator.getAttribute(\"textflyin\"),\n                    textstanding: insert\n                        ? this._getTextStandingFromInsert(insert)\n                        : this.theatreNarrator.getAttribute(\"textstanding\"),\n                    textfont: insert\n                        ? this._getTextFontFromInsert(insert)\n                        : this.theatreNarrator.getAttribute(\"textfont\"),\n                    textsize: insert\n                        ? this._getTextSizeFromInsert(insert)\n                        : this.theatreNarrator.getAttribute(\"textsize\"),\n                    textcolor: insert\n                        ? this._getTextColorFromInsert(insert)\n                        : this.theatreNarrator.getAttribute(\"textcolor\"),\n                },\n            });\n        }\n    }\n\n    /**\n     * set the user as typing, and or update the last typed\n     *\n     * @param userId (String) : The userId of the user that is to be set as 'typing'.\n     * @param theatreId (String) : The theatreId the user is 'typing' as.\n     */\n    setUserTyping(userId, theatreId) {\n        if (!this.usersTyping[userId]) this.usersTyping[userId] = {};\n\n        let userTyping = this.usersTyping[userId];\n        if (userTyping.timeoutId) window.clearTimeout(userTyping.timeoutId);\n\n        // clear old speakingId if it still exists\n        if (theatreId != userTyping.theatreId) {\n            let insert = this.getInsertById(userTyping.theatreId);\n            // if not destroyed already\n            if (insert && insert.portrait) {\n                // kill tweens\n                // hide\n                this._removeDockTween(insert.imgId, null, \"typingAppear\");\n                this._removeDockTween(insert.imgId, null, \"typingWiggle\");\n                this._removeDockTween(insert.imgId, null, \"typingBounce\");\n                // fade away\n                let oy = insert.portrait.height - (insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight);\n\n                // style specific settings\n                switch (this.settings.theatreStyle) {\n                    case \"lightbox\":\n                        break;\n                    case \"clearbox\":\n                        oy += insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight;\n                        break;\n                    case \"mangabubble\":\n                        break;\n                    case \"textbox\":\n                        break;\n                    default:\n                        break;\n                }\n\n                let tweenId = \"typingVanish\";\n                let tween = TweenMax.to(insert.typingBubble, 0.2, {\n                    pixi: { scaleX: 0.01, scaleY: 0.01, alpha: 0, y: oy },\n                    ease: Power0.easeNone,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        this.targets()[0].scale.x = 1;\n                        this.targets()[0].scale.y = 1;\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, insert.imgId, tweenId],\n                });\n                this._addDockTween(insert.imgId, tween, tweenId);\n\n                //insert.typingBubble.alpha = 0;\n                userTyping.theatreId = null;\n            }\n        }\n\n        if (theatreId) {\n            let insert = this.getInsertById(theatreId);\n            // if not destroyed already\n            if (insert && insert.portrait && !insert.tweens[\"typingWiggle\"]) {\n                // start tweens\n                // show\n                this._removeDockTween(insert.imgId, null, \"typingVanish\");\n\n                let tweenId = \"typingAppear\";\n                insert.typingBubble.scale.x = 0.01;\n                insert.typingBubble.scale.y = 0.01;\n                let tween = TweenMax.to(insert.typingBubble, 0.2, {\n                    pixi: { scaleX: 1, scaleY: 1, alpha: 1 },\n                    ease: Power0.easeNone,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        this.targets()[0].scale.x = 1;\n                        this.targets()[0].scale.y = 1;\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, insert.imgId, tweenId],\n                });\n                this._addDockTween(insert.imgId, tween, tweenId);\n\n                tweenId = \"typingWiggle\";\n                insert.typingBubble.rotation = 0.174533;\n                tween = TweenMax.to(insert.typingBubble, 0.5, {\n                    pixi: { rotation: -10 },\n                    ease: Power0.easeNone,\n                    repeat: -1,\n                    yoyo: true,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, insert.imgId, tweenId],\n                });\n                this._addDockTween(insert.imgId, tween, tweenId);\n\n                let oy =\n                    insert.portrait.height -\n                    (insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight) -\n                    insert.label.style.lineHeight * 0.75;\n                // style specific settings\n                switch (this.settings.theatreStyle) {\n                    case \"clearbox\":\n                        insert.typingBubble.y = insert.portrait.height;\n                        oy += insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight;\n                        break;\n                    case \"mangabubble\":\n                    case \"lightbox\":\n                    case \"textbox\":\n                    default:\n                        insert.typingBubble.y =\n                            insert.portrait.height - (insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight);\n                        break;\n                }\n\n                tweenId = \"typingBounce\";\n                tween = TweenMax.to(insert.typingBubble, 0.25, {\n                    pixi: { y: oy },\n                    ease: Power3.easeOut,\n                    repeat: -1,\n                    yoyo: true,\n                    yoyoEase: Power0.easeNone,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        this.targets()[0].y = oy;\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, insert.imgId, tweenId],\n                });\n                this._addDockTween(insert.imgId, tween, tweenId);\n\n                //insert.typingBubble.alpha = 1;\n                userTyping.theatreId = theatreId;\n            } else if (theatreId == CONSTANTS.NARRATOR) {\n                userTyping.theatreId = theatreId;\n            }\n        }\n\n        userTyping.timeoutId = window.setTimeout(() => {\n            Logger.debug(\"%s typing timeout\", userId);\n            this.removeUserTyping(userId);\n        }, 6000);\n    }\n\n    /**\n     * set the user as no longer typing\n     *\n     * @param userId (String) : The userId to remove as 'typing'.\n     */\n    removeUserTyping(userId) {\n        Logger.debug(\"removeUserTyping: \", this.usersTyping[userId]);\n        if (!this.usersTyping[userId]) {\n            this.usersTyping[userId] = {};\n            return;\n        }\n        if (!this.usersTyping[userId].timeoutId) return;\n\n        if (this.usersTyping[userId].theatreId) {\n            let insert = this.getInsertById(this.usersTyping[userId].theatreId);\n            // if not destroyed already\n            if (insert) {\n                // kill tweens\n                // hide\n                this._removeDockTween(insert.imgId, null, \"typingAppear\");\n                this._removeDockTween(insert.imgId, null, \"typingWiggle\");\n                this._removeDockTween(insert.imgId, null, \"typingBounce\");\n                // fade away\n                let oy = insert.portrait.height - (insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight);\n                // style specific settings\n                switch (this.settings.theatreStyle) {\n                    case \"lightbox\":\n                        break;\n                    case \"clearbox\":\n                        oy += insert.optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight;\n                        break;\n                    case \"mangabubble\":\n                        break;\n                    case \"textbox\":\n                        break;\n                    default:\n                        break;\n                }\n\n                let tweenId = \"typingVanish\";\n                let tween = TweenMax.to(insert.typingBubble, 0.2, {\n                    pixi: { scaleX: 0.01, scaleY: 0.01, alpha: 0, y: oy },\n                    ease: Power0.easeNone,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        this.targets()[0].scale.x = 1;\n                        this.targets()[0].scale.y = 1;\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, insert.imgId, tweenId],\n                });\n                this._addDockTween(insert.imgId, tween, tweenId);\n\n                //insert.typingBubble.alpha = 0;\n            }\n        }\n\n        Logger.debug(\"%s is no longer typing (removed)\", userId);\n        window.clearTimeout(this.usersTyping[userId].timeoutId);\n        this.usersTyping[userId].timeoutId = null;\n    }\n\n    /**\n     * Pull insert theatre parameters from an actor if possible\n     *\n     * @param actorId (String) : The actor Id from which to pull theatre insert data from\n     *\n     * @return (Object) : An object containing the parameters of the insert given the actor Id\n     *                     or null.\n     * @private\n     */\n    _getInsertParamsFromActorId(actorId) {\n        let actor = game.actors.get(actorId);\n        if (!!!actor) {\n            Logger.error(\"ERROR, ACTOR %s DOES NOT EXIST!\", true, actorId);\n            return null;\n        }\n        //Logger.debug(\"getting params from actor: \",actor);\n\n        let theatreId = `theatre-${actor._id}`;\n        let portrait = actor.img ? actor.img : CONSTANTS.DEFAULT_PORTRAIT;\n        let optAlign = \"top\";\n        let name = Theatre.getActorDisplayName(actor._id);\n        let emotes = {};\n        let settings = {};\n\n        // Use defaults incase the essential flag attributes are missing\n        if (actor.flags.theatre) {\n            if (actor.flags.theatre.name && actor.flags.theatre.name != \"\") name = actor.flags.theatre.name;\n            if (actor.flags.theatre.baseinsert && actor.flags.theatre.baseinsert != \"\")\n                portrait = actor.flags.theatre.baseinsert;\n            if (actor.flags.theatre.optalign && actor.flags.theatre.optalign != \"\")\n                optAlign = actor.flags.theatre.optalign;\n            if (actor.flags.theatre.emotes) emotes = actor.flags.theatre.emotes;\n            if (actor.flags.theatre.settings) settings = actor.flags.theatre.settings;\n        }\n\n        return {\n            src: portrait,\n            name: name,\n            optalign: optAlign,\n            imgId: theatreId,\n            emotes: emotes,\n            settings: settings,\n        };\n    }\n\n    /**\n     * Determine if the default animations are disabled given a theatreId\n     *\n     * @param theatreId (String) : The theatreId who's theatre properties to\n     *                             test for if the default animations are disabled.\n     *\n     * @return (Boolean) : True if disabled, false if not, null if the actor\n     *                      does not exist\n     */\n    isDefaultDisabled(theatreId) {\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actor = game.actors.get(actorId);\n\n        if (!!!actor) {\n            Logger.error(\"ERROR, ACTOR %s DOES NOT EXIST!\", true, actorId);\n            return null;\n        }\n\n        Logger.debug(\"isDefaultDisabled \", actor);\n\n        if (actor.flags.theatre && actor.flags.theatre.disabledefault) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Given the userId and theatreId, determine of the user is an 'owner'\n     *\n     * @params userId (String) : The userId of the user to check.\n     * @params theatreId (String) : The theatreId of insert to check.\n     *\n     * @return (Boolean) : True if the userId owns the actor, False otherwise\n     *                      including if the actor for the theatreId does not exist.\n     */\n    isActorOwner(userId, theatreId) {\n        let user = game.users.get(userId);\n        if (user.isGM) return true;\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actor = game.actors.get(actorId);\n\n        if (!!!actor) {\n            Logger.error(\"ERROR, ACTOR %s DOES NOT EXIST!\", true, actorId);\n            return false;\n        }\n        if (\n            (actor.ownership[userId] && actor.ownership[userId] >= 3) ||\n            (actor.ownership[\"default\"] && actor.ownership[\"default\"] >= 3)\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Is the theatreId of a player controlled actor?\n     *\n     * @params theatreId (String) : The theatreId of the insert to checkA\n     *\n     * @return (Boolean) : True if the insert is player controlled, False otherwise\n     */\n    isPlayerOwned(theatreId) {\n        if (game.user.isGM) return true;\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actor = game.actors.get(actorId);\n        let user;\n\n        if (!!!actor) {\n            Logger.error(\"ERROR, ACTOR %s DOES NOT EXIST!\", true, actorId);\n            return;\n        }\n        for (let perm in actor.ownership) {\n            if (perm != \"default\") {\n                user = game.users.get(perm);\n                if (!user.isGM) return true;\n            } else {\n                if (actor.ownership[perm] >= 1) return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Immediately render this insert if it is active with whatever\n     * parameters it has\n     *\n     * @params id (String) : The theatreId of the insert to render.\n     */\n    async renderInsertById(id) {\n        let insert = this.getInsertById(id);\n        let actorId = id.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let resName = CONSTANTS.DEFAULT_PORTRAIT;\n        let params = this._getInsertParamsFromActorId(actorId);\n        if (!insert || !params) return;\n\n        if (insert.emote && params.emotes[insert.emote].insert && params.emotes[insert.emote].insert != \"\")\n            resName = params.emotes[insert.emote].insert;\n        else resName = params.src;\n\n        // bubble up dataum from the update\n        insert.optAlign = params.optalign;\n        insert.name = params.name;\n        insert.label.text = params.name;\n\n        this._clearPortraitContainer(id);\n        await this._setupPortraitContainer(id, params.optalign, resName);\n        // re attach label + typing bubble\n        insert.dockContainer.addChild(insert.label);\n        insert.dockContainer.addChild(insert.typingBubble);\n\n        this._repositionInsertElements(insert);\n\n        if (!this.rendering) this._renderTheatre(performance.now());\n    }\n\n    /**\n     * Initialize the tooltip canvas which renders previews for the emote menu\n     *\n     * @return (HTMLElement) : The canvas HTMLElement of the PIXI canvas created, or\n     *                          null if unsuccessful.\n     * @private\n     */\n    _initTheatreToolTip() {\n        let app = new PIXI.Application({ width: 140, height: 140, transparent: true, antialias: true });\n        let canvas = app.view;\n\n        if (!canvas) {\n            Logger.error(\"FAILED TO INITILIZE TOOLTIP CANVAS!\", true);\n            return null;\n        }\n\n        let holder = document.createElement(\"div\");\n        KHelpers.addClass(holder, \"theatre-tooltip\");\n        KHelpers.addClass(holder, \"app\");\n        holder.appendChild(canvas);\n\n        // turn off ticker\n        app.ticker.autoStart = false;\n        app.ticker.stop();\n\n        this.pixiToolTipCTX = app;\n\n        // hide\n        //holder.style.display = \"none\";\n        holder.style.opacity = 0;\n\n        return holder;\n    }\n\n    /**\n     * configure the theatre tool tip based on the provided\n     * insert, if none is provided, the do nothing\n     *\n     * @params theatreId (String) : The theatreId of the insert to display in\n     *                              the theatre tool tip.\n     * @params emote (String) : The emote of the theatreId to get for dispay\n     *                          in the theatre tool tip.\n     */\n    async configureTheatreToolTip(theatreId, emote) {\n        if (!theatreId || theatreId == CONSTANTS.NARRATOR) return;\n\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let params = this._getInsertParamsFromActorId(actorId);\n\n        if (!params) {\n            Logger.error(\"ERROR actor no longer exists for %s\", true, theatreId);\n            return;\n        }\n\n        let resName =\n            emote && params.emotes[emote] && params.emotes[emote].insert ? params.emotes[emote].insert : params.src;\n\n        const texture = await PIXI.Assets.load(resName);\n\n        if (!texture) {\n            Logger.error(\"ERROR could not load texture (for tooltip) %s\", true, resName);\n            return;\n        }\n\n        let app = this.pixiToolTipCTX;\n\n        // clear canvas\n        for (let idx = app.stage.children.length - 1; idx >= 0; --idx) {\n            let child = app.stage.children[idx];\n            child.destroy();\n            //app.stage.removeChildAt(idx);\n        }\n\n        let sprite = new PIXI.Sprite(texture);\n        let portWidth = texture.width;\n        let portHeight = texture.height;\n        let maxSide = Math.max(portWidth, portHeight);\n        let scaledWidth, scaledHeight, ratio;\n        if (maxSide == portWidth) {\n            // scale portWidth to 200px, assign height as a fraction\n            scaledWidth = 140;\n            scaledHeight = (portHeight * 140) / portWidth;\n            ratio = scaledHeight / portHeight;\n            app.stage.width = scaledWidth;\n            app.stage.height = scaledHeight;\n\n            app.stage.addChild(sprite);\n            app.stage.scale.x = ratio;\n            app.stage.scale.y = ratio;\n            app.stage.x = 0;\n            app.stage.y = 70 - scaledHeight / 2;\n        } else {\n            // scale portHeight to 200px, assign width as a fraction\n            scaledHeight = 140;\n            scaledWidth = (portWidth * 140) / portHeight;\n            ratio = scaledWidth / portWidth;\n            app.stage.width = scaledWidth;\n            app.stage.height = scaledHeight;\n\n            app.stage.addChild(sprite);\n            app.stage.scale.x = ratio;\n            app.stage.scale.y = ratio;\n            app.stage.x = 70 - scaledWidth / 2;\n            app.stage.y = 0;\n        }\n\n        // adjust dockContainer + portraitContainer dimensions to fit the image\n        //app.stage.y = portHeight*ratio/2;\n\n        // set sprite initial coordinates + state\n        sprite.x = 0;\n        sprite.y = 0;\n\n        //Logger.debug(\"Tooltip Portrait loaded with w:%s h:%s scale:%s\",portWidth,portHeight,ratio,sprite);\n\n        // render and show the tooltip\n        app.render();\n        this.theatreToolTip.style.opacity = 1;\n        // face detect\n        /*\n\t\tfaceapi.detectSingleFace(app.view,new faceapi.TinyFaceDetectorOptions()).then((detection)=>{\n\t\t\tLogger.\"face detected: \", detection);\n\t\t\tif (detection) {\n\t\t\t\tlet box = detection.box;\n\t\t\t\tLogger.debug(\"successful preview face detection: \", box);\n\t\t\t\tlet graphics = new PIXI.Graphics();\n\t\t\t\tgraphics.lineStyle (2,0xFFFFFF,1);\n\n\t\t\t\tif (maxSide == portWidth) {\n\t\t\t\t\tgraphics.moveTo(box.x/(ratio*2)+70,box.y/(ratio*2));\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2) + box.width/(ratio*2)+70,box.y/(ratio*2));\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2) + box.width/(ratio*2)+70,box.y/(ratio*2)+box.height/(ratio*2));\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2)+70,box.y/(ratio*2)+box.height/(ratio*2));\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2)+70,box.y/(ratio*2));\n\t\t\t\t} else {\n\t\t\t\t\tgraphics.moveTo(box.x/(ratio*2),box.y/(ratio*2)+70);\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2) + box.width/(ratio*2),box.y/(ratio*2)+70);\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2) + box.width/(ratio*2),box.y/(ratio*2)+box.height/(ratio*2)+70);\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2),box.y/(ratio*2)+box.height/(ratio*2)+70);\n\t\t\t\t\tgraphics.lineTo(box.x/(ratio*2),box.y/(ratio*2)+70);\n\t\t\t\t}\n\t\t\t\tapp.stage.addChild(graphics);\n\t\t\t\tapp.render();\n\t\t\t} else {\n\t\t\t\tLogger.error(\"FAILED TO FIND PREVIEW FACE\", false);\n\t\t\t}\n\t\t\tthis.theatreToolTip.style.opacity = 1;\n\t\t});\n\t\t*/\n    }\n\n    /**\n     * Inititalize Face API\n     *\n     *\n     * @private\n     */\n    _initFaceAPI() {\n        // const MODEL_URL = `modules/${CONSTANTS.MODULE_ID}/weights`;\n        const MODEL_URL = `modules/${CONSTANTS.MODULE_ID}/assets/models`;\n        faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n        faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n        faceapi.loadFaceLandmarkModel(MODEL_URL);\n        faceapi.loadFaceRecognitionModel(MODEL_URL);\n    }\n\n    /**\n     * Create the initial dock canvas, future 'portraits'\n     * will be PIXI containers whom are sized to the portraits\n     * that they contain.\n     *\n     * @return (HTMLElement) : The canvas HTMLElement of the created PIXI Canvas,\n     *                          or null if unsuccessful.\n     * @private\n     */\n    _initTheatreDockCanvas() {\n        // get theatreDock, and an initialize the canvas\n        // no need to load in any resources as that will be done on a per-diem bases\n        // by each container portrait\n\n        let app = new PIXI.Application({\n            backgroundAlpha: 0,\n            antialias: true,\n            width: document.body.offsetWidth,\n            resolution: game.settings.get(\"core\", \"pixelRatioResolutionScaling\") ? window.devicePixelRatio : 1,\n        });\n\n        let canvas = app.view;\n\n        if (!canvas) {\n            Logger.error(\"FAILED TO INITILIZE DOCK CANVAS!\", true);\n            return null;\n        }\n\n        this.theatreDock = canvas;\n        this.pixiCTX = app;\n\n        // turn off ticker\n        app.ticker.autoStart = false;\n        app.ticker.stop();\n\n        return canvas;\n    }\n\n    /**\n     * Our efficient render loop? We want to render only when there's a tween running, if\n     * there's no animation handler running, we don't need to request an animation frame\n     *\n     * We do this by checking for a non-zero accumulator that increments when a handler\n     * is added, and decrements when a handler is removed, thus if the accumulator is > 0\n     * then there's something to animate, else there's nothing to animate, and thus nothing\n     * to render!\n     *\n     * @params time (Number) : The high resolution time, typically from performace.now() to\n     *                         update all current animation sequences within the PIXI context.\n     * @private\n     */\n    _renderTheatre(time) {\n        // let the ticker update all its objects\n        this.pixiCTX.ticker.update(time);\n        // this.pixiCTX.renderer.clear(); // PIXI.v6 does not respect transparency for clear\n        for (let insert of this.portraitDocks) {\n            if (insert.dockContainer) {\n                if (TheatreHelpers._isDebugActive()) {\n                    this._updateTheatreDebugInfo(insert);\n                }\n                // PIXI.v6 The renderer should not clear the canvas on rendering\n                this.pixiCTX.renderer.render(insert.dockContainer, { clear: false });\n            } else {\n                Logger.error(\"INSERT HAS NO CONTAINER! _renderTheatre : HOT-EJECTING it! \", true, insert);\n                this._destroyPortraitDock(insert.imgId);\n            }\n        }\n        if (this.renderAnims > 0) {\n            requestAnimationFrame(this._renderTheatre.bind(this));\n        } else {\n            Logger.debug(\"RENDERING LOOP STOPPED\");\n            this.rendering = false;\n        }\n    }\n\n    /**\n     * Add a dock tween animation, and increment our accumulator, start requesting animation frames\n     * if we aren't already requesting them\n     *\n     * @params imgId (String) : The theatreId of the tween that will be receiving it.\n     * @params tween (Object TweenMax) : The TweenMax object of the tween to be added.\n     * @params tweenId (String) : The tweenId for this tween to be added.\n     *\n     * @private\n     */\n    _addDockTween(imgId, tween, tweenId) {\n        let insert = this.getInsertById(imgId);\n        if (!insert || !insert.dockContainer) {\n            // if dockContainer is destroyed, destroy the tween we were trying to add\n            Logger.error(\"Invalid Tween for %s\", false, imgId);\n            if (tween) tween.kill();\n            return;\n        }\n\n        // if the tweenId exists, kill that one, and replace with the new\n        if (insert.tweens[tweenId]) {\n            insert.tweens[tweenId].kill();\n            this.renderAnims--;\n        }\n\n        if (this.renderAnims > 0) {\n            this.renderAnims++;\n            insert.tweens[tweenId] = tween;\n        } else {\n            // if we're somehow negative, bump to 1\n            this.renderAnims = 1;\n            insert.tweens[tweenId] = tween;\n\n            // Kick renderer if we need to\n            if (!this.rendering) {\n                Logger.debug(\"RENDERING LOOP STARTED\");\n                this.rendering = true;\n                this._renderTheatre(performance.now());\n            }\n        }\n    }\n\n    /**\n     * Remove a dock tween animation, and decrement our accumulator, if the accumulator <= 0, the render\n     * loop will kill itself after the next render. Thus no model updates need be performed\n     *\n     * @params imgId (String) : The theatreId of the tween that will have it removed.\n     * @params tween (Object TweenMax) : The TweenMax object of the tween to be removed.\n     * @params tweenId (String) : The tweenId of the tween to be removed.\n     *\n     * @private\n     */\n    _removeDockTween(imgId, tween, tweenId) {\n        if (tween) tween.kill();\n\n        let insert = this.getInsertById(imgId);\n        if (insert) {\n            // if the tweenId doesn't exist, do nothing more\n            if (!insert.tweens[tweenId]) return;\n            if (!tween) insert.tweens[tweenId].kill();\n            insert.tweens[tweenId] = null;\n            let nTweens = {};\n            for (let prop in insert.tweens) {\n                if (insert.tweens[prop] != null) nTweens[prop] = insert.tweens[prop];\n            }\n            // replace after we removed the prop\n            insert.tweens = nTweens;\n        }\n\n        this.renderAnims--;\n\n        //sanit check\n        if (this.renderAnims < 0) {\n            Logger.error(\"ERROR RENDER ANIM < 0 from %s of %s\", true, tweenId, insert ? insert.name : imgId);\n            Logger.error(\"ERROR RENDER ANIM < 0 \", true);\n        }\n    }\n\n    /**\n     * Destroy a PIXI container in our dock by removing all animations it may have\n     * as well as destroying its children before destroying itself\n     *\n     * @params imgId (String) : The theatreId of the insert whose dockContainer will be destroyed.\n     *\n     * @private\n     */\n    _destroyPortraitDock(imgId) {\n        let app = this.pixiCTX;\n        let insert = this.getInsertById(imgId);\n        if (insert && insert.dockContainer) {\n            // kill and release all tweens\n            for (let tweenId in insert.tweens) this._removeDockTween(imgId, null, tweenId);\n            insert.tweens = null;\n            // destroy children\n            for (let child of insert.portraitContainer.children) child.destroy();\n            for (let child of insert.dockContainer.children) child.destroy();\n            insert.portrait = null;\n            insert.portraitContainer = null;\n            insert.label = null;\n            // destroy self\n            insert.dockContainer.destroy();\n            insert.dockContainer = null;\n            let idx = this.portraitDocks.findIndex((e) => e.imgId == imgId);\n            this.portraitDocks.splice(idx, 1);\n            // The \"MyTab\" module inserts another element with id \"pause\". Use querySelectorAll to make sure we catch both\n            document.querySelectorAll(\"#pause\").forEach((ele) => KHelpers.removeClass(ele, \"theatre-centered\"));\n            $(\"#players\").removeClass(\"theatre-invisible\");\n            $(\"#hotbar\").removeClass(\"theatre-invisible\");\n        }\n        // force a render update\n        //app.render();\n        if (!this.rendering) this._renderTheatre(performance.now());\n    }\n\n    /**\n     * Create, and track the PIXIContainer for the provided image source within\n     * our dock canvas\n     *\n     * @params imgPath (String) : The path of the image to initialize with when\n     *                            creating the PIXIContainer.\n     * @params portName (String) : The name label for the insert in the container.\n     * @params imgId (String) : The theatreId for this container.\n     * @params optAlign (String) : The optAlign parameter denoting the insert's alignment.\n     * @params emotes (Object) : An Object containing properties pretaining to the emote state\n     *                           to initialize the container with.\n     * @params isLeft (Boolean) : Boolean to determine if this portrait should be injected\n     *                            left, or right in the dock after creation.\n     *\n     * @private\n     */\n    async _createPortraitPIXIContainer(imgPath, portName, imgId, optAlign, emotions, isLeft) {\n        // given an image, we will generate a PIXI container to add to the theatreDock and size\n        // it to the image loaded\n        let dockContainer = new PIXI.Container();\n        let portraitContainer = new PIXI.Container();\n        dockContainer.addChild(portraitContainer);\n        // initial positioning\n        portraitContainer.x = 0;\n        portraitContainer.y = 0;\n\n        let app = this.pixiCTX;\n        app.stage.addChild(dockContainer);\n\n        // track the dockContainer\n        if (!!this.getInsertById(imgId)) {\n            // this dockContainer should be destroyed\n            Logger.debug(\"PRE-EXISTING PIXI CONTAINER FOR %s \", imgId);\n            this._destroyPortraitDock(imgId);\n        }\n\n        //Logger.debug(\"Creating PortraintPIXIContainer with emotions: \",emotions);\n\n        let ename, textFlyin, textStanding, textFont, textSize, textColor;\n        if (emotions) {\n            ename = emotions.emote;\n            textFlyin = emotions.textFlyin;\n            textStanding = emotions.textStanding;\n            textFont = emotions.textFont;\n            textSize = emotions.textSize;\n            textColor = emotions.textColor;\n        }\n\n        this.portraitDocks.push({\n            imgId: imgId,\n            dockContainer: dockContainer,\n            name: portName,\n            emote: ename,\n            textFlyin: textFlyin,\n            textStanding: textStanding,\n            textFont: textFont,\n            textSize: textSize,\n            textColor: textColor,\n            portraitContainer: portraitContainer,\n            portrait: null,\n            label: null,\n            typingBubble: null,\n            exitOrientation: isLeft ? \"left\" : \"right\",\n            nameOrientation: \"left\",\n            mirrored: false,\n            optAlign: optAlign,\n            tweens: {},\n            order: 0,\n            renderOrder: 0,\n            meta: {},\n        });\n\n        let imgSrcs = [];\n\n        imgSrcs.push({\n            imgpath: \"modules/theatre/assets/graphics/typing.png\",\n            resname: \"modules/theatre/assets/graphics/typing.png\",\n        });\n        imgSrcs.push({ imgpath: imgPath, resname: imgPath });\n        Logger.debug(\"Adding %s with src %s\", portName, imgPath);\n        // get actor, load all emote images\n        let actorId = imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let params = this._getInsertParamsFromActorId(actorId);\n\n        if (!params) {\n            Logger.error(\"ERROR: Actor does not exist for %s\", false, actorId);\n            this._destroyPortraitDock(imgId);\n            return null;\n        }\n        // load all rigging assets\n        let rigResources = Theatre.getActorRiggingResources(actorId);\n\n        Logger.debug(\"RigResources for %s :\", portName, rigResources);\n\n        for (let rigResource of rigResources) imgSrcs.push({ imgpath: rigResource.path, resname: rigResource.path });\n\n        // load all emote base images + rigging for the emotes\n        for (let emName in params.emotes)\n            if (params.emotes[emName])\n                if (params.emotes[emName].insert && params.emotes[emName].insert != \"\")\n                    imgSrcs.push({ imgpath: params.emotes[emName].insert, resname: params.emotes[emName].insert });\n\n        const resources = await this._addSpritesToPixi(imgSrcs);\n        // PIXI Container is ready!\n        // Setup the dockContainer to display the base insert\n        Logger.debug(\"Sprites added to PIXI _createPortraitPIXIContainer\", resources);\n        let portWidth =\n            ename && params.emotes[ename] && params.emotes[ename].insert\n                ? resources[params.emotes[ename].insert].width\n                : resources[imgPath].width;\n        let initX = isLeft ? -1 * portWidth : this.theatreDock.offsetWidth + portWidth;\n\n        if (!ename) {\n            // load in default portrait\n            dockContainer.x = initX;\n            await this._setupPortraitContainer(imgId, optAlign, imgPath, resources, true);\n        } else {\n            // load in the ename emote portrait instead if possible, else load the default\n            if (params.emotes[ename] && params.emotes[ename].insert) {\n                dockContainer.x = isLeft ? -1 * portWidth : this.theatreDock.offsetWidth + portWidth;\n                await this._setupPortraitContainer(imgId, optAlign, params.emotes[ename].insert, resources, true);\n            } else {\n                dockContainer.x = initX;\n                await this._setupPortraitContainer(imgId, optAlign, imgPath, resources, true);\n            }\n        }\n    }\n\n    /**\n     * Sets up a portrait's PIXI dockContainer to size to\n     * the given resource\n     *\n     * @params imgId (String) : The theatreId of the insert whose portrait we're setting up.\n     * @params resName (String) : The resource name of the sprite to configure.\n     * @params reorder (Boolean) : Boolean to indicate if a reorder should be performed after\n     *                             an update.\n     *\n     * @private\n     */\n    async _setupPortraitContainer(imgId, optAlign, resName, resources, reorder) {\n        let insert = this.getInsertById(imgId);\n\n        if (!insert || !insert.dockContainer) {\n            Logger.error(\"ERROR PIXI Container was destroyed before setup could execute for %s\", true, imgId);\n            Logger.error(\n                `${game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P1\")} ${imgId} ${game.i18n.localize(\n                    \"Theatre.UI.Notification.ImageLoadFail_P2\",\n                )} ${resName}`,\n                true,\n            );\n            this.removeInsertById(imgId);\n            return;\n        }\n\n        if (!resources[resName]) {\n            Logger.error(\"ERROR could not load texture %s\", true, resName, resources);\n            Logger.error(\n                `${game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P1\")} ${imgId} ${game.i18n.localize(\n                    \"Theatre.UI.Notification.ImageLoadFail_P2\",\n                )} ${resName}`,\n                true,\n            );\n            this.removeInsertById(imgId);\n            return;\n        }\n\n        let app = this.pixiCTX;\n        let dockContainer = insert.dockContainer;\n        let portraitContainer = insert.portraitContainer;\n\n        let sprite = new PIXI.Sprite(resources[resName]);\n        let portWidth = resources[resName].width;\n        let portHeight = resources[resName].height;\n        let maxHeight = game.settings.get(CONSTANTS.MODULE_ID, \"theatreImageSize\");\n        if (portHeight > maxHeight) {\n            portWidth *= maxHeight / portHeight;\n            portHeight = maxHeight;\n        }\n\n        // adjust dockContainer + portraitContainer dimensions to fit the image\n        dockContainer.width = portWidth;\n        dockContainer.height = portHeight;\n        portraitContainer.width = portWidth;\n        portraitContainer.height = portHeight;\n\n        // set the initial dockContainer position + state\n        //dockContainer.x = 0;\n        dockContainer.y =\n            this.theatreDock.offsetHeight - (optAlign == \"top\" ? this.theatreBar.offsetHeight : 0) - portHeight;\n\n        // save and stage our sprite\n        insert.portrait = sprite;\n        insert.portrait.width = portWidth;\n        insert.portrait.height = portHeight;\n\n        portraitContainer.addChild(sprite);\n        portraitContainer.pivot.x = portWidth / 2;\n        portraitContainer.pivot.y = portHeight / 2;\n        portraitContainer.x = portraitContainer.x + portWidth / 2;\n        portraitContainer.y = portraitContainer.y + portHeight / 2;\n        // set sprite initial coordinates + state\n        sprite.x = 0;\n        sprite.y = 0;\n        // set mirror state if mirrored\n        if (insert.mirrored) {\n            portraitContainer.scale.x = -1;\n            /*\n\t\t\tif (reorder)\n\t\t\t\tportraitContainer.x = portWidth;\n\t\t\t*/\n        }\n        // setup label if not setup\n        if (!insert.label) {\n            let textStyle = new PIXI.TextStyle({\n                align: \"center\",\n                fontFamily: game.settings.get(CONSTANTS.MODULE_ID, \"nameFont\"),\n                fontSize: 44,\n                lineHeight: 64,\n                //fontStyle: 'italic',\n                fontWeight: this.fontWeight,\n                fill: [\"#ffffff\"],\n                stroke: \"#000000\",\n                strokeThickness: 2,\n                dropShadow: true,\n                dropShadowColor: \"#000000\",\n                dropShadowBlur: 1,\n                dropShadowAngle: Math.PI / 6,\n                breakWords: true,\n                wordWrap: true,\n                wordWrapWidth: portWidth,\n            });\n            let label = new PIXI.Text(insert.name, textStyle);\n            // save and stage our label\n            label.theatreComponentName = \"label\";\n            insert.label = label;\n            dockContainer.addChild(label);\n            // initital positioning\n            insert.label.x = 20;\n        }\n        // position the label\n        insert.label.y =\n            portHeight - (optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight) - insert.label.lineHeight - 20;\n\n        // setup typing bubble\n        if (!insert.typingBubble) {\n            let typingBubble = new PIXI.Sprite();\n            typingBubble.texture = resources[\"modules/theatre/assets/graphics/typing.png\"];\n            typingBubble.width = 55;\n            typingBubble.height = 55;\n            typingBubble.theatreComponentName = \"typingBubble\";\n            typingBubble.alpha = 0;\n            typingBubble.y =\n                portHeight -\n                (optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight) -\n                insert.label.style.lineHeight +\n                typingBubble.height / 2;\n\n            insert.typingBubble = typingBubble;\n            dockContainer.addChild(typingBubble);\n        }\n\n        // TheatreStyle specific adjustments\n        switch (this.settings.theatreStyle) {\n            case \"lightbox\":\n                // to allow top-aligned portraits to work without a seam\n                dockContainer.y += optAlign == \"top\" ? 8 : 0;\n                insert.label.y -= insert.optAlign == \"top\" ? 8 : 0;\n                break;\n            case \"clearbox\":\n                dockContainer.y = this.theatreDock.offsetHeight - portHeight;\n                insert.label.y += optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight;\n                insert.typingBubble.y += optAlign == \"top\" ? 0 : this.theatreBar.offsetHeight;\n                break;\n            case \"mangabubble\":\n                break;\n            case \"textbox\":\n                break;\n            default:\n                break;\n        }\n\n        Logger.debug(\"Portrait loaded with w:%s h:%s\", portWidth, portHeight, sprite);\n\n        // run rigging animations if we have have any\n        if (insert.emote) {\n            let actorId = insert.imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n            let defaultDisabled = this.isDefaultDisabled(insert.imgId);\n            Logger.debug(\"is default disabled? : %s\", defaultDisabled);\n            let emotes = Theatre.getActorEmotes(actorId, defaultDisabled);\n            let rigResMap = Theatre.getActorRiggingResources(actorId);\n            if (emotes[insert.emote] && emotes[insert.emote].rigging) {\n                for (let anim of emotes[insert.emote].rigging.animations) {\n                    await this.addTweensFromAnimationSyntax(anim.name, anim.syntax, rigResMap, insert);\n                }\n            }\n        }\n\n        if (TheatreHelpers._isDebugActive()) {\n            // DEBUG BOX dockContainer\n            let graphics = new PIXI.Graphics();\n            graphics.lineStyle(1, 0xfeeb77, 1);\n            graphics.moveTo(0, 0);\n            graphics.lineTo(portWidth, 0);\n            graphics.lineTo(portWidth, portHeight);\n            graphics.lineTo(0, portHeight);\n            graphics.lineTo(0, 0);\n            dockContainer.addChild(graphics);\n            let dimStyle = new PIXI.TextStyle({\n                fontSize: 10,\n                lineHeight: 30,\n                fontWeight: \"bold\",\n                fill: [\"#FF383A\"],\n                stroke: \"#000000\",\n                strokeThickness: 2,\n                wordWrap: true,\n                wordWrapWidth: portWidth,\n            });\n            let pathStyle = new PIXI.TextStyle({\n                fontSize: 22,\n                lineHeight: 22,\n                fontWeight: \"bold\",\n                fill: [\"#38FFEB\"],\n                stroke: \"#000000\",\n                strokeThickness: 2,\n                wordWrap: true,\n                breakWords: true,\n                wordWrapWidth: portWidth,\n            });\n            let infoStyle = new PIXI.TextStyle({\n                fontSize: 14,\n                lineHeight: 14,\n                fontWeight: \"bold\",\n                fill: [\"#ffffff\"],\n                stroke: \"#000000\",\n                strokeThickness: 2,\n                wordWrap: true,\n                breakWords: true,\n                wordWrapWidth: portWidth,\n            });\n            let dims = new PIXI.Text(`${portWidth} px x ${portHeight} px`, dimStyle);\n            let path = new PIXI.Text(resources[resName].url, pathStyle);\n            let info = new PIXI.Text(\"X\", infoStyle);\n            info.theatreComponentName = \"debugInfo\";\n            dims.x = 20;\n            path.x = 20;\n            path.y = 30;\n            info.x = 20;\n            info.y = 90;\n            dockContainer.addChild(dims);\n            dockContainer.addChild(path);\n            dockContainer.addChild(info);\n            this._updateTheatreDebugInfo(insert);\n\n            // DEBUG BOX portraitContainer\n            graphics = new PIXI.Graphics();\n            graphics.lineStyle(1, 0xffffff, 1);\n            graphics.moveTo(0, 0);\n            graphics.lineTo(portWidth, 0);\n            graphics.lineTo(portWidth, portHeight);\n            graphics.lineTo(0, portHeight);\n            graphics.lineTo(0, 0);\n            portraitContainer.addChild(graphics);\n        }\n\n        if (reorder) {\n            // fade in\n            dockContainer.alpha = 0;\n\n            window.setTimeout(() => {\n                let tb = this._getTextBoxById(imgId);\n                if (tb) tb.style.opacity = 1;\n\n                window.clearTimeout(this.reorderTOId);\n                this.reorderTOId = window.setTimeout(() => {\n                    Theatre.reorderInserts();\n                    this.reorderTOId = null;\n                }, 500);\n            }, 100);\n        } else {\n            dockContainer.alpha = 1;\n        }\n\n        //app.render();\n        if (!this.rendering) this._renderTheatre(performance.now());\n    }\n\n    /**\n     *\n     * Updates the PIXIText containing our debug information.\n     *\n     * @params insert (Objet) : An Object represeting the insert\n     *\n     * @private\n     */\n    _updateTheatreDebugInfo(insert) {\n        if (!insert || !insert.dockContainer) return;\n        let info = insert.dockContainer.children.find((e) => e.theatreComponentName == \"debugInfo\");\n        if (info) {\n            info.text =\n                `imgId: ${insert.imgId}\\n` +\n                `dockContainer (exists): ${!!insert.dockContainer}\\n` +\n                `name: ${insert.name}\\n` +\n                `emote: ${insert.emote}\\n` +\n                `textFlyin: ${insert.textFlyin}\\n` +\n                `textStanding: ${insert.textStanding}\\n` +\n                `textFont: ${insert.textFont}\\n` +\n                `textSize: ${insert.textSize}\\n` +\n                `textColor: ${insert.textColor}\\n` +\n                `portraitContainer (exists): ${!!insert.portraitContainer}\\n` +\n                `portraitContainer (XPos): ${insert.portraitContainer.x}\\n` +\n                `portraitContainer (YPos): ${insert.portraitContainer.y}\\n` +\n                `portrait (exists): ${!!insert.portrait}\\n` +\n                `label: ${insert.label.text}\\n` +\n                `typingBubble (exists): ${!!insert.typingBubble}\\n` +\n                `exitOrientation: ${insert.exitOrientation}\\n` +\n                `nameOrientation: ${insert.nameOrientation}\\n` +\n                `mirrored: ${insert.mirrored}\\n` +\n                `optAlign: ${insert.optAlign}\\n` +\n                `tweens (# active): ${Object.keys(insert.tweens).length}\\n` +\n                `decayTOId: ${insert.decayTOId}\\n` +\n                `order: ${insert.order}\\n` +\n                `renderOrder: ${insert.renderOrder}\\n`;\n            /*\n\t\t\t\t`meta (#): ${insert.meta.length}\\n`\n\t\t\t\t*/\n        }\n    }\n\n    /**\n     * Reposition insert elements based\n     * on nameOrientation label length,\n     * and textBox position\n     *\n     * @params insert (Object) : An Object representing the insert\n     *\n     * @private\n     */\n    _repositionInsertElements(insert) {\n        if (!insert || !insert.portrait) {\n            Logger.error(\"ERROR: No insert, or portrait available \", false, insert);\n            return;\n        }\n        // re-align the dockContainer to the textBox and its nameOrientation\n        let textBox = this.getTextBoxById(insert.imgId);\n        let offset = KHelpers.offset(textBox);\n        let leftPos = Math.round(\n            Number(offset.left || 0) -\n                Number(KHelpers.style(textBox)[\"left\"].match(/\\-*\\d+\\.*\\d*/) || 0) -\n                Number(KHelpers.style(this.theatreBar)[\"margin-left\"].match(/\\-*\\d+\\.*\\d*/) || 0),\n        );\n        // pre-split measurement\n        insert.label.style.wordWrap = false;\n        insert.label.style.wordWrapWidth = insert.portrait.width;\n        let labelExceeds = insert.label.width + 20 + insert.label.style.fontSize > textBox.offsetWidth;\n        let preLabelWidth = insert.label.width;\n        // split measurement\n        insert.label.style.wordWrap = true;\n        insert.label.style.wordWrapWidth = textBox.offsetWidth;\n        // Scale the name bar length and orient the portait\n        if (insert.nameOrientation == \"left\") {\n            insert.label.x = 20;\n            insert.typingBubble.anchor.set(0.5);\n            insert.typingBubble.x = Math.min(\n                preLabelWidth + 20 + insert.typingBubble.width / 2,\n                textBox.offsetWidth - insert.typingBubble.width / 2,\n            );\n        } else {\n            if (labelExceeds) {\n                insert.label.x = insert.portrait.width - insert.label.width - 20;\n                if (insert.label.width - 20 > insert.portrait.width)\n                    insert.typingBubble.x = Math.min(\n                        insert.portrait.width - insert.label.width - insert.typingBubble.texture.width / 2 - 20,\n                        insert.typingBubble.width / 2,\n                    );\n                else\n                    insert.typingBubble.x = Math.max(\n                        insert.portrait.width - insert.label.width - insert.typingBubble.texture.width / 2 - 20,\n                        insert.typingBubble.width / 2,\n                    );\n            } else {\n                insert.label.x = insert.portrait.width - preLabelWidth - 20;\n                if (preLabelWidth - 20 > insert.portrait.width)\n                    insert.typingBubble.x = Math.min(\n                        insert.portrait.width - preLabelWidth - insert.typingBubble.texture.width / 2 - 20,\n                        insert.typingBubble.width / 2,\n                    );\n                else\n                    insert.typingBubble.x = Math.max(\n                        insert.portrait.width - preLabelWidth - insert.typingBubble.texture.width / 2 - 20,\n                        insert.typingBubble.width / 2,\n                    );\n            }\n\n            insert.typingBubble.anchor.set(0.5);\n\n            leftPos += textBox.offsetWidth - insert.portrait.width;\n        }\n        insert.typingBubble.y =\n            insert.portrait.height -\n            (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n            insert.label.style.lineHeight +\n            insert.typingBubble.height / 2;\n        // if the label height > font-size, it word wrapped wrap, so we need to bump up the height\n        if (labelExceeds) {\n            let divisor = Math.round(insert.label.height / insert.label.style.lineHeight);\n            insert.label.y =\n                insert.portrait.height -\n                (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n                insert.label.style.lineHeight * divisor;\n        } else {\n            // normal\n            insert.label.y =\n                insert.portrait.height -\n                (insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight) -\n                insert.label.style.lineHeight;\n        }\n        insert.typingBubble.rotation = 0.1745;\n        insert.dockContainer.x = leftPos;\n        insert.dockContainer.y =\n            this.theatreDock.offsetHeight -\n            (insert.optAlign == \"top\" ? this.theatreBar.offsetHeight : 0) -\n            insert.portrait.height;\n\n        // theatreStyle specific adjustments\n        switch (this.settings.theatreStyle) {\n            case \"lightbox\":\n                // to allow top-aligned portraits to work without a seam\n                insert.dockContainer.y += insert.optAlign == \"top\" ? 8 : 0;\n                insert.label.y -= insert.optAlign == \"top\" ? 8 : 0;\n                break;\n            case \"clearbox\":\n                insert.dockContainer.y = this.theatreDock.offsetHeight - insert.portrait.height;\n                insert.label.y += insert.optAlign == \"top\" ? 0 : Theatre.instance.theatreBar.offsetHeight;\n                insert.typingBubble.y += insert.optAlign == \"top\" ? 0 : Theatre.instance.offsetHeight;\n                break;\n            case \"mangabubble\":\n                break;\n            case \"textbox\":\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Add Resource\n     *\n     * We want to add an asset to the the PIXI Loader\n     *\n     * @params imgSrc (String) : The url of the image that will replace the resource\n     * @params resName (String) : The resource name to replace\n     * @params imgId (String) : The theatreId of the insert whose resource is being replaced\n     * @params cb (Function) : The callback to invoke once we're done replacing the resource\n     * @params remote (Boolean) : Boolean indicating if thist call is being done remotely or locally.\n     *\n     * @private\n     */\n    async _AddTextureResource(imgSrc, resName, imgId, emote, remote) {\n        // First we pull the insert,canvas,and pixi app from the imgId.\n        // Second, we want to verify that the source image exists, if so,\n        // then we'll proceed.\n        // X Third, we will kill all inserts that are currently having one of their resources (we can keep the canvas up)\n        // replaced as a safety measure.\n        // Fourth, we will delete the resource via .delete() from the loader\n        // Fifth, we will load in the resource, and then broadcast to all other clients to\n        // also replace their resources.\n        // ** NOTE this may have desync issues **\n\n        let insert = this.getInsertById(imgId);\n        let container = insert ? insert.dockContainer : null;\n        // If no insert/container, this is fine\n        let app = this.pixiCTX;\n        let actorId = imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actorParams = this._getInsertParamsFromActorId(actorId);\n        // no actor is also fine if this is some kind of rigging resource\n\n        // src check, not fine at all!\n        if (!(await srcExists(imgSrc))) {\n            Logger.error(\"ERROR (_AddTextureResource) : Replacement texture does not exist %s \", false, imgSrc);\n            return;\n        }\n\n        // if we have no resName then just return empty map\n        if (!resName || resName == \"\") {\n            return {};\n        }\n\n        let imgSrcs = [{ resname: resName, imgpath: imgSrc }];\n        Logger.debug(\"replace textures\", imgSrcs);\n\n        // Send to socket\n        if (!remote) {\n            // broadcast change to clients\n            this._sendSceneEvent(\"addtexture\", {\n                insertid: imgId,\n                imgsrc: imgSrc,\n                resname: resName,\n                emote: emote,\n            });\n        }\n        return await this._addSpritesToPixi(imgSrcs);\n    }\n\n    /**\n     * Add All Texture Resources\n     *\n     * Add an array of assets to the PIXI Loader\n     *\n     * @param imgSrcs (Array) : An array of Objects consiting of {imgsrc: <value>, resname: <value>}\n     *                          of the resources to replace.\n     * @param imgId (String) : The TheatreId of the insert whose textures will be replaced.\n     * @param emote (String) : The currently active emote, if any.\n     * @param cb (Function) : The function callback to invoke when the resources are loaded.\n     * @param remote (Boolean) : Wither or not this function is being invoked remotely, if not, then\n     *                           we want to broadcast to all other clients to perform the action as well.\n     *\n     * @private\n     */\n    async _AddAllTextureResources(imgSrcs, imgId, emote, eresName, remote) {\n        // First we pull the insert,canvas,and pixi app from the imgId.\n        // Second, we want to verify that the source image exists, if so,\n        // then we'll proceed.\n        // X Third, we will kill all inserts that are currently having one of their resources (we can keep the canvas up)\n        // replaced as a safety measure.\n        // Fourth, we will delete the resource via .delete() from the loader\n        // Fifth, we will load in the resource, and then broadcast to all other clients to\n        // also replace their resources.\n        // ** NOTE this may have desync issues **\n\n        let insert = this.getInsertById(imgId);\n        let container = insert ? insert.dockContainer : null;\n        // If no insert/container, this is fine\n        let app = this.pixiCTX;\n        let actorId = imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actorParams = this._getInsertParamsFromActorId(actorId);\n        // no actor is also fine if this is some kind of rigging resource\n\n        // src check, not fine at all!\n        for (let src of imgSrcs)\n            if (!(await srcExists(src.imgpath))) {\n                Logger.error(\"ERROR (_AddAllTextureResources) : Replacement texture does not exist %s \", false, src);\n                return;\n            }\n\n        // if we have an emtpy imgSrc array, just return empty map\n        if (imgSrcs.length <= 0) {\n            return {};\n        }\n\n        Logger.debug(\"replace textures\", imgSrcs);\n\n        // Send to socket\n        if (!remote) {\n            // broadcast change to clients\n            this._sendSceneEvent(\"addalltextures\", {\n                insertid: imgId,\n                imgsrcs: imgSrcs,\n                emote: emote,\n                eresname: eresName,\n            });\n        }\n        return await this._addSpritesToPixi(imgSrcs);\n    }\n\n    /**\n     * Clear the container by ending all animations, and removing all sprites\n     *\n     * @param imgId : The theatreId of the insert whose dockContainer we should\n     *                clear.\n     *\n     * @private\n     */\n    _clearPortraitContainer(imgId) {\n        let insert = this.getInsertById(imgId);\n        if (!insert || !insert.dockContainer || !insert.portrait) return;\n\n        // preserve position without portrait offset\n        let ox = insert.portraitContainer.x - insert.portrait.width / 2;\n        let oy = insert.portraitContainer.y - insert.portrait.height / 2;\n        let ocx = insert.dockContainer.x;\n        let ocy = insert.dockContainer.y;\n        let oLabelAnim = insert.tweens[\"nameSpeakingPulse\"];\n        let oTypingBounceAnim = insert.tweens[\"typingBounce\"];\n        let oTypingWiggleAnim = insert.tweens[\"typingWiggle\"];\n        let oTypingAppearAnim = insert.tweens[\"typingAppear\"];\n        let oTypingVanishAnim = insert.tweens[\"typingVanish\"];\n        // kill and release all tweens, except for label or typingBubble\n        // animation\n        for (let tweenId in insert.tweens) {\n            if (\n                tweenId == \"nameSpeakingPulse\" ||\n                tweenId == \"typingBounce\" ||\n                tweenId == \"typingAppear\" ||\n                tweenId == \"typingVanish\" ||\n                tweenId == \"typingWiggle\"\n            )\n                continue;\n            this._removeDockTween(imgId, null, tweenId);\n        }\n        insert.tweens = {};\n        if (oLabelAnim) insert.tweens[\"nameSpeakingPulse\"] = oLabelAnim;\n        if (oTypingBounceAnim) insert.tweens[\"typingBounce\"] = oTypingBounceAnim;\n        if (oTypingWiggleAnim) insert.tweens[\"typingWiggle\"] = oTypingWiggleAnim;\n        if (oTypingAppearAnim) insert.tweens[\"typingAppear\"] = oTypingAppearAnim;\n        if (oTypingVanishAnim) insert.tweens[\"typingVanish\"] = oTypingVanishAnim;\n\n        // destroy children\n        for (let child of insert.portraitContainer.children) child.destroy();\n        // attempt to preserve label + typingBubble\n        for (let idx = insert.dockContainer.children.length - 1; idx >= 0; --idx) {\n            let child = insert.dockContainer.children[idx];\n            if (child.theatreComponentName && child.theatreComponentName == \"label\")\n                insert.dockContainer.removeChildAt(idx);\n            else if (child.theatreComponentName && child.theatreComponentName == \"typingBubble\")\n                insert.dockContainer.removeChildAt(idx);\n            else child.destroy();\n        }\n        insert.portrait = null;\n        insert.portraitContainer = null;\n        // destroy self\n        insert.dockContainer.destroy();\n        insert.dockContainer = null;\n        // re-generate the container\n        let dockContainer = new PIXI.Container();\n        let portraitContainer = new PIXI.Container();\n        dockContainer.addChild(portraitContainer);\n        // initial positioning\n        portraitContainer.x = ox;\n        portraitContainer.y = oy;\n        dockContainer.x = ocx;\n        dockContainer.y = ocy;\n        // assignment\n        insert.dockContainer = dockContainer;\n        insert.portraitContainer = portraitContainer;\n        Logger.debug(\"saving ox: %s, oy: %s\", ox, oy);\n        // label is NOT re-attached, must be done by the clearer\n        // typingBubble is NOT re-attached, must be done by the clearer\n        // mirror-state is NOT restored, must be done by the clearer\n    }\n\n    /**\n     * Add sprites to the PIXI Loader\n     *\n     * @params imcSrcs (Array[Object]) : An array of {imgsrc: (String), resname (String)} pairs\n     *                                   representing the assets to be loaded into PIXI's loader.\n     * @params cb (Function) : The function to invoke once the assets are loaded.\n     *\n     * @private\n     */\n    async _addSpritesToPixi(imgSrcs) {\n        Logger.debug(\"adding sprite to dockContainer\");\n\n        const resources = {};\n        await Promise.all(\n            imgSrcs.map(async ({ resname, imgpath }) => {\n                resources[resname] = resources[imgpath] = await PIXI.Assets.load(imgpath);\n            }),\n        );\n        Logger.debug(\"resources\", resources);\n        return resources;\n    }\n\n    /**\n     * Given an array of theatreIds, stage them all\n     *\n     * @params ids (Array[(String)] : An array of theatreIds of inserts to load.\n     * @params cb (Function) : The function to invoke once the assets are loaded.\n     */\n    async stageAllInserts(ids) {\n        let actorId, params;\n        let imgSrcs = [];\n        for (let id of ids) {\n            actorId = id.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n            params = this._getInsertParamsFromActorId(actorId);\n            if (!params) continue;\n\n            // base insert\n            imgSrcs.push({ imgpath: params.src, resname: params.src });\n\n            // load all rigging assets\n            let rigResources = Theatre.getActorRiggingResources(actorId);\n\n            Logger.debug(\"RigResources for %s :\", params.name, rigResources);\n\n            for (let rigResource of rigResources)\n                imgSrcs.push({ imgpath: rigResource.path, resname: rigResource.path });\n\n            // load all emote base images + rigging for the emotes\n            for (let emName in params.emotes)\n                if (params.emotes[emName])\n                    if (params.emotes[emName].insert && params.emotes[emName].insert != \"\")\n                        imgSrcs.push({ imgpath: params.emotes[emName].insert, resname: params.emotes[emName].insert });\n        }\n\n        // load in the sprites\n        await this._addSpritesToPixi(imgSrcs);\n    }\n\n    /**\n     * \"Stages\" an insert by pre-loading the base + all emote images\n     *\n     * @params theatreId (String) : The theatreId of the insert to load.\n     * @params remote (Boolean) : Whether this is being invoked remotely or locally.\n     */\n    async stageInsertById(theatreId, remote) {\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let params = this._getInsertParamsFromActorId(actorId);\n        if (!params) {\n            return;\n        }\n        //Logger.debug(\"params: \",params);\n        // kick asset loader to cache the portrait + emotes\n        let imgSrcs = [];\n\n        //imgSrcs.push({imgpath: params.src, resname: `portrait-${theatreId}`});\n        // get actor, load all emote images\n        if (!params) {\n            Logger.error(\"ERROR: Actor does not exist for %s\", false, actorId);\n            return null;\n        }\n\n        imgSrcs.push({ imgpath: params.src, resname: params.src });\n\n        // load all rigging assets\n        let rigResources = Theatre.getActorRiggingResources(actorId);\n\n        Logger.debug(\"RigResources for %s :\", params.name, rigResources);\n\n        for (let rigResource of rigResources) imgSrcs.push({ imgpath: rigResource.path, resname: rigResource.path });\n\n        // load all emote base images + rigging for the emotes\n        for (let emName in params.emotes)\n            if (params.emotes[emName])\n                if (params.emotes[emName].insert && params.emotes[emName].insert != \"\")\n                    imgSrcs.push({ imgpath: params.emotes[emName].insert, resname: params.emotes[emName].insert });\n\n        // load in the sprites\n        await this._addSpritesToPixi(imgSrcs);\n        Logger.debug(\"staging complete for %s\", theatreId);\n\n        // Send socket event\n        if (!remote) Theatre.instance._sendSceneEvent(\"stage\", { insertid: theatreId });\n    }\n\n    /**\n     * Set the emote given the id\n     *\n     * @params ename (String) : The emote name.\n     * @params id (String) : The theatreId of the insert.\n     * @params remote (Boolean) : Wither this is being invoked remotely or locally.\n     */\n    setEmoteForInsertById(ename, id, remote) {\n        let insert = this.getInsertById(id);\n\n        this._setEmoteForInsert(ename, insert, remote);\n    }\n    /**\n     * Set the emote given the name\n     *\n     * @params ename (String) : The emote name.\n     * @params name (String) : The label name of the insert.\n     * @params remote (Boolean) : Wither this is being invoked remotely or locally.\n     */\n    setEmoteForInsertByName(ename, name, remote) {\n        let insert = this.getInsertByName(name);\n\n        this._setEmoteForInsert(ename, insert, remote);\n    }\n    /**\n     * Set the emote given the insert\n     * the moment the insert is in the RP bar\n     *\n     * @params ename (String) : The emote name.\n     * @params insert (Object) : An Object representing the insert.\n     * @params remote (Boolean) : Wither this is being invoked remotely or locally.\n     *\n     * @private\n     */\n    async _setEmoteForInsert(ename, insert, remote) {\n        // given the emote name, get the image if possible,\n        // and add it to the insert canvas.\n        //\n        // If the insert already is that emote, do nothing,\n        // If the insert emote does not exist, set the base insert\n        // if the insert emote does not exist and the insert is\n        // already either the base insert, or an emote without an\n        // insert, do nothing\n        if (!insert) {\n            return;\n        }\n        let aEmote = insert.emote;\n        let actorId = insert.imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actor = game.actors.get(actorId);\n        if (!actor) {\n            return;\n        }\n        let baseInsert = actor.img ? actor.img : CONSTANTS.DEFAULT_PORTRAIT;\n        if (actor.flags.theatre) {\n            baseInsert = actor.flags.theatre.baseinsert ? actor.flags.theatre.baseinsert : baseInsert;\n        }\n        let emotes = Theatre.getActorEmotes(actorId);\n\n        // emote already active\n        //if ((this.speakingAs != insert.imgId && !this.isDelayEmote) || this.delayedSentState > 2)\n        if (remote || !this.isDelayEmote)\n            if (aEmote == ename || (ename == null && aEmote == null)) {\n                return;\n            }\n        // if emote insert exists\n        let app = this.pixiCTX;\n        if (!!ename && emotes[ename] && emotes[ename].insert && emotes[ename].insert != \"\") {\n            // clear the pixi container\n            this._clearPortraitContainer(insert.imgId);\n            // set this sprite to span the PIXI Container via _setupPortraitCanvas\n            let imgSrcs = [];\n            // emote base image\n            let emoteResName = emotes[ename].insert;\n            imgSrcs.push({ imgpath: emotes[ename].insert, resname: emoteResName });\n            // add sprites\n            const resources = await this._addSpritesToPixi(imgSrcs);\n            Logger.debug(\"emote insert loaded\", resources);\n            // Error loading the sprite\n            if (!resources[emoteResName] || resources[emoteResName].error) {\n                Logger.error(\n                    \"ERROR loading resource %s : %s : %s\",\n                    true,\n                    insert.imgId,\n                    emoteResName,\n                    emotes[ename].insert,\n                );\n                Logger.error(\n                    game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P1\") +\n                        +emoteResName +\n                        game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P2\") +\n                        emotes[ename].insert +\n                        \"'\",\n                    true,\n                );\n                this.removeInsertById(insert.imgId);\n            }\n\n            // flag our insert with our emote state\n            insert.emote = ename;\n            // now fix up the PIXI Container and make it pretty\n            await this._setupPortraitContainer(insert.imgId, insert.optAlign, emoteResName, resources);\n            // re-attach label + typingBubble\n            insert.dockContainer.addChild(insert.label);\n            insert.dockContainer.addChild(insert.typingBubble);\n\n            this._repositionInsertElements(insert);\n\n            if (!this.rendering) this._renderTheatre(performance.now());\n        } else {\n            this._clearPortraitContainer(insert.imgId);\n\n            // flag our insert with our emote state, unless we're \"actually\" no emote rather\n            // than just emoting with no insert available\n            if (ename) insert.emote = ename;\n            else insert.emote = null;\n\n            let imgSrcs = [];\n            // clear the PIXI Container\n            imgSrcs.push({ imgpath: baseInsert, resname: baseInsert });\n            const resources = await this._addSpritesToPixi(imgSrcs);\n\n            Logger.debug(\"base insert loaded\", resources);\n            // Error loading the sprite\n            if (!resources[baseInsert] || resources[baseInsert].error) {\n                Logger.error(\"ERROR loading resource %s : %s : %s\", true, insert.imgId, baseInsert, baseInsert);\n                Logger.error(\n                    game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P1\") +\n                        +baseInsert +\n                        game.i18n.localize(\"Theatre.UI.Notification.ImageLoadFail_P2\") +\n                        baseInsert +\n                        \"'\",\n                    true,\n                );\n                this.removeInsertById(insert.imgId);\n            }\n\n            // now fix up the PIXI Container and make it pretty\n            await this._setupPortraitContainer(insert.imgId, insert.optAlign, baseInsert, resources);\n\n            // re-attach label + typingBubble\n            insert.dockContainer.addChild(insert.label);\n            insert.dockContainer.addChild(insert.typingBubble);\n\n            this._repositionInsertElements(insert);\n\n            if (!this.rendering) this._renderTheatre(performance.now());\n        }\n    }\n\n    /**\n     * Scour the theatreBar for all text boxes\n     *\n     * @return (Array[HTMLElement]) : An array of HTMLElements which are the textboxes\n     *\n     * @private\n     */\n    _getTextBoxes() {\n        let textBoxes = [];\n        for (let container of this.theatreBar.children) for (let textBox of container.children) textBoxes.push(textBox);\n        return textBoxes;\n    }\n\n    /**\n     * Get the text box given the theatreId\n     *\n     * @params id (String) : The theatreId of the insert/textbox\n     *\n     * @return (HTMLELement) : The HTMLElement which is the textbox, or undefined if it\n     *                          does not exist.\n     *\n     * @private\n     */\n    _getTextBoxById(id) {\n        return this._getTextBoxes().find((e) => {\n            return e.getAttribute(\"imgId\") == id;\n        });\n    }\n\n    /**\n     * Get the text box given the label name\n     *\n     * @params id (String) : The label name of the insert/textbox\n     *\n     * @return (HTMLELement) : The HTMLElement which is the textbox, or undefined if it\n     *                          does not exist.\n     *\n     * @private\n     */\n    _getTextBoxByName(name) {\n        return this._getTextBoxes().find((e) => {\n            return e.getAttribute(\"name\") == name;\n        });\n    }\n\n    /**\n     * Add a textBox to the theatreBar\n     *\n     * @params textBox (HTMLElement) : The textBox to add to the theatreBar,\n     *                                 MUST correspond to an insert.\n     * @params isLeft (Boolean) : Wither this textBox should be injected Left or Right.\n     *\n     * @private\n     */\n    _addTextBoxToTheatreBar(textBox, isLeft) {\n        let textBoxes = this._getTextBoxes();\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n\n        if (textBoxes.length == 0) {\n            // no dock\n            // 1. slide in prime container, add textBox to it\n            primeBar.appendChild(textBox);\n            primeBar.style.left = \"0%\";\n            primeBar.style.opacity = \"1\";\n            primeBar.style[\"pointer-events\"] = \"all\";\n            this.theatreBar.style.opacity = \"1\";\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else if (textBoxes.length == 1) {\n            // single dock\n            // 1. slide in second container, and add new textBox to it\n            let insert = this.getInsertById(textBox.getAttribute(\"imgId\"));\n            if (insert) {\n                //insert.meta.fromPrime = true;\n                insert.nameOrientation = \"right\";\n            }\n\n            let dualWidth = Math.min(Math.floor(this.theatreBar.offsetWidth / 2), 650);\n            secondBar.style.left = `calc(100% - ${dualWidth}px)`;\n            secondBar.style.opacity = \"1\";\n            secondBar.style[\"pointer-events\"] = \"all\";\n            secondBar.style.width = `${dualWidth}px`;\n            primeBar.style.width = `${dualWidth}px`;\n\n            secondBar.appendChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else if (textBoxes.length == 2) {\n            // dual docks\n            // 1. confirm if we're in dual dock mode\n            // 2. if in dual dock mode, slide away the right dock\n            // container, and remove any inserts that are not in\n            // the 'prime' dock, and add them to the prime dock (should be one)\n            // 3. expand the prime dock to fit the max bar width\n            for (let sbb of secondBar.children) {\n                let insert = this.getInsertById(sbb.getAttribute(\"imgId\"));\n                if (insert) {\n                    //insert.meta.fromSecond = true;\n                    insert.nameOrientation = \"left\";\n                }\n                primeBar.appendChild(sbb);\n            }\n            secondBar.style.left = \"200%\";\n            secondBar.style.opacity = \"0\";\n            secondBar.style[\"pointer-events\"] = \"none\";\n            primeBar.style.width = \"100%\";\n\n            if (isLeft) KHelpers.insertBefore(textBox, primeBar.children[0]);\n            else primeBar.appendChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else if (textBoxes.length > 2) {\n            // bar dock\n            // 1. Just find the prime container, and add the new textBox to it\n            if (isLeft) KHelpers.insertBefore(textBox, primeBar.children[0]);\n            else primeBar.appendChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        }\n    }\n\n    /**\n     * Remove a textBox from the theatreBar\n     *\n     * @param textBox (HTMLElement : div) : the textBox to add to the theatreBar,\n     *                                      MUST correspond to an insert.\n     *\n     * @private\n     */\n    _removeTextBoxFromTheatreBar(textBox) {\n        let textBoxes = this._getTextBoxes();\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n\n        if (textBoxes.length == 0) {\n            // no dock\n            // Should be impossible\n            Logger.debug(\"REMOVE TEXTBOX ERROR, NO TEXTBOXES\", textBox, this.theatreBar);\n        } else if (textBoxes.length == 1) {\n            // single dock\n            // 1. Remove the text Box, and close the primary bar\n            primeBar.style.left = \"-100%\";\n            primeBar.style.opacity = \"0\";\n            primeBar.style[\"pointer-events\"] = \"none\";\n            textBox.parentNode.removeChild(textBox);\n            this.theatreBar.style.opacity = \"0\";\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else if (textBoxes.length == 2) {\n            // dual docks\n            // 1. confirm if we're in dual dock mode\n            // 2. if in dual dock mode, slide away the right dock\n            // container, and remove any inserts that are not in\n            // the 'prime' dock. If the element removed is the one we're removing,\n            // then don't add it to the prime dock. If it isn't the one we're removing\n            // then add the textBoxes in the 'secondary' dock to the primary.\n            for (let sbb of secondBar.children) {\n                if (sbb.getAttribute(\"imgId\") != textBox.getAttribute(\"imgId\")) {\n                    let insert = this.getInsertById(sbb.getAttribute(\"imgId\"));\n                    if (insert) {\n                        //insert.meta.fromSecond = true;\n                        insert.nameOrientation = \"left\";\n                    }\n                    primeBar.appendChild(sbb);\n                }\n            }\n            secondBar.style.left = \"200%\";\n            secondBar.style.opacity = \"0\";\n            secondBar.style[\"pointer-events\"] = \"none\";\n            primeBar.style.width = \"750px\";\n            textBox.parentNode.removeChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else if (textBoxes.length == 3) {\n            // bar dock\n            // 1. create the dual docks\n            for (let idx = primeBar.children.length - 1; idx >= 0; --idx) {\n                if (primeBar.children[idx].getAttribute(\"imgId\") != textBox.getAttribute(\"imgId\")) {\n                    let insert = this.getInsertById(primeBar.children[idx].getAttribute(\"imgId\"));\n                    if (insert) {\n                        //insert.meta.fromPrime = true;\n                        insert.nameOrientation = \"right\";\n                    }\n                    secondBar.appendChild(primeBar.children[idx]);\n                    break;\n                }\n            }\n            let dualWidth = Math.min(Math.floor(this.theatreBar.offsetWidth / 2), 650);\n            secondBar.style.left = `calc(100% - ${dualWidth}px)`;\n            secondBar.style.opacity = \"1\";\n            secondBar.style[\"pointer-events\"] = \"all\";\n            secondBar.style.width = `${dualWidth}px`;\n            primeBar.style.width = `${dualWidth}px`;\n\n            textBox.parentNode.removeChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        } else {\n            // normal bar removal\n            textBox.parentNode.removeChild(textBox);\n            Hooks.call(\"theatreDockActive\", this.dockActive);\n        }\n    }\n\n    /**\n     * Given an image, path, attempt to inject it on the left\n     *\n     * @params imgPath (String) : The path to the image that will be used for the initial portrait.\n     * @params portName (String) : The name that will be applied to the portrait's label.\n     * @params ImgId (String) : The theatreId that will be assigned to this insert (must be \"theatre-<ID>\")\n     * @params optAlign (String) : The alignment mode to use. Currently only \"top\" and \"bottom\" are accepted.\n     * @params emotions (Object) : An Object containing the emote states to launch with.\n     * @params remote (Boolean) : Boolean indicating if this is being invoked remotely, or locally.\n     */\n    async injectLeftPortrait(imgPath, portName, imgId, optAlign, emotions, remote) {\n        if (!!this.getInsertById(imgId)) {\n            Logger.warn('ID \"%s\" already exists! Refusing to inject %s', false, imgId, portName);\n            return;\n        }\n        if (this.portraitDocks.length == 1) {\n            // inject Right instread\n            await this.injectRightPortrait(imgPath, portName, imgId, optAlign, emotions, remote);\n            return;\n        }\n\n        // activate in navbar if not already\n        let navItem = this.getNavItemById(imgId);\n        if (navItem) KHelpers.addClass(navItem, \"theatre-control-nav-bar-item-active\");\n\n        let dock = this._createPortraitPIXIContainer(imgPath, portName, imgId, optAlign, emotions, true);\n        let textBox = document.createElement(\"div\");\n        // textBox class + style depends on our display mode\n        switch (this.settings.theatreStyle) {\n            case \"lightbox\":\n                KHelpers.addClass(textBox, \"theatre-text-box-light\");\n                break;\n            case \"clearbox\":\n                KHelpers.addClass(textBox, \"theatre-text-box-clear\");\n                break;\n            case \"mangabubble\":\n                break;\n            case \"textbox\":\n            default:\n                KHelpers.addClass(textBox, \"theatre-text-box\");\n                break;\n        }\n        KHelpers.addClass(textBox, \"no-scrollbar\");\n\n        portName = portName.toLowerCase();\n        textBox.setAttribute(\"name\", portName);\n        textBox.setAttribute(\"imgid\", imgId);\n        textBox.style.opacity = \"0\";\n        this._applyFontFamily(textBox, this.textFont);\n\n        textBox.addEventListener(\"mousedown\", this.handleTextBoxMouseDown);\n        textBox.addEventListener(\"mouseup\", this.handleTextBoxMouseUp);\n        textBox.addEventListener(\"dblclick\", this.handleTextBoxMouseDoubleClick);\n\n        // NOTE: we leave insert container positioning up to reorderInserts\n        // which will fire when the loader processes it for injection\n        this._addTextBoxToTheatreBar(textBox, true);\n\n        // Push to socket our event\n        if (!remote) this._sendSceneEvent(\"enterscene\", { insertid: imgId, emotions: emotions, isleft: true });\n    }\n\n    /**\n     * Given an image, path, attempt to inject it on the right\n     *\n     * @params imgPath (String) : The path to the image that will be used for the initial portrait.\n     * @params portName (String) : The name that will be applied to the portrait's label.\n     * @params ImgId (String) : The theatreId that will be assigned to this insert (must be \"theatre-<ID>\")\n     * @params optAlign (String) : The alignment mode to use. Currently only \"top\" and \"bottom\" are accepted.\n     * @params emotions (Object) : An Object containing the emote states to launch with.\n     * @params remote (Boolean) : Boolean indicating if this is being invoked remotely, or locally.\n     */\n    async injectRightPortrait(imgPath, portName, imgId, optAlign, emotions, remote) {\n        if (!!this.getInsertById(imgId)) {\n            Logger.warn('ID \"%s\" already exists! Refusing to inject %s', false, imgId, portName);\n            return;\n        }\n        if (this.portraitDocks.length == 0) {\n            // inject Left instread\n            await this.injectLeftPortrait(imgPath, portName, imgId, optAlign, emotions, remote);\n            return;\n        }\n\n        // activate in navbar if not already\n        let navItem = this.getNavItemById(imgId);\n        if (navItem) KHelpers.addClass(navItem, \"theatre-control-nav-bar-item-active\");\n\n        let dock = this._createPortraitPIXIContainer(imgPath, portName, imgId, optAlign, emotions, false);\n        let textBox = document.createElement(\"div\");\n        // textBox class + style depends on our display mode\n        switch (this.settings.theatreStyle) {\n            case \"lightbox\":\n                KHelpers.addClass(textBox, \"theatre-text-box-light\");\n                break;\n            case \"clearbox\":\n                KHelpers.addClass(textBox, \"theatre-text-box-clear\");\n                break;\n            case \"mangabubble\":\n                break;\n            case \"textbox\":\n            default:\n                KHelpers.addClass(textBox, \"theatre-text-box\");\n                break;\n        }\n        KHelpers.addClass(textBox, \"no-scrollbar\");\n\n        portName = portName.toLowerCase();\n        textBox.setAttribute(\"name\", portName);\n        textBox.setAttribute(\"imgid\", imgId);\n        textBox.style.opacity = \"0\";\n        this._applyFontFamily(textBox, this.textFont);\n\n        textBox.addEventListener(\"mousedown\", this.handleTextBoxMouseDown);\n        textBox.addEventListener(\"mouseup\", this.handleTextBoxMouseUp);\n        textBox.addEventListener(\"dblclick\", this.handleTextBoxMouseDoubleClick);\n\n        this._addTextBoxToTheatreBar(textBox);\n\n        // Push to socket our event\n        if (!remote) this._sendSceneEvent(\"enterscene\", { insertid: imgId, emotions: emotions, isleft: false });\n    }\n\n    /**\n     * Removes insert by ID\n     *\n     * @params id (String) : The theatreId of the insert to remove.\n     * @params remote (Boolean) : Boolean indicating if this is being invoked remotely, or locally.\n     *\n     * @return (Object) : An object containing the items that were removed {insert : (Object), textBox: (HTMLElement)}\n     *                     or null if there was nothing to remove.\n     */\n    removeInsertById(id, remote) {\n        name = name.toLowerCase();\n        let toRemoveInsert, toRemoveTextBox;\n        for (let insert of this.portraitDocks) {\n            if (insert.imgId == id && !insert.deleting) {\n                insert.deleting = true;\n                toRemoveInsert = insert;\n                break;\n            }\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id && !!!textBox.getAttribute(\"deleting\")) {\n                textBox.setAttribute(\"deleting\", true);\n                toRemoveTextBox = textBox;\n                break;\n            }\n        }\n        if (!!!toRemoveInsert || !!!toRemoveTextBox) return null;\n\n        return this._removeInsert(toRemoveInsert, toRemoveTextBox, remote);\n    }\n\n    /**\n     * Removes insert by name, in the event that there\n     * are inserts with the same name, the first one is found\n     * and removed.\n     *\n     * @params name (String) : The label name of the insert to remove.\n     * @params remote (Boolean) : Boolean indicating if this is being invoked remotely, or locally.\n     *\n     * @return (Object) : An object containing the items that were removed {insert : (Object), textBox: (HTMLElement)}\n     *                     or null if there was nothing to remove.\n     */\n    removeInsertByName(name, remote) {\n        name = name.toLowerCase();\n        let id = null,\n            toRemoveInsert,\n            toRemoveTextBox;\n        for (let insert of this.portraitDocks) {\n            if (insert.name == name && !insert.deleting) {\n                id = insert.imgId;\n                //insert.parentNode.removeChild(insert);\n                insert.deleting = true;\n                toRemoveInsert = insert;\n                break;\n            }\n        }\n        if (!id) return;\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id && !!!textBox.getAttribute(\"deleting\")) {\n                //textBox.parentNode.removeChild(textBox);\n                textBox.setAttribute(\"deleting\", true);\n                toRemoveTextBox = textBox;\n                break;\n            }\n        }\n        if (!!!toRemoveInsert || !!!toRemoveTextBox) return null;\n\n        return this._removeInsert(toRemoveInsert, toRemoveTextBox, remote);\n    }\n\n    /**\n     * Remove Inserts given the insert dock + corresponding TextBox\n     *\n     * @params toRemoveInsert (Object) : An Object representing the insert to be removed.\n     * @params toRemoveTextBox (HTMLElement) : The textbox of the insert to be removed.\n     * @params remote (Boolean) : Boolean indicating if this is being invoked remotely, or locally.\n     *\n     * @return (Object) : An object containing the items that were removed {insert : (Object), textBox: (HTMLElement)}\n     *                     or null if there was nothing to remove.\n     *\n     * @private\n     */\n    _removeInsert(toRemoveInsert, toRemoveTextBox, remote) {\n        let isOwner = this.isActorOwner(game.user.id, toRemoveInsert.imgId);\n        // permission check\n        if (!remote && !isOwner) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return null;\n        }\n\n        if (toRemoveInsert.decayTOId) {\n            window.clearTimeout(toRemoveInsert.decayTOId);\n            toRemoveInsert.decayTOId = null;\n        }\n\n        // Save configuration if this is not a remote operation, and we're the owners of this\n        // insert\n        if (!remote && isOwner) {\n            let actorId = toRemoveInsert.imgId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n            let actor = game.actors.get(actorId);\n            if (actor) {\n                let skel = {};\n                skel[\"flags.theatre.settings.emote\"] = toRemoveInsert.emote;\n                skel[\"flags.theatre.settings.textflyin\"] = toRemoveInsert.textFlyin;\n                skel[\"flags.theatre.settings.textstanding\"] = toRemoveInsert.textStanding;\n                skel[\"flags.theatre.settings.textfont\"] = toRemoveInsert.textFont;\n                skel[\"flags.theatre.settings.textsize\"] = toRemoveInsert.textSize;\n                skel[\"flags.theatre.settings.textcolor\"] = toRemoveInsert.textColor;\n                actor.update(skel).then((response) => {\n                    Logger.debug(\"updated with resp: \", response);\n                });\n            }\n        }\n\n        // animate and delayed removal\n        //let isLeft = toRemoveInsert.getElementsByClassName(\"theatre-portrait-left\").length > 0;\n        let exitX = 0;\n        if (toRemoveInsert.portrait) {\n            if (toRemoveInsert.exitOrientation == \"left\") {\n                exitX = toRemoveInsert.dockContainer.x - toRemoveInsert.portrait.width;\n            } else {\n                exitX = toRemoveInsert.dockContainer.x + toRemoveInsert.portrait.width;\n            }\n        }\n\n        // Push to socket our event\n        if (!remote) this._sendSceneEvent(\"exitscene\", { insertid: toRemoveInsert.imgId });\n\n        // unactivate from navbar\n        for (let navItem of this.theatreNavBar.children)\n            if (navItem.getAttribute(\"imgId\") == toRemoveInsert.imgId) {\n                KHelpers.removeClass(navItem, \"theatre-control-nav-bar-item-active\");\n                if (toRemoveInsert.imgId == this.speakingAs)\n                    KHelpers.removeClass(navItem, \"theatre-control-nav-bar-item-speakingas\");\n            }\n        // clear chat cover + effects if active for this ID\n        if (this.speakingAs == toRemoveInsert.imgId) {\n            let cimg = this.getTheatreCoverPortrait();\n            cimg.removeAttribute(\"src\");\n            cimg.style.opacity = \"0\";\n            let label = this._getLabelFromInsert(toRemoveInsert);\n            TweenMax.killTweensOf(label);\n            // clear typing\n            for (let userId in this.usersTyping)\n                if (this.usersTyping[userId] && this.usersTyping[userId].theatreId == toRemoveInsert.imgId) {\n                    this.removeUserTyping(userId);\n                    this.usersTyping[userId] = null;\n                    break;\n                }\n            // clear label\n            // clear speakingAs\n            this.speakingAs = null;\n            this.renderEmoteMenu();\n        }\n        // kill any animations of textBox\n        for (let c of toRemoveTextBox.children) {\n            for (let sc of c.children) TweenMax.killTweensOf(sc);\n            TweenMax.killTweensOf(c);\n        }\n        TweenMax.killTweensOf(toRemoveTextBox);\n        /*\n\t\tfor (let c of toRemoveTextBox.children)\n\t\t\tc.parentNode.removeChild(c);\n\t\t*/\n        // fade away text box\n        toRemoveTextBox.style.opacity = 0;\n\n        // animate away the dockContainer\n        let tweenId = \"containerSlide\";\n        let tween = TweenMax.to(toRemoveInsert.dockContainer, 1, {\n            //delay: 0.5,\n            pixi: { x: exitX, alpha: 0 },\n            ease: Power4.easeOut,\n            onComplete: function (ctx, imgId, tweenId) {\n                // decrement the rendering accumulator\n                ctx._removeDockTween(imgId, this, tweenId);\n                // remove our own reference from the dockContainer tweens\n            },\n            onCompleteParams: [this, toRemoveInsert.imgId, tweenId],\n        });\n        this._addDockTween(toRemoveInsert.imgId, tween, tweenId);\n\n        window.setTimeout(() => {\n            this._destroyPortraitDock(toRemoveInsert.imgId);\n            this._removeTextBoxFromTheatreBar(toRemoveTextBox);\n\n            if (this.reorderTOId) window.clearTimeout(this.reorderTOId);\n\n            this.reorderTOId = window.setTimeout(() => {\n                Theatre.reorderInserts();\n                this.reorderTOId = null;\n            }, 750);\n        }, 1000);\n\n        // return results of what was removed\n        return { insert: toRemoveInsert, textBox: toRemoveTextBox };\n    }\n\n    /**\n     * If the dock is active, a number > 0 will be returned indicating\n     * the number of active Theatre Inserts in the dock. 0 meaning the dock\n     * is inactive\n     *\n     * @return (Number) : The number of inserts in the dock\n     */\n    get dockActive() {\n        return this.portraitDocks.length;\n    }\n\n    /**\n     * Get nav item by ID\n     *\n     * @params id (String) : The theatreId insert whose navItem we want.\n     *\n     * @return (HTMLElement) : The nav item, if found, else undefined.\n     */\n    getNavItemById(id) {\n        const theatreActor = this.stage[id];\n        if (theatreActor) return theatreActor.navElement;\n    }\n\n    /**\n     * Get nav item by Name\n     *\n     * @params name (String) : The label name of the insert whose navItem we want.\n     *\n     * @return (HTMLElement) : The nav item, if found, else undefined.\n     */\n    getNavItemByName(name) {\n        for (let navItem of this.theatreNavBar.children) {\n            if (navItem.getAttribute(\"name\") == name) return navItem;\n        }\n    }\n\n    /**\n     * Get bar text box by ID\n     *\n     * @params id (String) : The theatreId of an insert whose textBox we want.\n     *\n     * @return (HTMLElement) : The TextBox of the given theatreId, or undefined.\n     */\n    getTextBoxById(id) {\n        // Narrator is a special case\n        if (id == CONSTANTS.NARRATOR) return this.theatreNarrator.getElementsByClassName(\"theatre-narrator-content\")[0];\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id) {\n                return textBox;\n            }\n        }\n    }\n\n    /**\n     * Get bar text box by Name\n     *\n     * @params name (String) : The label name of an insert whose textBox we want.\n     *\n     * @return (HTMLElement) : The TextBox of the given theatreId, or undefined.\n     */\n    getTextBoxByName(name) {\n        if (name == CONSTANTS.NARRATOR)\n            return this.theatreNarrator.getElementsByClassName(\"theatre-narrator-content\")[0];\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"name\") == name) {\n                return textBox;\n            }\n        }\n    }\n\n    /**\n     * Get insert dock by ID\n     *\n     * @params id (String) : The theatreId of an insert we want.\n     *\n     * @return (Object) : The Object representing the insert, or undefined.\n     */\n    getInsertById(id) {\n        for (let idx = this.portraitDocks.length - 1; idx >= 0; --idx)\n            if (this.portraitDocks[idx].imgId == id) {\n                if (this.portraitDocks[idx].dockContainer) return this.portraitDocks[idx];\n                else {\n                    this.portraitDocks.splice(idx, 1);\n                    return undefined;\n                }\n            }\n    }\n\n    /**\n     * Get insert dock by Name\n     *\n     * @params name (String) : The name of an insert we want.\n     *\n     * @return (Object) : The Object representing the insert, or undefined.\n     */\n    getInsertByName(name) {\n        for (let idx = this.portraitDocks.length - 1; idx >= 0; --idx)\n            if (this.portraitDocks[idx].name == name) {\n                if (this.portraitDocks[idx].dockContainer) return this.portraitDocks[idx];\n                else {\n                    this.portraitDocks.splice(idx, 1);\n                    return undefined;\n                }\n            }\n    }\n\n    /**\n     * Get the portrait sprite given the insert\n     *\n     * @params insert (Object) : The Object representing the insert.\n     *\n     * @return (Object PIXISprite) : The PIXISprite portrait of the insert.\n     *\n     * @private\n     */\n    _getPortraitSpriteFromInsert(insert) {\n        if (!insert || !insert.dockContainer || !insert.potrrait) return null;\n        return insert.portrait;\n    }\n\n    /**\n     * Get the portrait container given the insert\n     *\n     * @params insert (Object) : The Object representing the insert.\n     *\n     * @return (Object PIXIContainer) : The PIXIContainer portrait container of the sprite.\n     *\n     * @private\n     */\n    _getPortraitContainerFromInsert(insert) {\n        if (!insert || !insert.dockContainer) return null;\n        return insert.portraitContainer;\n    }\n\n    /**\n     * Get the label sprite given the insert\n     *\n     * @params insert (Object) : The Object representing the insert.\n     *\n     * @return (Object PIXIText) : The PIXIText label of the insert.\n     *\n     * @private\n     */\n    _getLabelFromInsert(insert) {\n        if (!insert || !insert.dockContainer) return null;\n        return insert.label;\n    }\n\n    /**\n     * Gets the theatre's chat cover image\n     *\n     * @return (HTMLElement) : The <img> tag of the cover portrait in the\n     *\tchat message area.\n     */\n    getTheatreCoverPortrait() {\n        return this.theatreChatCover.getElementsByTagName(\"img\")[0];\n    }\n\n    /**\n     * Get speaking insert of /this/ user\n     *\n     * @return (Object) : The Object representing the insert that this\n     *\tUser is speaking as, else undefined.\n     */\n    getSpeakingInsert() {\n        let insert = this.getInsertById(this.speakingAs);\n        return insert;\n    }\n\n    /**\n     * Get speaking name of /this/ user\n     *\n     * @return (Object PIXISprite) : The PIXISrite label of the insert the\n     *\tUser is speaking as, else undefined.\n     */\n    getSpeakingLabel() {\n        let insert = this.getInsertById(this.speakingAs);\n        return this._getLabelFromInsert(insert);\n    }\n\n    /**\n     * Get speaking portrait container of /this/ user\n     *\n     * @return (Object PIXIContainer) : The PIXIContainer portrait container\n     *\tof the insert the User is speaking as, else undefined.\n     */\n    getSpeakingPortraitContainer() {\n        let insert = this.getInsertById(this.speakingAs);\n        return this._getPortraitContainerFromInsert(insert);\n    }\n\n    /**\n     * Get speaking textBox of /this/ user\n     *\n     * @return (HTMLElement) : The textBox of the insert the User is\n     *\tspeaking as, else undefined.\n     */\n    getSpeakingTextBox() {\n        return this._getTextBoxById(this.speakingAs);\n    }\n\n    /**\n     * Swap Inserts by ID\n     *\n     * @params id1 (String) : The theatreId of the first insert to swap.\n     * @params id2 (String) : The theatreId of the second insert to swap.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    swapInsertsById(id1, id2, remote) {\n        if (this.portraitDocks.length < 2) return;\n\n        let insert1, insert2, textBox1, textBox2;\n        for (let insert of this.portraitDocks) {\n            if (insert.imgId == id1 && !!!insert1) insert1 = insert;\n            else if (insert.imgId == id2 && !!!insert2) insert2 = insert;\n            if (!!insert1 && !!insert2) break;\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id1 && !!!textBox1) textBox1 = textBox;\n            else if (textBox.getAttribute(\"imgId\") == id2 && !!!textBox2) textBox2 = textBox;\n            if (!!textBox1 && !!textBox2) break;\n        }\n\n        if (!!!insert1 || !!!insert2) return;\n        if (!!!textBox1 || !!!textBox2) return;\n        this._swapInserts(insert1, insert2, textBox1, textBox2, remote);\n    }\n\n    /**\n     * Swap Inserts by Name\n     *\n     * @params name1 (String) : The label name of the first insert to swap.\n     * @params name2 (String) : The label name of the second insert to swap.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    swapInsertsByName(name1, name2, remote) {\n        if (this.portraitDocks.length < 2) return;\n\n        let insert1, insert2, textBox1, textBox2;\n        name1 = name1.toLowerCase();\n        name2 = name2.toLowerCase();\n        for (let insert of this.portraitDocks) {\n            if (insert.name == name1 && !!!insert1) insert1 = insert;\n            else if (insert.name == name2 && !!!insert2) insert2 = insert;\n            if (!!insert1 && !!insert2) break;\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"name\") == name1 && !!!textBox1) textBox1 = textBox;\n            else if (textBox.getAttribute(\"name\") == name2 && !!!textBox2) textBox2 = textBox;\n            if (!!textBox1 && !!textBox2) break;\n        }\n\n        if (!!!insert1 || !!!insert2) return;\n        if (!!!textBox1 || !!!textBox2) return;\n        this._swapInserts(insert1, insert2, textBox1, textBox2, remote);\n    }\n\n    /**\n     * Swaps Inserts\n     *\n     * @params insert1 (Object) : The Object representing the first insert to swap.\n     * @params insert2 (Object) : The Object representing the second insert to swap.\n     * @params textBox1 (HTMLELement) : The textBox of the first insert to swap.\n     * @params textBox2 (HTMLELement) : The textBox of the second insert to swap.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     *\n     * @private\n     */\n    _swapInserts(insert1, insert2, textBox1, textBox2, remote) {\n        let tsib1n = textBox1.nextSibling,\n            tsib1p = textBox1.previousSibling,\n            tsib2n = textBox2.nextSibling,\n            tsib2p = textBox2.previousSibling;\n        //Logger.debug(\"SWAP\",textBox1,textBox2);\n        let adjSwap = false;\n\n        // permission check\n        if (!remote && (!this.isPlayerOwned(insert1.imgId) || !this.isPlayerOwned(insert2.imgId))) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotSwapControlled\"), true);\n            return;\n        } else if (\n            !remote &&\n            !this.isActorOwner(game.user.id, insert1.imgId) &&\n            !this.isActorOwner(game.user.id, insert2.imgId)\n        ) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotSwapOwner\"), true);\n            return;\n        }\n\n        // check the dual dock case\n        if (this._isTextBoxInPrimeBar(textBox1) && this._isTextBoxInSecondBar(textBox2)) {\n            let primeBar = document.getElementById(\"theatre-prime-bar\");\n            let secondBar = document.getElementById(\"theatre-second-bar\");\n            insert1.nameOrientation = \"right\";\n            insert1.exitOrientation = \"right\";\n            insert2.nameOrientation = \"left\";\n            insert2.exitOrientation = \"left\";\n\n            primeBar.appendChild(textBox2);\n            secondBar.appendChild(textBox1);\n        } else if (this._isTextBoxInPrimeBar(textBox2) && this._isTextBoxInSecondBar(textBox1)) {\n            let primeBar = document.getElementById(\"theatre-prime-bar\");\n            let secondBar = document.getElementById(\"theatre-second-bar\");\n            insert1.nameOrientation = \"left\";\n            insert1.exitOrientation = \"left\";\n            insert2.nameOrientation = \"right\";\n            insert2.exitOrientation = \"right\";\n\n            primeBar.appendChild(textBox1);\n            secondBar.appendChild(textBox2);\n        } else {\n            // full bar case\n            if (tsib1n) {\n                KHelpers.insertBefore(textBox2, tsib1n);\n            } else if (tsib1p && tsib1p != textBox2) {\n                KHelpers.insertAfter(textBox2, tsib1p);\n            } else {\n                Logger.debug(\"NO TSIB1 and PRIOR\");\n                KHelpers.insertAfter(textBox2, textBox1);\n                adjSwap = true;\n            }\n\n            if (!adjSwap) {\n                if (tsib2n) {\n                    KHelpers.insertBefore(textBox1, tsib2n);\n                } else if (tsib2p && tsib2p != textBox1) {\n                    KHelpers.insertAfter(textBox1, tsib2p);\n                } else {\n                    Logger.debug(\"NO TSIB2 and PRIOR\");\n                    KHelpers.insertAfter(textBox1, textBox2);\n                }\n            }\n        }\n\n        if (this.reorderTOId) {\n            window.clearTimeout(this.reorderTOId);\n        }\n\n        this.reorderTOId = window.setTimeout(() => {\n            Theatre.reorderInserts();\n            this.reorderTOId = null;\n        }, 250);\n\n        // Push to socket our event\n        if (!remote) {\n            Theatre.instance._sendSceneEvent(\"swap\", {\n                insertid1: insert1.imgId,\n                insertid2: insert2.imgId,\n            });\n        }\n    }\n\n    /**\n     * Move  Inserts by ID\n     *\n     * @params id1 (String) : The theatreId of the destination insert to move to.\n     * @params id2 (String) : The theatreId of insert to move.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    moveInsertById(id1, id2, remote) {\n        if (this.portraitDocks.length < 2) return;\n\n        let insert1, insert2, textBox1, textBox2;\n        for (let insert of this.portraitDocks) {\n            if (insert.imgId == id1 && !!!insert1) insert1 = insert;\n            else if (insert.imgId == id2 && !!!insert2) insert2 = insert;\n            if (!!insert1 && !!insert2) break;\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id1 && !!!textBox1) textBox1 = textBox;\n            else if (textBox.getAttribute(\"imgId\") == id2 && !!!textBox2) textBox2 = textBox;\n            if (!!textBox1 && !!textBox2) break;\n        }\n\n        if (!!!insert1 || !!!insert2) return;\n        if (!!!textBox1 || !!!textBox2) return;\n        this._moveInsert(insert1, insert2, textBox1, textBox2, remote);\n    }\n\n    /**\n     * Move an insert\n     *\n     * @params insert1 (Object) : The Object representing the destination insert.\n     * @params insert2 (Object) : The Object representing insert to move\n     *\n     * @params textBox1 (HTMLELement) : The textBox of the destination textbox\n     * @params textBox2 (HTMLELement) : The textBox of the textbox to move\n     *\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     *\n     * @private\n     */\n    _moveInsert(insert1, insert2, textBox1, textBox2, remote) {\n        let tsib1n = textBox1.nextSibling,\n            tsib1p = textBox1.previousSibling,\n            tsib2n = textBox2.nextSibling,\n            tsib2p = textBox2.previousSibling;\n        //Logger.debug(\"SWAP\",textBox1,textBox2);\n        let adjSwap = false;\n\n        // permission check\n        if (!remote && !this.isActorOwner(game.user.id, insert2.imgId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotMoveOwner\"), true);\n            return;\n        } else if (!remote && (!this.isPlayerOwned(insert1.imgId) || !this.isPlayerOwned(insert2.imgId))) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotMoveControlled\"), true);\n            return;\n        }\n\n        // check the dual dock case\n        if (this._isTextBoxInPrimeBar(textBox1) && this._isTextBoxInSecondBar(textBox2)) {\n            let primeBar = document.getElementById(\"theatre-prime-bar\");\n            let secondBar = document.getElementById(\"theatre-second-bar\");\n            insert1.nameOrientation = \"right\";\n            insert1.exitOrientation = \"right\";\n            insert2.nameOrientation = \"left\";\n            insert2.exitOrientation = \"left\";\n\n            primeBar.appendChild(textBox2);\n            secondBar.appendChild(textBox1);\n        } else if (this._isTextBoxInPrimeBar(textBox2) && this._isTextBoxInSecondBar(textBox1)) {\n            let primeBar = document.getElementById(\"theatre-prime-bar\");\n            let secondBar = document.getElementById(\"theatre-second-bar\");\n            insert1.nameOrientation = \"left\";\n            insert1.exitOrientation = \"left\";\n            insert2.nameOrientation = \"right\";\n            insert2.exitOrientation = \"right\";\n\n            primeBar.appendChild(textBox1);\n            secondBar.appendChild(textBox2);\n        } else {\n            // full bar case\n            if (insert2.order > insert1.order) KHelpers.insertBefore(textBox2, textBox1);\n            else KHelpers.insertAfter(textBox2, textBox1);\n        }\n\n        if (this.reorderTOId) window.clearTimeout(this.reorderTOId);\n\n        this.reorderTOId = window.setTimeout(() => {\n            Theatre.reorderInserts();\n            this.reorderTOId = null;\n        }, 250);\n\n        // Push to socket our event\n        if (!remote) {\n            Theatre.instance._sendSceneEvent(\"move\", {\n                insertid1: insert1.imgId,\n                insertid2: insert2.imgId,\n            });\n        }\n    }\n\n    /**\n     * Is the textbox in the prime bar\n     *\n     * @params textBox (HTMLElement) : The textBox to check.\n     *\n     * @return (Boolean) True if the textBox is in the Prime Bar, false otherwise.\n     *\n     * @private\n     */\n    _isTextBoxInPrimeBar(textBox) {\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let id = textBox.getAttribute(\"imgId\");\n        for (let btb of primeBar.children) {\n            if (btb.getAttribute(\"imgId\") == id) return true;\n        }\n        return false;\n    }\n\n    /**\n     * Is the textbox in the second bar\n     *\n     * @params textBox (HTMLElement) : The textBox to check.\n     *\n     * @return (Boolean) True if the textBox is in the Second Bar, false otherwise.\n     *\n     * @private\n     */\n    _isTextBoxInSecondBar(textBox) {\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n        let id = textBox.getAttribute(\"imgId\");\n        for (let btb of secondBar.children) {\n            if (btb.getAttribute(\"imgId\") == id) return true;\n        }\n        return false;\n    }\n\n    /**\n     * Push Insert left or right of all others by Id\n     *\n     * @params id (String) : The theatreId of the insert to push.\n     * @params isLeft (Boolean) : Wither we're pushing left or right.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    pushInsertById(id, isLeft, remote) {\n        if (this.portraitDocks.length <= 2) return;\n\n        let targInsert;\n        let targTextBox;\n        for (let insert of this.portraitDocks) {\n            if (insert.imgId == id) {\n                targInsert = insert;\n                break;\n            }\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"imgId\") == id) {\n                targTextBox = textBox;\n                break;\n            }\n        }\n        if (!!!targInsert || !!!targTextBox) return;\n\n        this._pushInsert(targInsert, targTextBox, isLeft, remote);\n    }\n\n    /**\n     * Push Insert left or right of all others by Name\n     *\n     * @params name (String) : The label name of the insert to push.\n     * @params isLeft (Boolean) : Wither we're pushing left or right.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    pushInsertByName(name, isLeft, remote) {\n        if (this.portraitDocks.length <= 2) return;\n\n        let targInsert;\n        let targTextBox;\n        for (let insert of this.portraitDocks) {\n            if (insert.name == name) {\n                targInsert = insert;\n                break;\n            }\n        }\n        for (let textBox of this._getTextBoxes()) {\n            if (textBox.getAttribute(\"name\") == name) {\n                targTextBox = textBox;\n                break;\n            }\n        }\n        if (!!!targInsert || !!!targTextBox) return;\n\n        this._pushInsert(targInsert, targTextBox, isLeft, remote);\n    }\n\n    /**\n     * Push Insert left or right of all others\n     *\n     * @params insert (Object) : The Object represeting the insert.\n     * @params textBox (HTMLElement) : The textBox of the insert.\n     * @params isLeft (Boolean) : Wither we're pushing left or right.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     *\n     * @private\n     */\n    _pushInsert(insert, textBox, isLeft, remote) {\n        let textBoxes = this._getTextBoxes();\n        let firstInsert = this.portraitDocks[0];\n        let lastInsert = this.portraitDocks[this.portraitDocks.length - 1];\n        let firstTextBox = textBoxes[0];\n        let lastTextBox = textBoxes[textBoxes.length - 1];\n\n        if (!!!firstInsert || !!!lastInsert || !!!firstTextBox || !!!lastTextBox) return;\n\n        // permission check\n        if (!remote && !this.isActorOwner(game.user.id, insert.imgId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return;\n        } else if (\n            !remote &&\n            (isLeft ? !this.isPlayerOwned(firstInsert.imgId) : !this.isPlayerOwned(lastInsert.imgId))\n        ) {\n            if (isLeft) {\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotPushFront\"), true);\n            } else {\n                Logger.info(game.i18n.localize(\"Theatre.UI.Notification.CannotPushBack\"), true);\n            }\n            return;\n        }\n\n        if (isLeft) {\n            KHelpers.insertBefore(textBox, firstTextBox);\n        } else {\n            KHelpers.insertAfter(textBox, lastTextBox);\n        }\n\n        /*\n\t\tif (this.reorderTOId)\n\t\t\twindow.clearTimeout(this.reorderTOId);\n\n\t\tthis.reorderTOId = window.setTimeout(()=>{\n\t\t\tTheatre.reorderInserts();\n\t\t\tthis.reorderTOId = null;\n\t\t},500);\n\t\t*/\n        Theatre.reorderInserts();\n\n        // Push to socket our event\n        if (!remote) {\n            Theatre.instance._sendSceneEvent(\"push\", {\n                insertid: insert.imgId,\n                tofront: isLeft,\n            });\n        }\n    }\n\n    /**\n     * Mirror a portrait by ID\n     *\n     * @params id (String) : The theatreId of the insert we wish to mirror.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    mirrorInsertById(id, remote) {\n        let insert = this.getInsertById(id);\n        if (!insert) return;\n\n        this._mirrorInsert(insert, remote);\n    }\n\n    /**\n     * Mirror a portrait by Name\n     *\n     * @params name (String) : The label name of the insert we wish to mirror.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    mirrorInsertByName(name, remote) {\n        let insert = this.getInsertByName(name);\n        if (!insert) return;\n\n        this._mirrorInsert(insert, remote);\n    }\n\n    /**\n     * Is an insertMirrored give Id\n     *\n     * @params id (String) : The theatreId of the insert we wish to mirror.\n     * return (Boolean) : True if the insert is mirrored, false otherwise.\n     */\n    isInsertMirrored(id) {\n        let insert = this.getInsertByName(id);\n        return insert.mirrored;\n    }\n\n    /**\n     * Mirror a portrait\n     *\n     * @params insert (Object) : The Object represeting the insert.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     *\n     * @private\n     */\n    _mirrorInsert(insert, remote) {\n        // permission check\n        if (!remote && !this.isActorOwner(game.user.id, insert.imgId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return;\n        }\n\n        let tweenId = \"mirrorFlip\";\n        let broadcast = false;\n        if (!insert.mirrored && !insert.tweens[tweenId]) {\n            insert.mirrored = true;\n            let tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { scaleX: -1 },\n                ease: Power4.easeInOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                },\n                onCompleteParams: [this, insert.imgId, tweenId],\n            });\n            this._addDockTween(insert.imgId, tween, tweenId);\n            broadcast = true;\n        } else if (!insert.tweens[tweenId]) {\n            insert.mirrored = false;\n            let tween = TweenMax.to(insert.portraitContainer, 0.5, {\n                pixi: { scaleX: 1 },\n                ease: Power4.easeInOut,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                },\n                onCompleteParams: [this, insert.imgId, tweenId],\n            });\n            this._addDockTween(insert.imgId, tween, tweenId);\n            broadcast = true;\n        }\n\n        // Push to socket our event\n        if (!remote && broadcast) {\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: {\n                    x: insert.portraitContainer.x,\n                    y: insert.portraitContainer.y,\n                    mirror: insert.mirrored,\n                },\n            });\n        }\n    }\n\n    /**\n     * Reset an insert's postion/mirror state by Id\n     *\n     * @param id (String) : The theatreId of the insert to reset.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    resetInsertById(id, remote) {\n        let insert = this.getInsertById(id);\n\n        this._resetPortraitPosition(insert, remote);\n    }\n\n    /**\n     * Reset an insert's postion/mirror state by Id\n     *\n     * @param name (String) : The name label of the insert to reset.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    resetInsertByName(name, remote) {\n        let insert = this.getInsertByName(name);\n\n        this._resetPortraitPosition(insert, remote);\n    }\n    /**\n     * Resets a portrait position/morror state\n     *\n     * @params insert (Object) : The Object represeting an insert.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     *\n     * @private\n     */\n    _resetPortraitPosition(insert, remote) {\n        // permission check\n        if (!remote && !this.isActorOwner(game.user.id, insert.imgId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return;\n        }\n\n        let tweenId, tween;\n        // reset mirroring\n        // reset position of portraitContainer\n        insert.mirrored = false;\n        tweenId = \"portraitMove\";\n        tween = TweenMax.to(insert.portraitContainer, 0.5, {\n            pixi: { scaleX: 1, x: insert.portrait.width / 2, y: insert.portrait.height / 2 },\n            ease: Power3.easeOut,\n            onComplete: function (ctx, imgId, tweenId) {\n                // decrement the rendering accumulator\n                Logger.debug(\"portrait move onComplete %s\", tweenId);\n                ctx._removeDockTween(imgId, this, tweenId);\n            },\n            onCompleteParams: [this, insert.imgId, tweenId],\n        });\n        this._addDockTween(insert.imgId, tween, tweenId);\n\n        // Push to socket our event\n        if (!remote) {\n            Theatre.instance._sendSceneEvent(\"positionupdate\", {\n                insertid: insert.imgId,\n                position: { x: insert.portrait.width / 2, y: insert.portrait.height / 2, mirror: false },\n            });\n        }\n    }\n\n    /**\n     * first verify, then immediately execute the set of tweens\n     * defined in the animation syntax.\n     *\n     * If any tweens in the syntax are incorrect, none are executed, and\n     * an empty array is returned indicating no tweens were performed\n     *\n     * Return an array of tweens applied to the target container\n     *\n     * @params animName (String) : The animation name.\n     * @params animSyntax (String) : The animation syntax.\n     * @params resMap (Array[Object]) : The resource map to use consisting of\n     *                                  {name: (String), path: (String)} tuples.\n     * @params insert (Object) :  The object represeting the insert that will contain this\n     *                            animation.\n     */\n    async addTweensFromAnimationSyntax(animName, animSyntax, resMap, insert) {\n        let tweenParams = Theatre.verifyAnimationSyntax(animSyntax);\n\n        let resTarget = resMap.find((e) => e.name == tweenParams[0].resName);\n        let texture = await PIXI.Assets.load(resTarget.path);\n\n        Logger.debug(\n            \"Adding tweens for animation '%s' from syntax: %s with params: \",\n            animName,\n            animSyntax,\n            tweenParams,\n        );\n        // Logger.debug(\"Resource path is %s, resource: \", resTarget.path, resource);\n        if (!texture) {\n            Logger.error(\n                'ERROR: resource name : \"%s\" with path \"%s\" does not exist!',\n                false,\n                tweenParams[idx].resName,\n                resTarget.path,\n            );\n            return;\n        }\n\n        let sprite = new PIXI.Sprite(texture);\n        let spriteWidth = texture.width;\n        let spriteHeight = texture.height;\n        sprite.anchor.set(0.5);\n        insert.portraitContainer.addChild(sprite);\n\n        for (let idx = 0; idx < tweenParams.length; ++idx) {\n            let advOptions = tweenParams[idx].advOptions;\n            // advanced options breakdown\n            let yoyo = null;\n            let delay = 0;\n            let repeat = 0;\n            let repeatDelay = 0;\n            let ease = Power0.easeNone;\n            let yoyoEase = null;\n            let noMirror = false; // Not Implemented\n            if (advOptions) {\n                Logger.debug(\"adv options arg: \", advOptions);\n                yoyo = advOptions.yoyo ? true : false;\n                noMirror = advOptions.noMirror ? true : false;\n                delay = advOptions.delay ? Number(advOptions.delay) : delay;\n                repeat = advOptions.repeat ? Number(advOptions.repeat) : repeat;\n                repeatDelay = advOptions.repeatDelay ? Number(advOptions.repeatDelay) : repeatDelay;\n                ease = advOptions.ease ? Theatre.verifyEase(advOptions.ease) : ease;\n                yoyoEase = advOptions.yoyoEase ? Theatre.verifyEase(advOptions.yoyoEase) : yoyoEase;\n            }\n\n            let pixiParams = {};\n            for (let prop of tweenParams[idx].props) {\n                // special case of x/y/scale\n                if (\n                    prop.name == \"x\" ||\n                    prop.name == \"y\" ||\n                    prop.name == \"rotation\" ||\n                    prop.name == \"scaleX\" ||\n                    prop.name == \"scaleY\"\n                ) {\n                    if (prop.initial.includes(\"%\")) {\n                        prop.initial =\n                            (Number(prop.initial.match(/-*\\d+\\.*\\d*/)[0] || 0) / 100) *\n                            (prop.name == \"x\" ? insert.portrait.width : insert.portrait.height);\n                        prop.final =\n                            (Number(prop.final.match(/-*\\d+\\.*\\d*/)[0] || 0) / 100) *\n                            (prop.name == \"x\" ? insert.portrait.width : insert.portrait.height);\n                    } else if ([\"scaleX\", \"scaleY\", \"rotation\"].some((e) => e == prop.name)) {\n                        prop.initial = Number(prop.initial.match(/-*\\d+\\.*\\d*/)[0] || 0);\n                        prop.final = Number(prop.final.match(/-*\\d+\\.*\\d*/)[0] || 0);\n                    }\n\n                    Logger.debug(\n                        \"new %s : %s,%s : w:%s,h:%s\",\n                        prop.name,\n                        prop.initial,\n                        prop.final,\n                        insert.portrait.width,\n                        insert.portrait.height,\n                    );\n                }\n\n                // special case for some GSAP -> PIXI names\n                switch (prop.name) {\n                    case \"scaleX\":\n                        sprite.scale.x = prop.initial;\n                        break;\n                    case \"scaleY\":\n                        sprite.scale.y = prop.initial;\n                        break;\n                    case \"rotation\":\n                        sprite.rotation = prop.initial * (Math.PI / 180);\n                        break;\n                    default:\n                        sprite[prop.name] = prop.initial;\n                        break;\n                }\n                pixiParams[prop.name] = prop.final;\n            }\n\n            let tweenId = animName + idx;\n            let tween = TweenMax.to(sprite, tweenParams[idx].duration, {\n                pixi: pixiParams,\n                ease: ease,\n                delay: delay,\n                repeatDelay: repeatDelay,\n                repeat: repeat,\n                yoyo: yoyo,\n                yoyoEase: yoyoEase,\n                /*onRepeat: function() {\n\t\t\t\t\tLogger.debug(\"ANIMATION tween is repeating!\",this);\n\t\t\t\t}, */\n                onComplete: function (ctx, imgId, tweenId) {\n                    Logger.debug(\"ANIMATION tween complete!\");\n                    // decrement the rendering accumulator\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [this, insert.imgId, tweenId],\n            });\n            if (repeat != 0) tween.duration(tweenParams[idx].duration);\n            this._addDockTween(insert.imgId, tween, tweenId);\n        }\n    }\n\n    /**\n     * Given the insert params, return the correct\n     * intitial emotion set when displaying an insert\n     * which was previously staged, or not active\n     *\n     * first : actor.flags.theatre.<emote>.settings.<parameter>\n     * second : actor.flags.theatre.settings.<parameter>\n     * third : Theatre.instance.userEmotes[<userid>].<parameter>\n     *\n     * @params params (Object) : The set of emotion properties.\n     * @params userDefault (Boolean) : Wither to use the default user settings over the\n     *                                 settings in the params object.\n     *\n     * @return (Object) : The object containing the emotion properties to be used.\n     *\n     * @private\n     */\n    _getInitialEmotionSetFromInsertParams(params, useDefault) {\n        Logger.debug(\"use default? %s\", !useDefault);\n        let emotions = {\n            emote:\n                (!useDefault && params.settings.emote ? params.settings.emote : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].emote : null),\n            textFlyin:\n                (!useDefault &&\n                params.settings.emote &&\n                params.emotes[params.settings.emote] &&\n                params.emotes[params.settings.emote].settings\n                    ? params.emotes[params.settings.emote].settings.textflyin\n                    : null) ||\n                (!useDefault ? params.settings.textflyin : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].textFlyin : null),\n            textStanding:\n                (!useDefault &&\n                params.settings.emote &&\n                params.emotes[params.settings.emote] &&\n                params.emotes[params.settings.emote].settings\n                    ? params.emote.settings.textstanding\n                    : null) ||\n                (!useDefault ? params.settings.textstanding : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].textStanding : null),\n            textFont:\n                (!useDefault &&\n                params.settings.emote &&\n                params.emotes[params.settings.emote] &&\n                params.emotes[params.settings.emote].settings\n                    ? params.emote.settings.textfont\n                    : null) ||\n                (!useDefault ? params.settings.textfont : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].textFont : null),\n            textSize:\n                (!useDefault &&\n                params.settings.emote &&\n                params.emotes[params.settings.emote] &&\n                params.emotes[params.settings.emote].settings\n                    ? params.emote.settings.textsize\n                    : null) ||\n                (!useDefault ? params.settings.textsize : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].textSize : null),\n            textColor:\n                (!useDefault &&\n                params.settings.emote &&\n                params.emotes[params.settings.emote] &&\n                params.emotes[params.settings.emote].settings\n                    ? params.emote.settings.textcolor\n                    : null) ||\n                (!useDefault ? params.settings.textcolor : null) ||\n                (this.userEmotes[game.user.id] ? this.userEmotes[game.user.id].textColor : null),\n        };\n        return emotions;\n    }\n\n    /**\n     * Activate an insert by Id, if it is staged to the navbar\n     *\n     * @params id (String) : The theatreId of the insert to activate.\n     * @params ev (Event) : The event that possibly triggered this activation.\n     */\n    async activateInsertById(id, ev) {\n        let actorId = id.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let navItem = this.getNavItemById(id);\n        if (!navItem) {\n            let actor = game.actors.get(actorId);\n            Theatre.addToNavBar(actor);\n            navItem = this.getNavItemById(id);\n        }\n        if (!navItem) return;\n\n        let params = this._getInsertParamsFromActorId(actorId);\n\n        Logger.debug(\" set as active\");\n        // set as user active\n        // If the insert does not exist in the dock, add it,\n        // If it does, then simply toggle it as active if it isn't already\n        // If it's already active, and we're GM, then we want to transition to 'god mode'\n        // voice, thus we simply un-activate our character, and assume GM voice again\n        // (the default, if no insert selected)\n        let insert = this.getInsertById(id);\n        let textBox = this.getTextBoxById(id);\n        let label = insert ? insert.label : null;\n\n        // remove old speaking as, shift it\n        let oldSpeakingItem = this.getNavItemById(this.speakingAs);\n        let oldSpeakingInsert = this.getInsertById(this.speakingAs);\n        let oldSpeakingLabel = oldSpeakingInsert ? oldSpeakingInsert.label : null;\n        if (oldSpeakingItem) KHelpers.removeClass(oldSpeakingItem, \"theatre-control-nav-bar-item-speakingas\");\n        if (oldSpeakingInsert) {\n            this._removeDockTween(this.speakingAs, null, \"nameSpeakingPulse\");\n            oldSpeakingInsert.label.tint = 0xffffff;\n        }\n        // if narrator is active, deactivate it and push the button up\n        if (game.user.isGM && this.speakingAs == CONSTANTS.NARRATOR) this.toggleNarratorBar(false);\n        // if this insert / textbox pair is being removed, stop\n        if (!!insert && textBox.getAttribute(\"deleting\")) return;\n\n        if (!!insert) {\n            // already in theatre\n            // if not same id toggle it\n            let cimg = this.getTheatreCoverPortrait();\n            if (this.speakingAs != id) {\n                this.speakingAs = id;\n                KHelpers.addClass(navItem, \"theatre-control-nav-bar-item-speakingas\");\n                TweenMax.to(Theatre.instance.theatreNavBar, 0.4, {\n                    scrollTo: { x: navItem.offsetLeft, offsetX: Theatre.instance.theatreNavBar.offsetWidth / 2 },\n                });\n\n                // add label pulse\n                insert.label.tint = 0xffffff;\n                let tweenId = \"nameSpeakingPulse\";\n                let tween = TweenMax.to(insert.label, 1, {\n                    pixi: { tint: 0xff6400 },\n                    ease: Power0.easeNone,\n                    repeat: -1,\n                    yoyo: true,\n                    onComplete: function (ctx, imgId, tweenId) {\n                        // decrement the rendering accumulator\n                        ctx._removeDockTween(imgId, this, tweenId);\n                        // remove our own reference from the dockContainer tweens\n                    },\n                    onCompleteParams: [this, id, tweenId],\n                });\n                this._addDockTween(id, tween, tweenId);\n\n                // change cover\n                cimg.setAttribute(\"src\", params.src);\n                //cimg.style.left = `calc(100% - ${this.theatreChatCover.offsetHeight}px)`\n                cimg.style.width = `${this.theatreChatCover.offsetHeight}px`;\n                cimg.style.opacity = \"0.3\";\n                // push focus to chat-message\n                let chatMessage = document.getElementById(\"chat-message\");\n                chatMessage.focus();\n                // send typing event\n                //this._sendTypingEvent();\n                //this.setUserTyping(game.user.id,this.speakingAs);\n            } else {\n                this.speakingAs = null;\n                // clear cover\n                cimg.removeAttribute(\"src\");\n                cimg.style.opacity = \"0\";\n                // clear typing theatreId data\n                this.removeUserTyping(game.user.id);\n                this.usersTyping[game.user.id].theatreId = null;\n            }\n        } else {\n            let src = params.src;\n            let name = params.name;\n            let optAlign = params.optalign;\n            let cimg = this.getTheatreCoverPortrait();\n            let emotions;\n\n            // determine if to launch with actor saves or default settings\n            if (ev && ev.altKey) {\n                emotions = Theatre.instance._getInitialEmotionSetFromInsertParams(params, true);\n            } else {\n                emotions = Theatre.instance._getInitialEmotionSetFromInsertParams(params);\n            }\n            Logger.debug(\"ACTIVATING AND INJECTING with Emotions: \", emotions);\n\n            if (ev && !ev.shiftKey) {\n                if (game.user.isGM) {\n                    await this.injectLeftPortrait(src, name, id, optAlign, emotions);\n                } else {\n                    await this.injectRightPortrait(src, name, id, optAlign, emotions);\n                }\n            } else {\n                await this.injectRightPortrait(src, name, id, optAlign, emotions);\n            }\n            this.speakingAs = id;\n            KHelpers.addClass(navItem, \"theatre-control-nav-bar-item-speakingas\");\n            TweenMax.to(Theatre.instance.theatreNavBar, 0.4, {\n                scrollTo: { x: navItem.offsetLeft, offsetX: Theatre.instance.theatreNavBar.offsetWidth / 2 },\n            });\n\n            window.setTimeout(() => {\n                insert = this.getInsertById(id);\n                // if our insert hasn't been destroyed\n                if (insert && !!insert.dockContainer && this.speakingAs == id) {\n                    label = this.label;\n                    // add label pulse\n                    insert.label.tint = 0xffffff;\n                    let tweenId = \"nameSpeakingPulse\";\n                    let tween = TweenMax.to(insert.label, 1, {\n                        pixi: { tint: 0xff6400 },\n                        ease: Power0.easeNone,\n                        repeat: -1,\n                        yoyo: true,\n                        onComplete: function (ctx, imgId, tweenId) {\n                            // decrement the rendering accumulator\n                            ctx._removeDockTween(imgId, this, tweenId);\n                            // remove our own reference from the dockContainer tweens\n                        },\n                        onCompleteParams: [this, id, tweenId],\n                    });\n                    this._addDockTween(id, tween, tweenId);\n                }\n            }, 1000);\n\n            // change cover\n            cimg.setAttribute(\"src\", src);\n            //cimg.style.left = `calc(100% - ${this.theatreChatCover.offsetHeight}px)`\n            cimg.style.width = `${this.theatreChatCover.offsetHeight}px`;\n            cimg.style.opacity = \"0.3\";\n            // push focus to chat-message\n            let chatMessage = document.getElementById(\"chat-message\");\n            chatMessage.focus();\n        }\n        // send typing event\n        this._sendTypingEvent();\n        this.setUserTyping(game.user.id, this.speakingAs);\n        // re-render the emote menu (expensive)\n        this.renderEmoteMenu();\n    }\n\n    /**\n     * immediately decays a textbox's contents by shifting them down, and\n     * fading it away\n     *\n     * @params theatreId (String) : The theatreId of the textBox we want to decay.\n     * @params remote (Boolean) : Wither this is being invoked remotely, or locally.\n     */\n    decayTextBoxById(theatreId, remote) {\n        let insert = this.getInsertById(theatreId);\n        let textBox = this._getTextBoxById(theatreId);\n        if (!textBox || !insert) return;\n\n        if (!remote && !this.isActorOwner(game.user.id, theatreId)) {\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n            return;\n        }\n        // clear last speaking if present\n        KHelpers.removeClass(textBox, \"theatre-text-box-lastspeaking\");\n        textBox.style.background = \"\";\n        textBox.style[\"box-shadow\"] = \"\";\n\n        // clear decay Timout if present\n        if (insert.decayTOId) {\n            window.clearTimeout(insert.decayTOId);\n            insert.decayTOId = null;\n        }\n        // kill tweens\n        for (let c of textBox.children) {\n            for (let sc of c.children) TweenMax.killTweensOf(sc);\n            TweenMax.killTweensOf(c);\n        }\n        TweenMax.killTweensOf(textBox);\n\n        // decay\n        TweenMax.to(textBox.children, 0.5, {\n            top: this.theatreBar.offsetHeight / 2,\n            opacity: 0,\n            ease: Power0.easeNone,\n            onComplete: function () {\n                textBox.textContent = \"\";\n            },\n        });\n\n        // Push to socket our event\n        if (!remote) {\n            Theatre.instance._sendSceneEvent(\"decaytext\", { insertid: theatreId });\n        }\n    }\n\n    /**\n     * Applies the player color to the textbox as\n     * a box-shadow, and background highlight.\n     *\n     * @params textBox (HTMLElement) : The textBox to apply the color to.\n     * @params userId (String) : The User's Id.\n     * @params color (String) : The CSS color string to use if available.\n     */\n    applyPlayerColorToTextBox(textBox, userId, color) {\n        //let user = game.users.get(userId);\n        //let userColor = user.color.replace(\"#\",\"\");\n        color = color ? color.replace(\"#\", \"\") : null || \"FFFFFF\";\n\n        // break into radix\n        let red = parseInt(color.substring(0, 2), 16);\n        let green = parseInt(color.substring(2, 4), 16);\n        let blue = parseInt(color.substring(4), 16);\n\n        let darkred = Math.max(red - 50, 0);\n        let darkgreen = Math.max(green - 50, 0);\n        let darkblue = Math.max(blue - 50, 0);\n\n        red = Math.min(red + 75, 255);\n        green = Math.min(green + 75, 255);\n        blue = Math.min(blue + 75, 255);\n\n        Logger.debug(\n            \"color %s : red: %s:%s, green %s:%s, blue %s:%s\",\n            color,\n            red,\n            darkred,\n            green,\n            darkgreen,\n            blue,\n            darkblue,\n        );\n\n        // style specific settings\n        switch (this.settings.theatreStyle) {\n            case \"clearbox\": {\n                textBox.style.cssText += `background: linear-gradient(transparent 0%, rgba(${red},${green},${blue},0.30) 40%, rgba(${red},${green},${blue},0.30) 60%, transparent 100%); box-shadow: 0px 5px 2px 1px rgba(${darkred}, ${darkgreen}, ${darkblue}, 0.30)`;\n                break;\n            }\n            case \"mangabubble\":\n            case \"lightbox\":\n            case \"textbox\":\n            default: {\n                textBox.style.cssText += `background: linear-gradient(transparent 0%, rgba(${red},${green},${blue},0.10) 40%, rgba(${red},${green},${blue},0.10) 60%, transparent 100%); box-shadow: 0px 5px 2px 1px rgba(${darkred}, ${darkgreen}, ${darkblue}, .2)`;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Gets the player 'flash' color that tints the insert as it 'pops.\n     *\n     * @params userId (String) : The User's Id.\n     * @params color (String) : The CSS color string to use if available.\n     *\n     * @return (String) : The CSS color to be used for the color flash.\n     */\n    getPlayerFlashColor(userId, color) {\n        //let user = game.users.get(userId);\n        //let userColor = user.color.replace(\"#\",\"\");\n        color = color ? color.replace(\"#\", \"\") : null || \"FFFFFF\";\n\n        // break into radix\n        let red = parseInt(color.substring(0, 2), 16);\n        let green = parseInt(color.substring(2, 4), 16);\n        let blue = parseInt(color.substring(4), 16);\n\n        // try to preserve ratios?\n        red = Math.min(red + 75, 255);\n        green = Math.min(green + 75, 255);\n        blue = Math.min(blue + 75, 255);\n\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n\n        Logger.debug(`#${red}${green}${blue}`);\n        return `#${red}${green}${blue}`;\n    }\n\n    /**\n     * Apply the font family to the given element\n     *\n     * @params elem (HTMLElement) : The HTMLElement to apply the font family to.\n     * @params fontFamily (String) : The name of the font family to add.\n     *\n     * @private\n     */\n    _applyFontFamily(elem, fontFamily) {\n        elem.style[\"font-family\"] = `\"${fontFamily}\", \"SignikaBold\", \"Palatino Linotype\", serif`;\n        elem.style[\"font-weight\"] = this.fontWeight;\n    }\n\n    /**\n     * Toggle the narrator bar\n     *\n     * @param active (Boolean) : Wither to activate or deactive the narrator bar.\n     * @param remote (Boolean) : Winter this is being invoked remotely, or locally.\n     */\n    toggleNarratorBar(active, remote) {\n        if (active) {\n            // spawn it\n            let narratorBackdrop =\n                Theatre.instance.theatreNarrator.getElementsByClassName(\"theatre-narrator-backdrop\")[0];\n            Logger.debug(\"NarratorBackdrop \", narratorBackdrop, Theatre.instance.theatreNarrator);\n            narratorBackdrop.style.width = \"100%\";\n            Theatre.instance.theatreNarrator.style.opacity = \"1\";\n            Theatre.instance.isNarratorActive = true;\n            // check if a navItem is active, if so, deactive it.\n            // set speakingAs to \"narrator\" note that this will need heavy regression testing\n            // as it'll be plugging into the insert workflow when it's truely not a real insert\n            if (game.user.isGM) {\n                let btnNarrator =\n                    Theatre.instance.theatreControls.getElementsByClassName(\"theatre-icon-narrator\")[0].parentNode;\n                let oldSpeakingItem = Theatre.instance.getNavItemById(Theatre.instance.speakingAs);\n                let oldSpeakingInsert = Theatre.instance.getInsertById(Theatre.instance.speakingAs);\n                let oldSpeakingLabel = Theatre.instance._getLabelFromInsert(oldSpeakingInsert);\n\n                KHelpers.addClass(btnNarrator, \"theatre-control-nav-bar-item-speakingas\");\n                if (oldSpeakingItem) KHelpers.removeClass(oldSpeakingItem, \"theatre-control-nav-bar-item-speakingas\");\n                if (oldSpeakingInsert) {\n                    oldSpeakingInsert.label.tint = 0xffffff;\n                    this._removeDockTween(this.speakingAs, null, \"nameSpeakingPulse\");\n                }\n\n                let textFlyin = Theatre.instance.theatreNarrator.getAttribute(\"textflyin\");\n                let textStanding = Theatre.instance.theatreNarrator.getAttribute(\"textstanding\");\n                let textFont = Theatre.instance.theatreNarrator.getAttribute(\"textfont\");\n                let textSize = Theatre.instance.theatreNarrator.getAttribute(\"textsize\");\n                let textColor = Theatre.instance.theatreNarrator.getAttribute(\"textcolor\");\n\n                Theatre.instance.theatreNarrator.setAttribute(\n                    \"textflyin\",\n                    textFlyin\n                        ? textFlyin\n                        : Theatre.instance.userEmotes[game.user.id]\n                          ? Theatre.instance.userEmotes[game.user.id].textFlyin\n                          : null,\n                );\n                Theatre.instance.theatreNarrator.setAttribute(\n                    \"textstanding\",\n                    textStanding\n                        ? textStanding\n                        : Theatre.instance.userEmotes[game.user.id]\n                          ? Theatre.instance.userEmotes[game.user.id].textStanding\n                          : null,\n                );\n                Theatre.instance.theatreNarrator.setAttribute(\n                    \"textfont\",\n                    textFont\n                        ? textFont\n                        : Theatre.instance.userEmotes[game.user.id]\n                          ? Theatre.instance.userEmotes[game.user.id].textFont\n                          : null,\n                );\n                Theatre.instance.theatreNarrator.setAttribute(\n                    \"textsize\",\n                    textSize\n                        ? textSize\n                        : Theatre.instance.userEmotes[game.user.id]\n                          ? Theatre.instance.userEmotes[game.user.id].textSize\n                          : null,\n                );\n                Theatre.instance.theatreNarrator.setAttribute(\n                    \"textcolor\",\n                    textColor\n                        ? textColor\n                        : Theatre.instance.userEmotes[game.user.id]\n                          ? Theatre.instance.userEmotes[game.user.id].textColor\n                          : null,\n                );\n\n                let cimg = Theatre.instance.getTheatreCoverPortrait();\n                // clear cover\n                cimg.removeAttribute(\"src\");\n                cimg.style.opacity = \"0\";\n                // clear typing theatreId data\n                Theatre.instance.removeUserTyping(game.user.id);\n                Theatre.instance.usersTyping[game.user.id].theatreId = null;\n                // Mark speaking as Narrator\n                Theatre.instance.speakingAs = CONSTANTS.NARRATOR;\n                Theatre.instance.setUserTyping(game.user.id, CONSTANTS.NARRATOR);\n                // push focus to chat-message\n                let chatMessage = document.getElementById(\"chat-message\");\n                chatMessage.focus();\n                // send event to triggier the narrator bar\n                if (!remote) Theatre.instance._sendSceneEvent(\"narrator\", { active: true });\n                // re-render the emote menu (expensive)\n                Theatre.instance.renderEmoteMenu();\n            }\n        } else {\n            // remove it\n            let narratorBackdrop =\n                Theatre.instance.theatreNarrator.getElementsByClassName(\"theatre-narrator-backdrop\")[0];\n            let narratorContent =\n                Theatre.instance.theatreNarrator.getElementsByClassName(\"theatre-narrator-content\")[0];\n            Logger.debug(\"NarratorBackdrop \", narratorBackdrop, Theatre.instance.theatreNarrator);\n            narratorBackdrop.style.width = \"0%\";\n            Theatre.instance.theatreNarrator.style.opacity = \"0\";\n            Theatre.instance.isNarratorActive = false;\n            // kill animations\n            for (let c of narratorContent.children) {\n                for (let sc of c.children) TweenMax.killTweensOf(sc);\n                TweenMax.killTweensOf(c);\n            }\n            for (let c of narratorContent.children) c.parentNode.removeChild(c);\n            TweenMax.killTweensOf(narratorContent);\n            narratorContent.style[\"overflow-y\"] = \"scroll\";\n            narratorContent.style[\"overflow-x\"] = \"hidden\";\n\n            // Logger.debug(\"all tweens\", TweenMax.getAllTweens());\n            narratorContent.textContent = \"\";\n\n            if (game.user.isGM) {\n                let btnNarrator =\n                    Theatre.instance.theatreControls.getElementsByClassName(\"theatre-icon-narrator\")[0].parentNode;\n                KHelpers.removeClass(btnNarrator, \"theatre-control-nav-bar-item-speakingas\");\n                // clear narrator\n                Theatre.instance.speakingAs = null;\n                Theatre.instance.removeUserTyping(game.user.id);\n                Theatre.instance.usersTyping[game.user.id].theatreId = null;\n                // send event to turn off the narrator bar\n                if (!remote) Theatre.instance._sendSceneEvent(\"narrator\", { active: false });\n                // re-render the emote menu (expensive)\n                Theatre.instance.renderEmoteMenu();\n            }\n        }\n    }\n\n    /**\n     * Render the emote menu\n     */\n    renderEmoteMenu() {\n        // each actor may have a different emote set\n        // get actor emote set for currently speaking emote, else use the default set\n        let actorId = Theatre.instance.speakingAs\n            ? Theatre.instance.speakingAs.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\")\n            : null;\n        let insert = Theatre.instance.getInsertById(Theatre.instance.speakingAs);\n        let actor;\n        if (actorId) {\n            actor = game.actors.get(actorId);\n        }\n        let emotes = Theatre.getActorEmotes(actorId);\n        let fonts = Theatre.FONTS;\n        let textFlyin = Theatre.FLYIN_ANIMS;\n        let textStanding = Theatre.STANDING_ANIMS;\n        let sideBar = document.getElementById(\"sidebar\");\n        renderTemplate(\"modules/theatre/templates/emote_menu.html\", {\n            emotes,\n            textFlyin,\n            textStanding,\n            fonts,\n        }).then((template) => {\n            Logger.debug(\"emote window template rendered\");\n            Theatre.instance.theatreEmoteMenu.style.top = `${Theatre.instance.theatreControls.offsetTop - 410}px`;\n            Theatre.instance.theatreEmoteMenu.innerHTML = template;\n\n            let wheelFunc = function (ev) {\n                //Logger.debug(\"wheel on text-box\",ev.currentTarget.scrollTop,ev.deltaY,ev.deltaMode);\n                let pos = ev.deltaY > 0;\n                ev.currentTarget.scrollTop += pos ? 10 : -10;\n                ev.preventDefault();\n                ev.stopPropagation();\n            };\n            let wheelFunc2 = function (ev) {\n                //Logger.debug(\"wheel on text-anim\",ev.currentTarget.parentNode.scrollTop,ev.deltaY,ev.deltaMode);\n                let pos = ev.deltaY > 0;\n                ev.currentTarget.parentNode.scrollTop += pos ? 10 : -10;\n                ev.preventDefault();\n                ev.stopPropagation();\n            };\n\n            // bind handlers for the font/size/color selectors\n            let sizeSelect = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"sizeselect\")[0];\n            let colorSelect = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"colorselect\")[0];\n            let fontSelect = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"fontselect\")[0];\n            //Logger.debug(\"Selectors found: \",sizeSelect,colorSelect,fontSelect);\n\n            // assign font from insert\n            if (insert && insert.textFont) {\n                //if (fonts.includes(insert.textFont)) fontSelect.value = insert.textFont;\n                //else fontSelect.value = fonts[0];\n                fontSelect.value = insert.textFont;\n            } else if (\n                Theatre.instance.userEmotes[game.user.id] &&\n                Theatre.instance.userEmotes[game.user.id].textFont\n            ) {\n                //if (fonts.includes(Theatre.instance.userEmotes[game.user.id].textFont))\n                //fontSelect.value = Theatre.instance.userEmotes[game.user.id].textFont;\n                //else\n                //fontSelect.value = fonts[0];\n                fontSelect.value = Theatre.instance.userEmotes[game.user.id].textFont;\n                if (insert) insert.textFont = fontSelect.value;\n            } else {\n                fontSelect.value = fonts[0];\n            }\n            // assign color from insert\n            if (insert && insert.textColor) {\n                colorSelect.value = insert.textColor;\n            } else if (\n                Theatre.instance.userEmotes[game.user.id] &&\n                Theatre.instance.userEmotes[game.user.id].textColor\n            ) {\n                colorSelect.value = Theatre.instance.userEmotes[game.user.id].textColor;\n                if (insert) insert.textColor = colorSelect.value;\n            }\n            // assgin font size\n            let sizeIcon = document.createElement(\"div\");\n            let sizeValue = 2;\n            if (insert) sizeValue = insert.textSize;\n            else if (Theatre.instance.userEmotes[game.user.id])\n                sizeValue = Theatre.instance.userEmotes[game.user.id].textSize;\n\n            switch (sizeValue) {\n                case 3:\n                    KHelpers.addClass(sizeIcon, \"theatre-icon-fontsize-large\");\n                    break;\n                case 1:\n                    KHelpers.addClass(sizeIcon, \"theatre-icon-fontsize-small\");\n                    break;\n                default:\n                    KHelpers.addClass(sizeIcon, \"theatre-icon-fontsize-medium\");\n                    break;\n            }\n            sizeSelect.appendChild(sizeIcon);\n\n            sizeSelect.addEventListener(\"click\", (ev) => {\n                let insert = Theatre.instance.getInsertById(Theatre.instance.speakingAs);\n                let icon = sizeSelect.children[0];\n                let value = 2;\n                if (insert) value = insert.textSize;\n                else if (Theatre.instance.userEmotes[game.user.id])\n                    value = Theatre.instance.userEmotes[game.user.id].textSize;\n\n                switch (value) {\n                    case 3:\n                        KHelpers.removeClass(icon, \"theatre-icon-fontsize-large\");\n                        KHelpers.addClass(icon, \"theatre-icon-fontsize-medium\");\n                        value = 2;\n                        break;\n                    case 1:\n                        KHelpers.removeClass(icon, \"theatre-icon-fontsize-small\");\n                        KHelpers.addClass(icon, \"theatre-icon-fontsize-large\");\n                        value = 3;\n                        break;\n                    default:\n                        KHelpers.removeClass(icon, \"theatre-icon-fontsize-medium\");\n                        KHelpers.addClass(icon, \"theatre-icon-fontsize-small\");\n                        value = 1;\n                        break;\n                }\n                Theatre.instance.setUserEmote(game.user.id, Theatre.instance.speakingAs, \"textsize\", value);\n            });\n            fontSelect.addEventListener(\"change\", (ev) => {\n                Theatre.instance.setUserEmote(\n                    game.user.id,\n                    Theatre.instance.speakingAs,\n                    \"textfont\",\n                    ev.currentTarget.value,\n                );\n                Theatre.instance.renderEmoteMenu();\n            });\n            colorSelect.addEventListener(\"change\", (ev) => {\n                Theatre.instance.setUserEmote(\n                    game.user.id,\n                    Theatre.instance.speakingAs,\n                    \"textcolor\",\n                    ev.currentTarget.value,\n                );\n            });\n\n            // Apply our language specific fonts to the template\n            // OR apply the font specified by the insert\n            let headers = Theatre.instance.theatreEmoteMenu.getElementsByTagName(\"h2\");\n            let textAnims = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"textanim\");\n            for (let e of headers) Theatre.instance._applyFontFamily(e, Theatre.instance.titleFont);\n            for (let e of textAnims) {\n                let font = fontSelect.value;\n                Theatre.instance._applyFontFamily(e, font);\n                e.addEventListener(\"wheel\", wheelFunc2);\n            }\n\n            // bind click listeners for the textanim elements to animate a preview\n            // hover-off will reset the text content\n            let flyinBox = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"textflyin-box\")[0];\n            flyinBox = flyinBox.getElementsByClassName(\"theatre-container-column\")[0];\n            let standingBox = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"textstanding-box\")[0];\n            standingBox = standingBox.getElementsByClassName(\"theatre-container-column\")[0];\n\n            flyinBox.addEventListener(\"wheel\", wheelFunc);\n            standingBox.addEventListener(\"wheel\", wheelFunc);\n\n            for (let child of flyinBox.children) {\n                // get animation function\n                // bind annonomous click listener\n                child.addEventListener(\"mouseover\", (ev) => {\n                    let text = ev.currentTarget.getAttribute(\"otext\");\n                    let anim = ev.currentTarget.getAttribute(\"name\");\n                    //Logger.debug(\"child text: \",text,ev.currentTarget);\n                    ev.currentTarget.textContent = \"\";\n                    let charSpans = Theatre.splitTextBoxToChars(text, ev.currentTarget);\n                    textFlyin[anim].func.call(this, charSpans, 0.5, 0.05, null);\n                });\n                child.addEventListener(\"mouseout\", (ev) => {\n                    for (let c of ev.currentTarget.children) {\n                        for (let sc of c.children) TweenMax.killTweensOf(sc);\n                        TweenMax.killTweensOf(c);\n                    }\n                    for (let c of ev.currentTarget.children) c.parentNode.removeChild(c);\n                    TweenMax.killTweensOf(child);\n                    child.style[\"overflow-y\"] = \"scroll\";\n                    child.style[\"overflow-x\"] = \"hidden\";\n                    //Logger.debug(\"all tweens\",TweenMax.getAllTweens());\n                    ev.currentTarget.textContent = ev.currentTarget.getAttribute(\"otext\");\n                });\n                // bind text anim type\n                child.addEventListener(\"mouseup\", (ev) => {\n                    if (ev.button == 0) {\n                        if (KHelpers.hasClass(ev.currentTarget, \"textflyin-active\")) {\n                            KHelpers.removeClass(ev.currentTarget, \"textflyin-active\");\n                            Theatre.instance.setUserEmote(game.user.id, Theatre.instance.speakingAs, \"textflyin\", null);\n                        } else {\n                            let lastActives =\n                                Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"textflyin-active\");\n                            for (let la of lastActives) KHelpers.removeClass(la, \"textflyin-active\");\n                            //if (insert || Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n                            KHelpers.addClass(ev.currentTarget, \"textflyin-active\");\n                            Theatre.instance.setUserEmote(\n                                game.user.id,\n                                Theatre.instance.speakingAs,\n                                \"textflyin\",\n                                ev.currentTarget.getAttribute(\"name\"),\n                            );\n                            //}\n                        }\n                        // push focus to chat-message\n                        let chatMessage = document.getElementById(\"chat-message\");\n                        chatMessage.focus();\n                    }\n                });\n                // check if this child is our configured 'text style'\n                let childTextMode = child.getAttribute(\"name\");\n                if (insert) {\n                    let insertTextMode = insert.textFlyin;\n                    if (insertTextMode && insertTextMode == childTextMode) {\n                        KHelpers.addClass(child, \"textflyin-active\");\n                        // scroll to\n                        //TweenMax.to(flyinBox,.4,{scrollTo:{y:child.offsetTop, offsetY:flyinBox.offsetHeight/2}})\n                        flyinBox.scrollTop = child.offsetTop - Math.max(flyinBox.offsetHeight / 2, 0);\n                    }\n                } else if (Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n                    let insertTextMode = Theatre.instance.theatreNarrator.getAttribute(\"textflyin\");\n                    if (insertTextMode && insertTextMode == childTextMode) {\n                        KHelpers.addClass(child, \"textflyin-active\");\n                        // scroll to\n                        //TweenMax.to(flyinBox,.4,{scrollTo:{y:child.offsetTop, offsetY:flyinBox.offsetHeight/2}})\n                        flyinBox.scrollTop = child.offsetTop - Math.max(flyinBox.offsetHeight / 2, 0);\n                    }\n                } else if (\n                    !insert &&\n                    Theatre.instance.userEmotes[game.user.id] &&\n                    child.getAttribute(\"name\") == Theatre.instance.userEmotes[game.user.id].textFlyin\n                ) {\n                    KHelpers.addClass(child, \"textflyin-active\");\n                    // scroll to\n                    //TweenMax.to(flyinBox,.4,{scrollTo:{y:child.offsetTop, offsetY:flyinBox.offsetHeight/2}})\n                    flyinBox.scrollTop = child.offsetTop - Math.max(flyinBox.offsetHeight / 2, 0);\n                }\n            }\n\n            for (let child of standingBox.children) {\n                // get animation function\n                // bind annonomous click listener\n                child.addEventListener(\"mouseover\", (ev) => {\n                    let text = ev.currentTarget.getAttribute(\"otext\");\n                    let anim = ev.currentTarget.getAttribute(\"name\");\n                    //Logger.debug(\"child text: \",text,ev.currentTarget);\n                    ev.currentTarget.textContent = \"\";\n                    let charSpans = Theatre.splitTextBoxToChars(text, ev.currentTarget);\n                    textFlyin[\"typewriter\"].func.call(\n                        this,\n                        charSpans,\n                        0.5,\n                        0.05,\n                        textStanding[anim] ? textStanding[anim].func : null,\n                    );\n                });\n                child.addEventListener(\"mouseout\", (ev) => {\n                    for (let c of ev.currentTarget.children) {\n                        for (let sc of c.children) TweenMax.killTweensOf(sc);\n                        TweenMax.killTweensOf(c);\n                    }\n                    for (let c of ev.currentTarget.children) c.parentNode.removeChild(c);\n                    TweenMax.killTweensOf(child);\n                    child.style[\"overflow-y\"] = \"scroll\";\n                    child.style[\"overflow-x\"] = \"hidden\";\n                    //Logger.debug(\"all tweens\",TweenMax.getAllTweens());\n                    ev.currentTarget.textContent = ev.currentTarget.getAttribute(\"otext\");\n                });\n                // bind text anim type\n                child.addEventListener(\"mouseup\", (ev) => {\n                    if (ev.button == 0) {\n                        if (KHelpers.hasClass(ev.currentTarget, \"textstanding-active\")) {\n                            KHelpers.removeClass(ev.currentTarget, \"textstanding-active\");\n                            Theatre.instance.setUserEmote(\n                                game.user.id,\n                                Theatre.instance.speakingAs,\n                                \"textstanding\",\n                                null,\n                            );\n                        } else {\n                            let lastActives =\n                                Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"textstanding-active\");\n                            for (let la of lastActives) KHelpers.removeClass(la, \"textstanding-active\");\n                            //if (insert || Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n                            KHelpers.addClass(ev.currentTarget, \"textstanding-active\");\n                            Theatre.instance.setUserEmote(\n                                game.user.id,\n                                Theatre.instance.speakingAs,\n                                \"textstanding\",\n                                ev.currentTarget.getAttribute(\"name\"),\n                            );\n                            //}\n                        }\n                        // push focus to chat-message\n                        let chatMessage = document.getElementById(\"chat-message\");\n                        chatMessage.focus();\n                    }\n                });\n                // check if this child is our configured 'text style'\n                let childTextMode = child.getAttribute(\"name\");\n                if (insert) {\n                    let insertTextMode = insert.textStanding;\n                    if (insertTextMode && insertTextMode == childTextMode) {\n                        KHelpers.addClass(child, \"textstanding-active\");\n                        //TweenMax.to(standingBox,.4,{scrollTo:{y:child.offsetTop, offsetY:standingBox.offsetHeight/2}})\n                        standingBox.scrollTop = child.offsetTop - Math.max(standingBox.offsetHeight / 2, 0);\n                    }\n                } else if (Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n                    let insertTextMode = Theatre.instance.theatreNarrator.getAttribute(\"textstanding\");\n                    if (insertTextMode && insertTextMode == childTextMode) {\n                        KHelpers.addClass(child, \"textstanding-active\");\n                        // scroll to\n                        //TweenMax.to(standingBox,.4,{scrollTo:{y:child.offsetTop, offsetY:standingBox.offsetHeight/2}})\n                        standingBox.scrollTop = child.offsetTop - Math.max(standingBox.offsetHeight / 2, 0);\n                    }\n                } else if (\n                    Theatre.instance.userEmotes[game.user.id] &&\n                    child.getAttribute(\"name\") == Theatre.instance.userEmotes[game.user.id].textStanding\n                ) {\n                    KHelpers.addClass(child, \"textstanding-active\");\n                    // scroll to\n                    //TweenMax.to(standingBox,.4,{scrollTo:{y:child.offsetTop, offsetY:standingBox.offsetHeight/2}})\n                    standingBox.scrollTop = child.offsetTop - Math.max(standingBox.offsetHeight / 2, 0);\n                }\n            }\n\n            // If speaking as theatre, minimize away the emote section\n            let emoteBox = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"emote-box\")[0];\n            let emContainer = emoteBox.getElementsByClassName(\"theatre-container-tiles\")[0];\n            if (Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n                emoteBox.style.cssText += \"flex: 0 0 40px\";\n                let emLabel = emoteBox.getElementsByTagName(\"h2\")[0];\n                fontSelect.style[\"max-width\"] = \"unset\";\n                emContainer.style.display = \"none\";\n                emLabel.style.display = \"none\";\n            } else {\n                // configure handles to bind emote selection\n                let emoteBtns = Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"emote\");\n                for (let child of emoteBtns) {\n                    //bind annomous click listener\n                    child.addEventListener(\"mouseup\", (ev) => {\n                        if (ev.button == 0) {\n                            let emName = ev.currentTarget.getAttribute(\"name\");\n                            Logger.debug(\"em name: %s was clicked\", emName);\n                            if (KHelpers.hasClass(ev.currentTarget, \"emote-active\")) {\n                                KHelpers.removeClass(ev.currentTarget, \"emote-active\");\n                                // if speaking set to base\n                                Theatre.instance.setUserEmote(game.user.id, Theatre.instance.speakingAs, \"emote\", null);\n                            } else {\n                                let lastActives =\n                                    Theatre.instance.theatreEmoteMenu.getElementsByClassName(\"emote-active\");\n                                for (let la of lastActives) KHelpers.removeClass(la, \"emote-active\");\n                                KHelpers.addClass(ev.currentTarget, \"emote-active\");\n                                // if speaking, then set our emote!\n                                Theatre.instance.setUserEmote(\n                                    game.user.id,\n                                    Theatre.instance.speakingAs,\n                                    \"emote\",\n                                    emName,\n                                );\n                            }\n                            // push focus to chat-message\n                            let chatMessage = document.getElementById(\"chat-message\");\n                            chatMessage.focus();\n                        }\n                    });\n                    // bind mouseenter Listener\n                    child.addEventListener(\"mouseenter\", (ev) => {\n                        Theatre.instance.configureTheatreToolTip(\n                            Theatre.instance.speakingAs,\n                            ev.currentTarget.getAttribute(\"name\"),\n                        );\n                    });\n                    // check if this child is our configured 'emote'\n                    let childEmote = child.getAttribute(\"name\");\n                    if (insert) {\n                        // if we have an insert we're speaking through, we should get that emote state instead\n                        // if the insert has no emote state, neither should we despite user settings\n                        let insertEmote = insert.emote;\n                        if (insertEmote && insertEmote == childEmote) {\n                            KHelpers.addClass(child, \"emote-active\");\n                            //emContainer.scrollTop = child.offsetTop-Math.max(emContainer.offsetHeight/2,0);\n                        }\n                        // we should 'highlight' emotes that at least have a base insert\n                        if (emotes[childEmote] && emotes[childEmote].insert) KHelpers.addClass(child, \"emote-imgavail\");\n                    }\n                    if (\n                        !insert &&\n                        Theatre.instance.userEmotes[game.user.id] &&\n                        childEmote == Theatre.instance.userEmotes[game.user.id].emote\n                    ) {\n                        KHelpers.addClass(child, \"emote-active\");\n                        //emContainer.scrollTop = child.offsetTop-Math.max(emContainer.offsetHeight/2,0);\n                    }\n                }\n                // bind mouseleave Listener\n                emoteBtns[0].parentNode.addEventListener(\"mouseleave\", (ev) => {\n                    Theatre.instance.theatreToolTip.style.opacity = 0;\n                });\n            }\n        });\n    }\n\n    /**\n     * ============================================================\n     *\n     * Internal Theatre handlers\n     *\n     * ============================================================\n     */\n\n    /**\n     * Handle the window resize eventWindow was resized\n     *\n     * @param ev (Event) : Event that triggered this handler\n     */\n    handleWindowResize(ev) {\n        //Theatre.instance.theatreDock.style.width = `calc(100% - ${document.getElementById(\"sidebar\").offsetWidth+2}px)`;\n        let sideBar = document.getElementById(\"sidebar\");\n        Theatre.instance.theatreBar.style.width = ui.sidebar._collapsed\n            ? \"100%\"\n            : `calc(100% - ${sideBar.offsetWidth + 2}px)`;\n        Theatre.instance.theatreNarrator.style.width = ui.sidebar._collapsed\n            ? \"100%\"\n            : `calc(100% - ${sideBar.offsetWidth + 2}px)`;\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n        if (Theatre.instance._getTextBoxes().length == 2) {\n            let dualWidth = Math.min(Math.floor(Theatre.instance.theatreBar.offsetWidth / 2), 650);\n            primeBar.style.width = dualWidth + \"px\";\n            secondBar.style.width = dualWidth + \"px\";\n            secondBar.style.left = `calc(100% - ${dualWidth}px)`;\n        }\n        // emote menu\n        if (Theatre.instance.theatreEmoteMenu)\n            Theatre.instance.theatreEmoteMenu.style.top = `${Theatre.instance.theatreControls.offsetTop - 410}px`;\n        /*\n\t\tTheatre.instance.theatreToolTip.style.top = `${Theatre.instance.theatreControls.offsetTop-Theatre.instance.theatreToolTip.offsetHeight}px`\n\t\tTheatre.instance.theatreToolTip.style.left = `${sideBar.offsetLeft - Theatre.instance.theatreToolTip.offsetWidth}px`\n\t\t*/\n\n        let app = Theatre.instance.pixiCTX;\n        let dockWidth = Theatre.instance.theatreDock.offsetWidth;\n        let dockHeight = Theatre.instance.theatreDock.offsetHeight;\n        Theatre.instance.theatreDock.setAttribute(\"width\", dockWidth);\n        Theatre.instance.theatreDock.setAttribute(\"height\", dockHeight);\n        app.width = dockWidth;\n        app.height = dockHeight;\n        app.renderer.view.width = dockWidth;\n        app.renderer.view.height = dockHeight;\n        app.renderer.resize(dockWidth, dockHeight);\n        //app.render();\n        if (!Theatre.instance.rendering) Theatre.instance._renderTheatre(performance.now());\n\n        if (Theatre.instance.reorderTOId) window.clearTimeout(Theatre.instance.reorderTOId);\n\n        Theatre.instance.reorderTOId = window.setTimeout(() => {\n            Theatre.reorderInserts();\n            Theatre.instance.reorderTOId = null;\n        }, 250);\n    }\n\n    /**\n     * Store mouse position for our tooltip which will roam\n     *\n     * @param ev (Event) : The Event that triggered the mouse move.\n     */\n    handleEmoteMenuMouseMove(ev) {\n        Theatre.instance.theatreToolTip.style.top = `${\n            (ev.clientY || ev.pageY) - Theatre.instance.theatreToolTip.offsetHeight - 20\n        }px`;\n        Theatre.instance.theatreToolTip.style.left = `${Math.min(\n            (ev.clientX || ev.pageX) - Theatre.instance.theatreToolTip.offsetWidth / 2,\n            Theatre.instance.theatreDock.offsetWidth - Theatre.instance.theatreToolTip.offsetWidth,\n        )}px`;\n    }\n\n    /**\n     * Handle the emote click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnEmoteClick(ev) {\n        Logger.debug(\"emote click\");\n\n        if (KHelpers.hasClass(ev.currentTarget, \"theatre-control-btn-down\")) {\n            Theatre.instance.theatreEmoteMenu.style.display = \"none\";\n            KHelpers.removeClass(ev.currentTarget, \"theatre-control-btn-down\");\n        } else {\n            Theatre.instance.renderEmoteMenu();\n            Theatre.instance.theatreEmoteMenu.style.display = \"flex\";\n            KHelpers.addClass(ev.currentTarget, \"theatre-control-btn-down\");\n        }\n    }\n\n    /**\n     * Handle chat-message focusOut\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleChatMessageFocusOut(ev) {\n        KHelpers.removeClass(Theatre.instance.theatreChatCover, \"theatre-control-chat-cover-ooc\");\n    }\n\n    /**\n     * Handle chat-message keyUp\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleChatMessageKeyUp(ev) {\n        if (\n            !ev.repeat &&\n            //&& Theatre.instance.speakingAs\n            ev.key == \"Control\"\n        )\n            KHelpers.removeClass(Theatre.instance.theatreChatCover, \"theatre-control-chat-cover-ooc\");\n    }\n\n    /**\n     * Handle key-down events in the #chat-message area to fire\n     * \"typing\" events to connected clients\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleChatMessageKeyDown(ev) {\n        const context = KeyboardManager.getKeyboardEventContext(ev);\n        const actions = KeyboardManager._getMatchingActions(context);\n        for (const action of actions) {\n            if (!action.action.includes(CONSTANTS.MODULE_ID)) {\n                continue;\n            }\n            action.onDown.call(context);\n        }\n\n        let now = Date.now();\n\n        if (\n            !ev.repeat &&\n            //&& Theatre.instance.speakingAs\n            ev.key == \"Control\"\n        ) {\n            KHelpers.addClass(Theatre.instance.theatreChatCover, \"theatre-control-chat-cover-ooc\");\n        }\n        if (now - Theatre.instance.lastTyping < 3000) {\n            return;\n        }\n        if (ev.key == \"Enter\" || ev.key == \"Alt\" || ev.key == \"Shift\" || ev.key == \"Control\") {\n            return;\n        }\n        Logger.debug(\"keydown in chat-message\");\n        Theatre.instance.lastTyping = now;\n        Theatre.instance.setUserTyping(game.user.id, Theatre.instance.speakingAs);\n        Theatre.instance._sendTypingEvent();\n    }\n\n    /**\n     * Handle the narrator click\n     *\n     * NOTE: this has issues with multiple GMs since the narrator bar currently works as a\n     * \"shim\" in that it pretends to be a proper insert for text purposes only.\n     *\n     * If another GM activates another charater, it will minimize the bar for a GM that is trying\n     * to use the bar\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnNarratorClick(ev) {\n        Logger.debug(\"narrator click\");\n\n        if (KHelpers.hasClass(ev.currentTarget, \"theatre-control-nav-bar-item-speakingas\")) {\n            Theatre.instance.toggleNarratorBar(false);\n        } else {\n            Theatre.instance.toggleNarratorBar(true);\n        }\n    }\n\n    /**\n     * Handle the CutIn toggle click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnCinemaClick(ev) {\n        Logger.debug(\"cinema click\");\n        Logger.info(game.i18n.localize(\"Theatre.NotYet\"), true);\n        /*\n\t\tif (KHelpers.hasClass(ev.currentTarget,\"theatre-control-small-btn-down\")) {\n\t\t\tKHelpers.removeClass(ev.currentTarget,\"theatre-control-small-btn-down\");\n\t\t} else {\n\t\t\tKHelpers.addClass(ev.currentTarget,\"theatre-control-small-btn-down\");\n\t\t\tLogger.info(game.i18n.localize(\"Theatre.NotYet\"), true);\n\t\t}\n\t\t*/\n    }\n\n    /**\n     * Handle the Delay Emote toggle click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnDelayEmoteClick(ev) {\n        Logger.debug(\"delay emote click\");\n\n        if (Theatre.instance.isDelayEmote) {\n            if (KHelpers.hasClass(ev.currentTarget, \"theatre-control-small-btn-down\")) {\n                KHelpers.removeClass(ev.currentTarget, \"theatre-control-small-btn-down\");\n            }\n            Theatre.instance.isDelayEmote = false;\n        } else {\n            if (!KHelpers.hasClass(ev.currentTarget, \"theatre-control-small-btn-down\")) {\n                KHelpers.addClass(ev.currentTarget, \"theatre-control-small-btn-down\");\n            }\n            Theatre.instance.isDelayEmote = true;\n        }\n        // push focus to chat-message\n        let chatMessage = document.getElementById(\"chat-message\");\n        chatMessage.focus();\n    }\n\n    /**\n     * Handle the Quote toggle click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnQuoteClick(ev) {\n        Logger.debug(\"quote click\");\n\n        if (Theatre.instance.isQuoteAuto) {\n            if (KHelpers.hasClass(ev.currentTarget, \"theatre-control-small-btn-down\"))\n                KHelpers.removeClass(ev.currentTarget, \"theatre-control-small-btn-down\");\n            Theatre.instance.isQuoteAuto = false;\n        } else {\n            if (!KHelpers.hasClass(ev.currentTarget, \"theatre-control-small-btn-down\"))\n                KHelpers.addClass(ev.currentTarget, \"theatre-control-small-btn-down\");\n            Theatre.instance.isQuoteAuto = true;\n        }\n        // push focus to chat-message\n        let chatMessage = document.getElementById(\"chat-message\");\n        chatMessage.focus();\n    }\n\n    /**\n     * Handle the resync click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnResyncClick(ev) {\n        Logger.debug(\"resync click\");\n        if (game.user.isGM) {\n            Theatre.instance._sendResyncRequest(\"players\");\n            Logger.info(game.i18n.localize(\"Theatre.UI.Notification.ResyncGM\"), true);\n        } else {\n            Theatre.instance._sendResyncRequest(\"gm\");\n        }\n    }\n\n    /**\n     * Handle the supression click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleBtnSuppressClick(ev) {\n        Logger.debug(\"suppression click\");\n        if (Theatre.instance.isSuppressed) {\n            if (KHelpers.hasClass(ev.currentTarget, \"theatre-control-btn-down\")) {\n                KHelpers.removeClass(ev.currentTarget, \"theatre-control-btn-down\");\n            }\n        } else {\n            KHelpers.addClass(ev.currentTarget, \"theatre-control-btn-down\");\n        }\n        Theatre.instance.updateSuppression(!Theatre.instance.isSuppressed);\n    }\n\n    updateSuppression(suppress) {\n        Theatre.instance.isSuppressed = suppress;\n\n        let primeBar = document.getElementById(\"theatre-prime-bar\");\n        let secondBar = document.getElementById(\"theatre-second-bar\");\n        if (Theatre.instance.isSuppressed) {\n            let combatActive = game.combats.active;\n            Theatre.instance.isSuppressed = true;\n            //Theatre.instance.theatreGroup.style.opacity = (combatActive ? \"0.05\" : \"0.20\");\n            Theatre.instance.theatreDock.style.opacity = combatActive ? \"0.05\" : \"0.20\";\n            Theatre.instance.theatreBar.style.opacity = combatActive ? \"0.05\" : \"0.20\";\n            Theatre.instance.theatreNarrator.style.opacity = combatActive ? \"0.05\" : \"0.20\";\n\n            primeBar.style[\"pointer-events\"] = \"none\";\n            secondBar.style[\"pointer-events\"] = \"none\";\n        } else {\n            //Theatre.instance.theatreGroup.style.opacity = \"1\";\n            Theatre.instance.theatreDock.style.opacity = \"1\";\n            Theatre.instance.theatreBar.style.opacity = \"1\";\n            Theatre.instance.theatreNarrator.style.opacity = \"1\";\n\n            primeBar.style[\"pointer-events\"] = \"all\";\n            secondBar.style[\"pointer-events\"] = \"all\";\n        }\n\n        // call hooks\n        Hooks.call(\"theatreSuppression\", Theatre.instance.isSuppressed);\n    }\n\n    /**\n     * Handle naveBar Wheel\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavBarWheel(ev) {\n        ev.preventDefault();\n        let pos = ev.deltaY > 0;\n        ev.currentTarget.scrollLeft += pos ? 10 : -10;\n        //ev.currentTarget.scrollLeft -= ev.deltaY/4;\n    }\n\n    /**\n     * Handle textBox Mouse Double Click\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleTextBoxMouseDoubleClick(ev) {\n        Logger.debug(\"MOUSE DOUBLE CLICK\");\n        let id = ev.currentTarget.getAttribute(\"imgId\");\n        Theatre.instance.resetInsertById(id);\n    }\n\n    /**\n     * Handle window mouse up\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleWindowMouseUp(ev) {\n        // finish moving insert\n        Logger.debug(\"WINDOW MOUSE UP\");\n\n        let x = ev.clientX || ev.pageX;\n        let y = ev.clientY || ev.pageY;\n\n        let insert = Theatre.instance.dragPoint.insert;\n        let box = Theatre.instance.dragPoint.box;\n        let ix = Theatre.instance.dragPoint.ix;\n        let iy = Theatre.instance.dragPoint.iy;\n        let ox = Theatre.instance.dragPoint.oleft;\n        let oy = Theatre.instance.dragPoint.otop;\n\n        let dx = x - ix + ox;\n        let dy = y - iy + oy;\n\n        if (dx < box.minleft) dx = box.minleft;\n        if (dx > box.maxleft) dx = box.maxleft;\n        if (dy > box.maxtop) dy = box.maxtop;\n        if (dy < box.mintop) dy = box.mintop;\n\n        Logger.debug(\n            \"WINDOW MOUSE UP FINAL x: \" +\n                x +\n                \" y: \" +\n                y +\n                \" ix: \" +\n                ix +\n                \" iy: \" +\n                iy +\n                \" dx: \" +\n                dx +\n                \" dy: \" +\n                dy +\n                \" ox: \" +\n                ox +\n                \" oy: \" +\n                oy,\n        );\n        //port.style.left = `${dx}px`;\n        //port.style.top = `${dy}px`;\n        //insert.portraitContainer.x = dx;\n        //insert.portraitContainer.y = dy;\n        if (!insert.dockContainer || !insert.portraitContainer) {\n            Logger.error(\"ERROR: insert dockContainer or portrait is INVALID\");\n            window.removeEventListener(\"mouseup\", Theatre.instance.handleWindowMouseUp);\n            return;\n        }\n\n        let tweenId = \"portraitMove\";\n        let tween = TweenMax.to(insert.portraitContainer, 0.5, {\n            pixi: { x: dx, y: dy },\n            ease: Power3.easeOut,\n            onComplete: function (ctx, imgId, tweenId) {\n                // decrement the rendering accumulator\n                ctx._removeDockTween(imgId, this, tweenId);\n                // remove our own reference from the dockContainer tweens\n            },\n            onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n        });\n        Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n\n        // send sceneEvent\n        Theatre.instance._sendSceneEvent(\"positionupdate\", {\n            insertid: insert.imgId,\n            position: { x: dx, y: dy, mirror: insert.mirrored },\n        });\n\n        window.removeEventListener(\"mouseup\", Theatre.instance.handleWindowMouseUp);\n        Theatre.instance.dragPoint = null;\n        // push focus to chat-message\n        let chatMessage = document.getElementById(\"chat-message\");\n        chatMessage.focus();\n    }\n\n    /**\n     * Handle textBox MouseDown\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleTextBoxMouseDown(ev) {\n        Logger.debug(\"MOUSE DOWN \", ev.buttons, ev.button);\n        let id = ev.currentTarget.getAttribute(\"imgId\");\n\n        if (ev.button == 0) {\n            if (!ev.ctrlKey && !ev.shiftKey && !ev.altKey) {\n                // if old dragPoint exists reset the style, and clear any interval that may exist\n                if (!!Theatre.instance.dragPoint && !!Theatre.instance.dragPoint.insert) {\n                    Logger.warn(\"PREXISTING DRAGPOINT!\", false);\n                    //Theatre.instance.dragPoint.port.style.transition = \"top 0.5s ease, left 0.5s ease, transform 0.5s ease\";\n                }\n                // calculate bouding box\n                let boundingBox = {};\n                let insert = Theatre.instance.getInsertById(id);\n\n                // permission check\n                if (!Theatre.instance.isActorOwner(game.user.id, insert.imgId)) {\n                    Logger.info(game.i18n.localize(\"Theatre.UI.Notification.DoNotControl\"), true);\n                    return;\n                }\n\n                // max top is half natural height\n                // min top is zero to prevent it from losing it's flush\n                // max left is half natural width\n                // min left is - half natural width\n                boundingBox[\"maxtop\"] = insert.optAlign == \"top\" ? 0 : insert.portrait.height;\n                boundingBox[\"mintop\"] = insert.portrait.height / 2;\n                boundingBox[\"maxleft\"] = (insert.portrait.width * 3) / 2;\n                boundingBox[\"minleft\"] = 0;\n\n                // original cooords\n                //let portStyles = KHelpers.style(port);\n                let origX = insert.portraitContainer.x;\n                let origY = insert.portraitContainer.y;\n\n                Logger.debug(\n                    \"STORING DRAG POINT\",\n                    ev.clientX || ev.pageX,\n                    ev.clientY || ev.PageY,\n                    boundingBox,\n                    origX,\n                    origY,\n                );\n\n                // change the transition style while we're dragging\n                //port.style.transition = \"top 0.5s ease, left 0.5s ease, transform 0.5s ease\";\n\n                // normal mouse down, start \"drag\" tracking\n                Theatre.instance.dragPoint = {\n                    otop: origY,\n                    oleft: origX,\n                    ix: ev.clientX || ev.pageX,\n                    iy: ev.clientY || ev.pageY,\n                    insert: insert,\n                    box: boundingBox,\n                };\n                // bind listeners\n                window.removeEventListener(\"mouseup\", Theatre.instance.handleWindowMouseUp);\n                window.addEventListener(\"mouseup\", Theatre.instance.handleWindowMouseUp);\n                ev.stopPropagation();\n            }\n        } else if (ev.button == 2) {\n            Theatre.instance.swapTarget = id;\n            ev.stopPropagation();\n        }\n    }\n\n    /**\n     * Handle textBox mouse up\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleTextBoxMouseUp(ev) {\n        Logger.debug(\"MOUSE UP \", ev.buttons, ev.button);\n        let id = ev.currentTarget.getAttribute(\"imgId\");\n        let chatMessage = document.getElementById(\"chat-message\");\n        if (ev.button == 0) {\n            if (ev.ctrlKey) {\n                Theatre.instance.decayTextBoxById(id);\n                ev.stopPropagation();\n            } else if (ev.shiftKey) {\n                Theatre.instance.pushInsertById(id, true);\n                chatMessage.focus();\n                ev.stopPropagation();\n            } else if (ev.altKey) {\n                // activate navitem\n                // activate insert\n                Theatre.instance.activateInsertById(id, ev);\n            }\n        } else if (ev.button == 2) {\n            if (ev.ctrlKey) {\n                Theatre.instance.removeInsertById(id);\n                ev.stopPropagation();\n            } else if (ev.shiftKey) {\n                if (Theatre.instance.swapTarget && Theatre.instance.swapTarget != id) {\n                    Theatre.instance.swapInsertsById(id, Theatre.instance.swapTarget);\n                    Theatre.instance.swapTarget = null;\n                } else {\n                    Theatre.instance.pushInsertById(id, false);\n                }\n                chatMessage.focus();\n                ev.stopPropagation();\n            } else if (ev.altKey) {\n                let actor = game.actors.get(id.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\"));\n                Theatre.addToNavBar(actor);\n            } else if (Theatre.instance.swapTarget) {\n                if (Theatre.instance.swapTarget != id) {\n                    //Theatre.instance.swapInsertsById(id,Theatre.instance.swapTarget);\n                    Theatre.instance.moveInsertById(id, Theatre.instance.swapTarget);\n                    Theatre.instance.swapTarget = null;\n                } else {\n                    Theatre.instance.mirrorInsertById(id);\n                }\n                ev.stopPropagation();\n                chatMessage.focus();\n                Theatre.instance.swapTarget = null;\n            }\n        }\n    }\n\n    /**\n     * Handle a nav item dragstart\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavItemDragStart(ev) {\n        //ev.preventDefault();\n        ev.dataTransfer.clearData(\"text/plain\");\n        ev.dataTransfer.clearData(\"text/html\");\n        ev.dataTransfer.clearData(\"text/uri-list\");\n        ev.dataTransfer.dropEffect = \"move\";\n        ev.dataTransfer.setDragImage(ev.currentTarget, 16, 16);\n        Theatre.instance.dragNavItem = ev.currentTarget;\n    }\n\n    /**\n     * Handle a nav item dragend\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavItemDragEnd(ev) {\n        ev.preventDefault();\n        Theatre.instance.dragNavItem = null;\n    }\n\n    /**\n     * Handle a nav item dragover\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavItemDragOver(ev) {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"move\";\n    }\n\n    /**\n     * Handle a nav item dragdrop\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavItemDragDrop(ev) {\n        ev.preventDefault();\n        KHelpers.insertBefore(Theatre.instance.dragNavItem, ev.currentTarget);\n    }\n\n    /**\n     * Handle mouse up on navItems\n     *\n     * @param ev (Event) : The Event that triggered this handler\n     */\n    handleNavItemMouseUp(ev) {\n        let navItem = ev.currentTarget;\n        let id = ev.currentTarget.getAttribute(\"imgId\");\n        let actorId = id.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let params = Theatre.instance._getInsertParamsFromActorId(actorId);\n        if (!params) {\n            Logger.error(\"ERROR, actorId %s does not exist!\", true, actorId);\n            // remove the nav Item\n            ev.currentTarget.parentNode.removeChild(ev.currentTarget);\n            return;\n        }\n\n        Logger.debug(\"Button UP on nav add?\", ev.button);\n\n        switch (ev.button) {\n            case 0:\n                Theatre.instance.activateInsertById(id, ev);\n                break;\n            case 2:\n                let removed = Theatre.instance.removeInsertById(id);\n                let cimg = Theatre.instance.getTheatreCoverPortrait();\n                if (ev.ctrlKey) {\n                    // unstage the actor\n                    Theatre.instance._removeFromStage(id);\n                    return;\n                }\n                if (!removed) {\n                    let src = params.src;\n                    let name = params.name;\n                    let optAlign = params.optalign;\n                    let emotions;\n\n                    // determine if to launch with actor saves or default settings\n                    if (ev.altKey) emotions = Theatre.instance._getInitialEmotionSetFromInsertParams(params, true);\n                    else emotions = Theatre.instance._getInitialEmotionSetFromInsertParams(params);\n\n                    if (!ev.shiftKey) {\n                        if (game.user.isGM) Theatre.instance.injectLeftPortrait(src, name, id, optAlign, emotions);\n                        else Theatre.instance.injectRightPortrait(src, name, id, optAlign, emotions);\n                    } else Theatre.instance.injectRightPortrait(src, name, id, optAlign, emotions);\n                }\n                break;\n        }\n    }\n\n    /**\n     * ============================================================\n     *\n     * Theatre statics\n     *\n     * ============================================================\n     */\n\n    /**\n     * Reorder theatre inserts in the dockContainer to align with where their\n     * text-box's position is on the bar such that the insert is always over\n     * the corresponding text-box.\n     *\n     */\n    static reorderInserts() {\n        return TheatreHelpers.reorderInserts();\n    }\n\n    /**\n     * Set wither or not to display or hide theatre debug information.\n     *\n     * @params state (Boolean) : Boolean indicating if we should toggle debug on/off\n     */\n    static setDebug(state) {\n        return TheatreHelpers.setDebug(state);\n    }\n\n    /**\n     * Verify the TweenMax ease from the animation syntax shorthand.\n     *\n     * @params str (String) : the ease to verify.\n     */\n    static verifyEase(str) {\n        return TheatreHelpers.verifyEase(str);\n    }\n\n    /**\n     * Return an array of tween params if the syntax is correct,\n     * else return an empty array if any tweens in the syntax\n     * are flag as incorrect.\n     *\n     * @param str (String) : The syntax to verify\n     *\n     * @return (Array[Object]) : The array of verified tween params, or null\n     */\n    static verifyAnimationSyntax(str) {\n        return TheatreHelpers.verifyAnimationSyntax(str);\n    }\n\n    /**\n     * Prepare fonts and return the list of fonts available\n     *\n     * @return (Array[(String)]) : The array of font familys to use.\n     */\n    static getFonts() {\n        return TheatreHelpers.getFonts();\n    }\n\n    static getActorDisplayName(actorId) {\n        return TheatreHelpers.getActorDisplayName(actorId);\n    }\n\n    /**\n     * Get the emotes for the actor by merging\n     * whatever is in the emotes flag with the default base\n     *\n     * @param actorId (String) : The actorId of the actor to get emotes from.\n     * @param disableDefault (Boolean) : Wither or not default emotes are disabled.\n     *                                   in which case, we don't merge the actor\n     *                                   emotes with the default ones.\n     *\n     * @return (Object) : An Object containg the emotes for the requested actorId.\n     */\n    static getActorEmotes(actorId, disableDefault) {\n        return TheatreHelpers.getActorEmotes(actorId, disableDefault);\n    }\n\n    /**\n     * Get the rigging resources for the actor by merging\n     * whater is in the rigging.resources flag with the default base\n     *\n     * @params actorId (String) : The actorId of the actor to get rigging resources\n     *                            from.\n     *\n     * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n     *                             representing the rigging resource map for the specified actorId.\n     */\n    static getActorRiggingResources(actorId) {\n        return TheatreHelpers.getActorRiggingResources(actorId);\n    }\n\n    /**\n     * Default rigging resources\n     *\n     * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n     *                             representing the default rigging resource map.\n     */\n    static getDefaultRiggingResources() {\n        return TheatreHelpers.getDefaultRiggingResources();\n    }\n\n    /**\n     * Get default emotes, immutable\n     *\n     * @return (Object) : An Object, whose properties are the default set\n     *                     emotes.\n     */\n    static getDefaultEmotes() {\n        return TheatreHelpers.getDefaultEmotes();\n    }\n\n    /**\n     * Split to chars, logically group words based on language.\n     *\n     * @param text (String) : The text to split.\n     * @param textBox (HTMLElement) : The textBox the text will be contained in.\n     *\n     * @return (Array[HTMLElement]) : An array of HTMLElements of the split text.\n     */\n    static splitTextBoxToChars(text, textBox) {\n        return TheatreHelpers.splitTextBoxToChars(text, textBox);\n    }\n\n    /**\n     *\n     * ActorSheet Configue Options\n     *\n     * @params ev (Event) : The event that triggered the configuration option.\n     * @params actorSheet (Object ActorSheet) : The ActorSheet Object to spawn a configure\n     *                                          window from.\n     */\n    static onConfigureInsert(ev, actorSheet) {\n        return TheatreHelpers.onConfigureInsert(ev, actorSheet);\n    }\n\n    /**\n     * Add to the nav bar staging area with an actorSheet.\n     *\n     * @params ev (Event) : The event that triggered adding to the NavBar staging area.\n     */\n    static onAddToNavBar(ev, actorSheet, removeLabelSheetHeader) {\n        return TheatreHelpers.onAddToNavBar(ev, actorSheet, removeLabelSheetHeader);\n    }\n\n    static _getTheatreId(actor) {\n        return TheatreHelpers._getTheatreId(actor);\n    }\n\n    /**\n     * Add to the NavBar staging area\n     *\n     * @params actor (Actor) : The actor from which to add to the NavBar staging area.\n     */\n    static addToNavBar(actor) {\n        return TheatreHelpers.addToNavBar(actor);\n    }\n\n    /**\n     * Removes the actor from the nav bar.\n     *\n     * @params actor (Actor) : The actor to remove from the NavBar staging area.\n     */\n    static removeFromNavBar(actor) {\n        return TheatreHelpers.removeFromNavBar(actor);\n    }\n\n    /**\n     * Removes the actor from the stage.\n     *\n     * @params id (string) : The theatreId to remove from the stage.\n     */\n    _removeFromStage(theatreId) {\n        return TheatreHelpers._removeFromStage(theatreId);\n    }\n\n    /**\n     * Returns whether the actor is on the stage.\n     * @params actor (Actor) : The actor.\n     */\n    static isActorStaged(actor) {\n        return TheatreHelpers.isActorStaged(actor);\n    }\n\n    static clearStage() {\n        return TheatreHelpers.clearStage();\n    }\n\n    /**\n     * get the text animation given the name\n     *\n     * @param name (String) : The name of the standing text animation to get.\n     *\n     * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n     *                     representing the animation function and function label.\n     *\n     */\n    static textStandingAnimation(name) {\n        return TheatreHelpers.textStandingAnimation(name);\n    }\n\n    /**\n     * Get text Flyin Animation funciton, still needs to supply\n     * 1. charSpans\n     * 2. delay\n     * 3. speed\n     * 4. standingAnim (optional standin animation)\n     *\n     * @params name (String) : The name of the fly-in animation to use\n     *\n     * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n     *                     representing the animation function and function label.\n     *\n     */\n    static textFlyinAnimation(name) {\n        return TheatreHelpers.textFlyinAnimation(name);\n    }\n}\n","import KHelpers from \"../KHelpers.js\";\nimport { Theatre } from \"../Theatre.js\";\nimport CONSTANTS from \"../constants/constants.js\";\nimport { TheatreHelpers } from \"../theatre-helpers.js\";\n\nconst API = {\n  /**\n   * Reorder theatre inserts in the dockContainer to align with where their\n   * text-box's position is on the bar such that the insert is always over\n   * the corresponding text-box.\n   *\n   */\n  reorderInserts() {\n    return TheatreHelpers.reorderInserts();\n  },\n\n  /**\n   * Set wither or not to display or hide theatre debug information.\n   *\n   * @params state (Boolean) : Boolean indicating if we should toggle debug on/off\n   */\n  setDebug(state) {\n    return TheatreHelpers.setDebug(state);\n  },\n\n  /**\n   * Verify the TweenMax ease from the animation syntax shorthand.\n   *\n   * @params str (String) : the ease to verify.\n   */\n  verifyEase(str) {\n    return TheatreHelpers.verifyEase(str);\n  },\n\n  /**\n   * Return an array of tween params if the syntax is correct,\n   * else return an empty array if any tweens in the syntax\n   * are flag as incorrect.\n   *\n   * @param str (String) : The syntax to verify\n   *\n   * @return (Array[Object]) : The array of verified tween params, or null\n   */\n  verifyAnimationSyntax(str) {\n    return TheatreHelpers.verifyAnimationSyntax(str);\n  },\n\n  /**\n   * Prepare fonts and return the list of fonts available\n   *\n   * @return (Array[(String)]) : The array of font familys to use.\n   */\n  getFonts() {\n    return TheatreHelpers.getFonts();\n  },\n\n  getActorDisplayName(actorId) {\n    return TheatreHelpers.getActorDisplayName(actorId);\n  },\n\n  /**\n   * Get the emotes for the actor by merging\n   * whatever is in the emotes flag with the default base\n   *\n   * @param actorId (String) : The actorId of the actor to get emotes from.\n   * @param disableDefault (Boolean) : Wither or not default emotes are disabled.\n   *                                   in which case, we don't merge the actor\n   *                                   emotes with the default ones.\n   *\n   * @return (Object) : An Object containg the emotes for the requested actorId.\n   */\n  getActorEmotes(actorId, disableDefault) {\n    return TheatreHelpers.getActorEmotes(actorId, disableDefault);\n  },\n\n  /**\n   * Get the rigging resources for the actor by merging\n   * whater is in the rigging.resources flag with the default base\n   *\n   * @params actorId (String) : The actorId of the actor to get rigging resources\n   *                            from.\n   *\n   * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n   *                             representing the rigging resource map for the specified actorId.\n   */\n  getActorRiggingResources(actorId) {\n    return TheatreHelpers.getActorRiggingResources(actorId);\n  },\n\n  /**\n   * Default rigging resources\n   *\n   * @return (Array[(Object)]) : An array of {name: (String), path: (String)} tuples\n   *                             representing the default rigging resource map.\n   */\n  getDefaultRiggingResources() {\n    return TheatreHelpers.getDefaultRiggingResources();\n  },\n\n  /**\n   * Get default emotes, immutable\n   *\n   * @return (Object) : An Object, whose properties are the default set\n   *                     emotes.\n   */\n  getDefaultEmotes() {\n    return TheatreHelpers.getDefaultEmotes();\n  },\n\n  /**\n   * Split to chars, logically group words based on language.\n   *\n   * @param text (String) : The text to split.\n   * @param textBox (HTMLElement) : The textBox the text will be contained in.\n   *\n   * @return (Array[HTMLElement]) : An array of HTMLElements of the split text.\n   */\n  splitTextBoxToChars(text, textBox) {\n    return TheatreHelpers.splitTextBoxToChars(text, textBox);\n  },\n\n  /**\n   *\n   * ActorSheet Configue Options\n   *\n   * @params ev (Event) : The event that triggered the configuration option.\n   * @params actorSheet (Object ActorSheet) : The ActorSheet Object to spawn a configure\n   *                                          window from.\n   */\n  onConfigureInsert(ev, actorSheet) {\n    return TheatreHelpers.onConfigureInsert(ev, actorSheet);\n  },\n\n  /**\n   * Add to the nav bar staging area with an actorSheet.\n   *\n   * @params ev (Event) : The event that triggered adding to the NavBar staging area.\n   */\n  onAddToNavBar(ev, actorSheet, removeLabelSheetHeader) {\n    return TheatreHelpers.onAddToNavBar(ev, actorSheet, removeLabelSheetHeader);\n  },\n\n  /**\n   * Add to the NavBar staging area\n   *\n   * @params actor (Actor) : The actor from which to add to the NavBar staging area.\n   */\n  addToNavBar(actor) {\n    return TheatreHelpers.addToNavBar(actor);\n  },\n\n  /**\n   * Removes the actor from the nav bar.\n   *\n   * @params actor (Actor) : The actor to remove from the NavBar staging area.\n   */\n  removeFromNavBar(actor) {\n    return TheatreHelpers.removeFromNavBar(actor);\n  },\n\n  /**\n   * Returns whether the actor is on the stage.\n   * @params actor (Actor) : The actor.\n   */\n  isActorStaged(actor) {\n    return TheatreHelpers.isActorStaged(actor);\n  },\n\n  clearStage() {\n    return TheatreHelpers.clearStage();\n  },\n\n  /**\n   * get the text animation given the name\n   *\n   * @param name (String) : The name of the standing text animation to get.\n   *\n   * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n   *                     representing the animation function and function label.\n   *\n   */\n  textStandingAnimation(name) {\n    return TheatreHelpers.textStandingAnimation(name);\n  },\n\n  /**\n   * Get text Flyin Animation funciton, still needs to supply\n   * 1. charSpans\n   * 2. delay\n   * 3. speed\n   * 4. standingAnim (optional standin animation)\n   *\n   * @params name (String) : The name of the fly-in animation to use\n   *\n   * @return (Object) : An Object tuple of {func: (Function), label: (String)}\n   *                     representing the animation function and function label.\n   *\n   */\n  textFlyinAnimation(name) {\n    return TheatreHelpers.textFlyinAnimation(name);\n  },\n};\n\nexport default API;\n","import API from \"./scripts/API/api.js\";\nimport KHelpers from \"./scripts/KHelpers.js\";\nimport { Theatre } from \"./scripts/Theatre.js\";\nimport CONSTANTS from \"./scripts/constants/constants.js\";\nimport { registerKeybindings } from \"./scripts/settings.js\";\nimport Logger from \"./scripts/lib/Logger.js\";\n\n/**\n * Concat helper\n */\nHandlebars.registerHelper(\"cat\", function (arg1, arg2, hash) {\n    let res = String(arg1) + String(arg2);\n    return res;\n});\n\n/**\n * Given a string representing a property, resolve it as an actual property,\n * this is meant to be used in subexpressions rather than a final target\n */\nHandlebars.registerHelper(\"resprop\", function (propPath, hash) {\n    let prop = foundry.utils.getProperty(hash.data.root, propPath);\n    return prop;\n});\n\n/**\n * Hook in on Actorsheet's Header buttons + context menus\n */\nHooks.on(\"getActorSheetHeaderButtons\", (app, buttons) => {\n    if (!game.user.isGM && game.settings.get(CONSTANTS.MODULE_ID, \"gmOnly\")) {\n        return;\n    }\n    const removeLabelSheetHeader = game.settings.get(CONSTANTS.MODULE_ID, \"removeLabelSheetHeader\");\n\n    let theatreButtons = [];\n    if (app.object.isOwner) {\n        // only prototype actors\n        if (!app.object.token) {\n            theatreButtons.push({\n                label: removeLabelSheetHeader ? \"\" : \"Theatre.UI.Config.Theatre\",\n                class: \"configure-theatre\",\n                icon: \"fas fa-user-edit\",\n                onclick: (ev) => Theatre.onConfigureInsert(ev, app.object.sheet),\n            });\n        }\n        theatreButtons.push({\n            label: removeLabelSheetHeader\n                ? \"\"\n                : Theatre.isActorStaged(app.object)\n                  ? \"Theatre.UI.Config.RemoveFromStage\"\n                  : \"Theatre.UI.Config.AddToStage\",\n            class: \"add-to-theatre-navbar\",\n            icon: Theatre.isActorStaged(app.object) ? \"fas fa-mask\" : \"fas fa-theater-masks\",\n            onclick: (ev) => {\n                Theatre.onAddToNavBar(ev, app.object.sheet, removeLabelSheetHeader);\n            },\n        });\n    }\n    buttons.unshift(...theatreButtons);\n});\n\n/**\n * Sidebar collapse hook\n */\nHooks.on(\"sidebarCollapse\", function (a, collapsed) {\n    // If theatre isn't even ready, then just no\n    if (!Theatre.instance) {\n        return;\n    }\n    Logger.debug(\"collapse? : \", a, collapsed);\n    let sideBar = document.getElementById(\"sidebar\");\n    let primeBar = document.getElementById(\"theatre-prime-bar\");\n    let secondBar = document.getElementById(\"theatre-second-bar\");\n\n    if (collapsed) {\n        // set width to 100%\n        Theatre.instance.theatreBar.style.width = \"100%\";\n        Theatre.instance.theatreNarrator.style.width = \"100%\";\n    } else {\n        // set width to sidebar offset size\n        Theatre.instance.theatreBar.style.width = `calc(100% - ${sideBar.offsetWidth + 2}px)`;\n        Theatre.instance.theatreNarrator.style.width = `calc(100% - ${sideBar.offsetWidth + 2}px)`;\n        if (Theatre.instance._getTextBoxes().length == 2) {\n            let dualWidth = Math.min(Math.floor(Theatre.instance.theatreBar.offsetWidth / 2), 650);\n            primeBar.style.width = dualWidth + \"px\";\n            secondBar.style.width = dualWidth + \"px\";\n            secondBar.style.left = `calc(100% - ${dualWidth}px)`;\n        }\n    }\n    Theatre.instance.theatreEmoteMenu.style.top = `${Theatre.instance.theatreControls.offsetTop - 410}px`;\n\n    if (Theatre.instance.reorderTOId) {\n        window.clearTimeout(Theatre.instance.reorderTOId);\n    }\n    Theatre.instance.reorderTOId = window.setTimeout(() => {\n        Theatre.reorderInserts();\n        Theatre.instance.reorderTOId = null;\n    }, 250);\n});\n\n/**\n * Handle combat start\n */\nHooks.on(\"createCombat\", function () {\n    // If theatre isn't even ready, then just no\n    if (!Theatre.instance) {\n        return;\n    }\n    if (!!game.combats.active && game.combats.active.round == 0 && Theatre.instance.isSuppressed) {\n        Logger.debug(\"COMBAT CREATED\");\n        // if suppressed, change opacity to 0.05\n        //Theatre.instance.theatreGroup.style.opacity = \"0.05\";\n        Theatre.instance.theatreDock.style.opacity = \"1\";\n        Theatre.instance.theatreBar.style.opacity = \"1\";\n        Theatre.instance.theatreNarrator.style.opacity = \"1\";\n    }\n});\n\n/**\n * Handle combat end\n */\nHooks.on(\"deleteCombat\", function () {\n    // If theatre isn't even ready, then just no\n    if (!Theatre.instance) {\n        return;\n    }\n    if (!game.combats.active && Theatre.instance.isSuppressed) {\n        Logger.debug(\"COMBAT DELETED\");\n        // if suppressed, change opacity to 0.25\n        //Theatre.instance.theatreGroup.style.opacity = \"0.25\";\n        Theatre.instance.theatreDock.style.opacity = \"0.20\";\n        Theatre.instance.theatreBar.style.opacity = \"0.20\";\n        Theatre.instance.theatreNarrator.style.opacity = \"0.20\";\n    }\n});\n\n/**\n * Pre-process chat message to set 'speaking as' to correspond\n * to our 'speaking as'\n */\nHooks.on(\"preCreateChatMessage\", function (chatMessage, data) {\n    let chatData = {\n        speaker: {\n            //actor: null,\n            //The above line is causing issues with chat buttons in v11 in certain systems. Will revert if it causes unforseen issues in other systems.\n            scene: data.speaker?.scene,\n            flags: {},\n        },\n    };\n    Logger.debug(\"preCreateChatMessage\", chatMessage);\n    // If theatre isn't even ready, then just no\n    if (!Theatre.instance) {\n        return;\n    }\n    if (chatMessage.rolls.length) {\n        return;\n    }\n\n    // make the message OOC if needed\n    if ($(theatre.theatreChatCover).hasClass(\"theatre-control-chat-cover-ooc\")) {\n        const user = game.users.get(chatMessage.user.id);\n        chatData.speaker.alias = user.name;\n        if (foundry.utils.isNewerVersion(game.version, 12)) {\n            chatData.style = CONST.CHAT_MESSAGE_STYLES.OOC;\n        } else {\n            chatData.type = CONST.CHAT_MESSAGE_TYPES.OOC;\n        }\n\n        chatMessage.updateSource(chatData);\n        return;\n    }\n\n    if (Theatre.instance.speakingAs && Theatre.instance.usersTyping[chatMessage.user.id]) {\n        let theatreId = Theatre.instance.usersTyping[chatMessage.user.id].theatreId;\n        let insert = Theatre.instance.getInsertById(theatreId);\n        let actorId = theatreId.replace(CONSTANTS.PREFIX_ACTOR_ID, \"\");\n        let actor = game.actors.get(actorId) || null;\n        Logger.debug(\"speakingAs %s\", theatreId);\n\n        if (insert && chatMessage.speaker) {\n            let label = Theatre.instance._getLabelFromInsert(insert);\n            let name = label.text;\n            let theatreColor = Theatre.instance.getPlayerFlashColor(chatMessage.user.id, insert.textColor);\n            Logger.debug(\"name is %s\", name);\n            chatData.speaker.alias = name;\n            //chatData.flags.theatreColor = theatreColor;\n            if (foundry.utils.isNewerVersion(game.version, 12)) {\n                chatData.style = CONST.CHAT_MESSAGE_STYLES.IC;\n            } else {\n                chatData.type = CONST.CHAT_MESSAGE_TYPES.IC;\n            }\n            // if delay emote is active\n            if (Theatre.instance.isDelayEmote && Theatre.instance.delayedSentState == 1) {\n                Logger.debug(\"setting emote now! as %s\", insert.emote);\n                Theatre.instance.delayedSentState = 2;\n                Theatre.instance.setUserEmote(game.user._id, theatreId, \"emote\", insert.emote, false);\n                Theatre.instance.delayedSentState = 0;\n            }\n        } else if (insert) {\n            let label = Theatre.instance._getLabelFromInsert(insert);\n            let name = label.text;\n            let theatreColor = Theatre.instance.getPlayerFlashColor(chatData.user, insert.textColor);\n            chatData.speaker.alias = name;\n            //chatData.flags.theatreColor = theatreColor;\n            if (foundry.utils.isNewerVersion(game.version, 12)) {\n                chatData.style = CONST.CHAT_MESSAGE_STYLES.IC;\n            } else {\n                chatData.type = CONST.CHAT_MESSAGE_TYPES.IC;\n            }\n            // if delay emote is active\n            if (Theatre.instance.isDelayEmote && Theatre.instance.delayedSentState == 1) {\n                Logger.debug(\"setting emote now! as %s\", insert.emote);\n                Theatre.instance.delayedSentState = 2;\n                Theatre.instance.setUserEmote(game.user._id, theatreId, \"emote\", insert.emote, false);\n                Theatre.instance.delayedSentState = 0;\n            }\n        } else if (Theatre.instance.speakingAs == CONSTANTS.NARRATOR) {\n            chatData.speaker.alias = game.i18n.localize(\"Theatre.UI.Chat.Narrator\");\n            if (foundry.utils.isNewerVersion(game.version, 12)) {\n                chatData.style = CONST.CHAT_MESSAGE_STYLES.IC;\n            } else {\n                chatData.type = CONST.CHAT_MESSAGE_TYPES.IC;\n            }\n        }\n\n        if (!chatData.flags) {\n            chatData.flags = {};\n        }\n        chatData.flags[CONSTANTS.MODULE_ID] = { theatreMessage: true };\n    }\n    // alter message data\n    // append chat emote braces\n    Logger.debug(\"speaker? \", chatMessage.speaker);\n    if (\n        Theatre.instance.isQuoteAuto &&\n        chatMessage.speaker &&\n        (chatData.speaker.actor || chatData.speaker.token || chatData.speaker.alias) &&\n        !chatMessage.content.match(/\\<div.*\\>[\\s\\S]*\\<\\/div\\>/)\n    ) {\n        const { quoteType } = Theatre.instance.settings;\n        const openBracket = game.i18n.localize(`Theatre.Text.OpenBracket.${quoteType}`);\n        const closeBracket = game.i18n.localize(`Theatre.Text.CloseBracket.${quoteType}`);\n\n        chatData.content = `${openBracket}${chatMessage.content}${closeBracket}`;\n    }\n    chatMessage.updateSource(chatData);\n});\n\n/**\n * Chat message Binding\n */\nHooks.on(\"createChatMessage\", function (chatEntity, _, userId) {\n    Logger.debug(\"createChatMessage\");\n    let theatreId = null;\n\n    // If theatre isn't even ready, then just no\n    if (!Theatre.instance) {\n        return;\n    }\n    if (Theatre.instance.usersTyping[userId]) {\n        theatreId = Theatre.instance.usersTyping[userId].theatreId;\n        Theatre.instance.removeUserTyping(userId);\n    }\n\n    // slash commands are pass through\n    let chatData = chatEntity;\n    const isOCC = foundry.utils.isNewerVersion(game.version, 12)\n        ? chatData.style === CONST.CHAT_MESSAGE_STYLES.OOC\n        : chatData.type === CONST.CHAT_MESSAGE_TYPES.OOC;\n    if (\n        chatData.content.startsWith(\"<\") || //Bandaid fix so that texts that start with html formatting don't utterly break it\n        chatData.content.startsWith(\"/\") ||\n        chatData.rolls.length ||\n        chatData.emote ||\n        isOCC ||\n        //|| Object.keys(chatData.speaker).length == 0\n        chatData.content.match(/@[a-zA-Z0-9]+\\[[a-zA-Z0-9]+\\]/) ||\n        chatData.content.match(/\\<div.*\\>[\\s\\S]*\\<\\/div\\>/)\n    ) {\n        return;\n    }\n    let textBox = Theatre.instance.getTextBoxById(theatreId);\n    let insert = Theatre.instance.getInsertById(theatreId);\n    let charSpans = [];\n    let textContent = chatData.content;\n\n    // replace newlines\n    textContent = textContent.replace(/<br(| \\/)>/g, \"\\n\");\n    // convert all html specials to plaintext\n    let txtTemp = document.createElement(\"hiddentext\");\n    txtTemp.innerHTML = textContent;\n    textContent = txtTemp.textContent;\n    if (textBox) {\n        // kill all tweens\n        for (let c of textBox.children) {\n            for (let sc of c.children) TweenMax.killTweensOf(sc);\n            TweenMax.killTweensOf(c);\n        }\n        for (let c of textBox.children) c.parentNode.removeChild(c);\n        TweenMax.killTweensOf(textBox);\n        textBox.style[\"overflow-y\"] = \"scroll\";\n        textBox.style[\"overflow-x\"] = \"hidden\";\n\n        // Logger.debug(\"all tweens\", TweenMax.getAllTweens());\n        textBox.textContent = \"\";\n\n        if (insert) {\n            // Highlight the most recent speaker's textBox\n            let lastSpeaking = Theatre.instance.theatreBar.getElementsByClassName(\"theatre-text-box-lastspeaking\");\n            if (lastSpeaking[0]) {\n                lastSpeaking[0].style.background = \"\";\n                lastSpeaking[0].style[\"box-shadow\"] = \"\";\n                KHelpers.removeClass(lastSpeaking[0], \"theatre-text-box-lastspeaking\");\n            }\n            KHelpers.addClass(textBox, \"theatre-text-box-lastspeaking\");\n            Theatre.instance.applyPlayerColorToTextBox(textBox, userId, insert.textColor);\n            // Pump up the speaker's render order\n            for (let dockInsert of Theatre.instance.portraitDocks) dockInsert.renderOrder = dockInsert.order;\n            insert.renderOrder = 999999;\n            Theatre.instance.portraitDocks.sort((a, b) => {\n                return a.renderOrder - b.renderOrder;\n            });\n            // Pop our insert a little\n            let tweenId = \"portraitPop\";\n            let tween = TweenMax.to(insert.portraitContainer, 0.25, {\n                pixi: { scaleX: insert.mirrored ? -1.05 : 1.05, scaleY: 1.05 },\n                ease: Power3.easeOut,\n                repeat: 1,\n                yoyo: true,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    let insert = Theatre.instance.getInsertById(imgId);\n                    if (insert) {\n                        this.targets()[0].scale.x = insert.mirrored ? -1 : 1;\n                        this.targets()[0].scale.y = 1;\n                    }\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n            // Color flash\n            tweenId = \"portraitFlash\";\n            tween = TweenMax.to(insert.portrait, 0.25, {\n                //pixi:{tint: 0xAAEDFF},\n                pixi: {\n                    tint: Theatre.instance.getPlayerFlashColor(userId, insert.textColor),\n                },\n                ease: Power3.easeOut,\n                repeat: 1,\n                yoyo: true,\n                onComplete: function (ctx, imgId, tweenId) {\n                    // decrement the rendering accumulator\n                    this.targets()[0].tint = 0xffffff;\n                    ctx._removeDockTween(imgId, this, tweenId);\n                    // remove our own reference from the dockContainer tweens\n                },\n                onCompleteParams: [Theatre.instance, insert.imgId, tweenId],\n            });\n            Theatre.instance._addDockTween(insert.imgId, tween, tweenId);\n        }\n\n        let insertFlyinMode = \"typewriter\";\n        let insertStandingMode = null;\n        let insertFontType = null;\n        let insertFontSize = null;\n        let insertFontColor = null;\n        if (insert) {\n            insertFlyinMode = insert.textFlyin;\n            insertStandingMode = insert.textStanding;\n            insertFontType = insert.textFont;\n            insertFontSize = Number(insert.textSize);\n            insertFontColor = insert.textColor;\n        } else if (theatreId == CONSTANTS.NARRATOR) {\n            insertFlyinMode = Theatre.instance.theatreNarrator.getAttribute(\"textflyin\");\n            insertStandingMode = Theatre.instance.theatreNarrator.getAttribute(\"textstanding\");\n            insertFontType = Theatre.instance.theatreNarrator.getAttribute(\"textfont\");\n            insertFontSize = Number(Theatre.instance.theatreNarrator.getAttribute(\"textsize\"));\n            insertFontColor = Theatre.instance.theatreNarrator.getAttribute(\"textcolor\");\n        }\n        let fontSize = Number(textBox.getAttribute(\"osize\") || 28);\n        // Logger.debug(\"font PRE(%s): \",insertFontSize,fontSize)\n        switch (insertFontSize) {\n            case 3:\n                fontSize *= 1.5;\n                break;\n            case 1:\n                fontSize *= 0.5;\n                break;\n            default:\n                break;\n        }\n        Logger.debug(\"font size is (%s): \", insertFontSize, fontSize);\n        // If polyglot is active, and message contains its flag (e.g. not an emote), begin processing\n        if (typeof polyglot !== \"undefined\" && typeof chatData.flags.polyglot !== \"undefined\") {\n            // Get current language being processed\n            const lang = chatData.flags.polyglot.language;\n            // Fetch the languages known by current user\n            const langs = game.polyglot.knownLanguages;\n            const understood = langs.has(lang) || game.user.isGM || game.view === \"stream\";\n            if (!understood) {\n                // If not understood, scramble the text\n                const fontStyle = game.polyglot._getFontStyle(lang);\n                fontSize *= Math.floor(Number(fontStyle.slice(0, 3)) / 100);\n                insertFontType = fontStyle.slice(5);\n                textContent = game.polyglot.scrambleString(textContent, chatData._id, lang);\n            }\n        }\n        Theatre.instance._applyFontFamily(textBox, insertFontType || Theatre.instance.textFont);\n        //textBox.style[\"font-family\"] = insertFontType || Theatre.instance.textFont;\n        textBox.style.color = insertFontColor || \"white\";\n        textBox.style[\"font-size\"] = `${fontSize}px`;\n        textBox.scrollTop = 0;\n\n        charSpans = Theatre.splitTextBoxToChars(textContent, textBox);\n\n        Logger.debug(\"animating text: \" + textContent);\n\n        Theatre.textFlyinAnimation(insertFlyinMode || \"typewriter\").call(\n            this,\n            charSpans,\n            0.5,\n            0.05,\n            Theatre.textStandingAnimation(insertStandingMode),\n        );\n\n        // auto decay?\n        if (insert && insert.decayTOId) {\n            window.clearTimeout(insert.decayTOId);\n        }\n        if (insert && Theatre.instance.settings.autoDecay) {\n            insert.decayTOId = window.setTimeout(\n                (imgId) => {\n                    let insert = Theatre.instance.getInsertById(imgId);\n                    if (insert) Theatre.instance.decayTextBoxById(imgId, true);\n                },\n                Math.max(Theatre.instance.settings.decayRate * charSpans.length, Theatre.instance.settings.decayMin),\n                insert.imgId,\n            );\n        }\n    }\n});\n\nHooks.on(\"renderChatMessage\", function (ChatMessage, html, data) {\n    if (Theatre.instance.settings.ignoreMessagesToChat && ChatMessage.flags?.[CONSTANTS.MODULE_ID]?.theatreMessage) {\n        html[0].style.display = \"none\";\n    }\n    return true;\n});\n\nHooks.on(\"renderChatLog\", function (app, html, data) {\n    if (data.cssId === \"chat-popout\") {\n        return;\n    }\n    theatre.initialize();\n    if (!window.Theatre) {\n        window.Theatre = Theatre;\n        window.theatre = theatre;\n    }\n\n    // window may not be ready?\n    // Logger.log(\"%cTheatre Inserts\", \"font-weight: bold; font-size: 30px; font-style: italic; color: black;\");\n    // NOTE: Closed alpha/beta is currently all rights reserved!\n    // Logger.log(\"%c-- Theatre is Powered by Free Open Source GPLv3 Software --\", \"font-weight: bold; font-size: 12\");\n});\n\n/**\n * Add to stage button on ActorDirectory Sidebar\n */\nHooks.on(\"getActorDirectoryEntryContext\", async (html, options) => {\n    if (!game.user.isGM && game.settings.get(CONSTANTS.MODULE_ID, \"gmOnly\")) {\n        return;\n    }\n    const getActorData = (target) => {\n        return game.actors.get(target.data(\"documentId\"));\n    };\n\n    options.splice(\n        3,\n        0,\n        {\n            name: \"Add to Stage\",\n            condition: (target) => !Theatre.isActorStaged(getActorData(target)),\n            icon: '<i class=\"fas fa-theater-masks\"></i>',\n            callback: (target) => Theatre.addToNavBar(getActorData(target)),\n        },\n        {\n            name: \"Remove from Stage\",\n            condition: (target) => Theatre.isActorStaged(getActorData(target)),\n            icon: '<i class=\"fas fa-theater-masks\"></i>',\n            callback: (target) => Theatre.removeFromNavBar(getActorData(target)),\n        },\n    );\n});\n\n// Fixed global singleton/global object\nlet theatre = null;\nHooks.once(\"setup\", () => {\n    theatre = new Theatre();\n\n    game.modules.get(CONSTANTS.MODULE_ID).api = API;\n\n    // module keybinds\n    registerKeybindings();\n});\n\n/**\n * Hide player list (and macro hotbar) when stage is active (and not suppressed)\n */\nHooks.on(\"theatreDockActive\", (insertCount) => {\n    if (!insertCount) {\n        return;\n    }\n    // The \"MyTab\" module inserts another element with id \"pause\". Use querySelectorAll to make sure we catch both\n    document.querySelectorAll(\"#pause\").forEach((ele) => KHelpers.addClass(ele, \"theatre-centered\"));\n\n    if (!game.settings.get(CONSTANTS.MODULE_ID, \"autoHideBottom\")) {\n        return;\n    }\n    if (!theatre.isSuppressed) {\n        $(\"#players\").addClass(\"theatre-invisible\");\n        $(\"#hotbar\").addClass(\"theatre-invisible\");\n    }\n});\n\n/**\n * If Argon is active, wrap CombatHudCanvasElement#toggleMacroPlayers to prevent playesr list and macro hotbar from being shown\n */\nHooks.once(\"ready\", () => {\n    // Do anything once the module is ready\n    if (!game.modules.get(\"lib-wrapper\")?.active && game.user?.isGM) {\n        let word = \"install and activate\";\n        if (game.modules.get(\"lib-wrapper\")) word = \"activate\";\n        throw Logger.error(`Requires the 'libWrapper' module. Please ${word} it.`);\n    }\n    if (!game.modules.get(\"socketlib\")?.active && game.user?.isGM) {\n        let word = \"install and activate\";\n        if (game.modules.get(\"socketlib\")) word = \"activate\";\n        throw Logger.error(`Requires the 'socketlib' module. Please ${word} it.`);\n    }\n    if (!game.settings.get(CONSTANTS.MODULE_ID, \"autoHideBottom\")) {\n        return;\n    }\n    if (!game.modules.get(\"enhancedcombathud\")?.active) {\n        return;\n    }\n    libWrapper.register(\n        CONSTANTS.MODULE_ID,\n        \"CombatHudCanvasElement.prototype.toggleMacroPlayers\",\n        (wrapped, togg) => {\n            if (togg && theatre?.dockActive) {\n                return;\n            }\n            return wrapped(togg);\n        },\n        \"MIXED\",\n    );\n});\n\nHooks.once(\"devModeReady\", ({ registerPackageDebugFlag }) => {\n    registerPackageDebugFlag(CONSTANTS.MODULE_ID);\n});\n\n/**\n * Hide/show macro hotbar when stage is suppressed\n */\nHooks.on(\"theatreSuppression\", (suppressed) => {\n    if (!game.settings.get(CONSTANTS.MODULE_ID, \"autoHideBottom\")) {\n        return;\n    }\n    if (!game.settings.get(CONSTANTS.MODULE_ID, \"suppressMacroHotbar\")) {\n        return;\n    }\n    if (!theatre.dockActive) {\n        return;\n    }\n    if (suppressed) {\n        $(\"#players\").removeClass(\"theatre-invisible\");\n        $(\"#hotbar\").removeClass(\"theatre-invisible\");\n    } else {\n        $(\"#players\").addClass(\"theatre-invisible\");\n        $(\"#hotbar\").addClass(\"theatre-invisible\");\n    }\n});\n\nHooks.on(\"renderPause\", () => {\n    if (!theatre?.dockActive) {\n        return;\n    }\n    // The \"MyTab\" module inserts another element with id \"pause\". Use querySelectorAll to make sure we catch both\n    document.querySelectorAll(\"#pause\").forEach((ele) => KHelpers.addClass(ele, \"theatre-centered\"));\n});\n\n/**\n * If an actor changes, update the stage accordingly\n */\nHooks.on(\"updateActor\", (actor, data) => {\n    const insert = Theatre.instance.getInsertById(`theatre-${actor.id}`);\n    if (!insert) {\n        return;\n    }\n    insert.label.text = Theatre.getActorDisplayName(actor.id);\n    Theatre.instance._renderTheatre(performance.now());\n});\n\nHooks.on(\"getSceneControlButtons\", (controls) => {\n    // Use CONSTANTS.MODULE_ID, since CONSTANTS.MODULE_ID may not be available yet\n    if (!game.user.isGM && game.settings.get(CONSTANTS.MODULE_ID, \"gmOnly\")) {\n        const suppressTheatreTool = {\n            name: \"suppressTheatre\",\n            title: \"Theatre.UI.Title.SuppressTheatre\",\n            icon: \"fas fa-theater-masks\",\n            toggle: true,\n            active: false,\n            onClick: (toggle) => {\n                Theatre.instance.updateSuppression(toggle); // TODO Suppress theatre\n            },\n            visible: true,\n        };\n        const tokenControls = controls.find((group) => group.name === \"token\").tools;\n        tokenControls.push(suppressTheatreTool);\n    }\n});\n"],"names":["KHelpers","event","name","imgId","tweenId","idx","insert","canvas"],"mappings":"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"}