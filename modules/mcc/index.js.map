{"version":3,"file":"index.js","sources":["node_modules/@typhonjs-fvtt/runtime/_dist/svelte/helper/index.js","src/store/statusData.js","src/controller/SpreadsheetController.js","node_modules/svelte/internal/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","node_modules/svelte/store/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/index.js","node_modules/svelte/easing/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/math/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/constants.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/convertRelative.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/Centered.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionChangeSet.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionStateAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/StyleCache.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/TransformData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/AdapterValidators.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/BasicBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/TransformBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/Transforms.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/animate/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/Position.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/ApplicationState.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/GetSvelteData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/loadSvelteConfig.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/SvelteReactive.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/cssVariables.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/index.js","node_modules/svelte/transition/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/AppShellContextInternal.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSHeaderButton.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationHeader.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSFocusWrap.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ResizableHandle.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ApplicationShell.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/action/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/store/index.js","src/store/mccSessionStorage.js","src/store/createAccessorStore.js","src/store/filterActive.js","src/store/filterStatuses.js","src/store/sortByHeader.js","src/store/spreadsheetStore.js","src/view/init/Loading.svelte","src/view/init/Error.svelte","src/view/table/Reminder.svelte","node_modules/chart.js/dist/chunks/helpers.segment.mjs","node_modules/chart.js/dist/chart.mjs","node_modules/chart.js/auto/auto.mjs","src/view/pie/PieChartLegend.svelte","src/view/pie/PieChart.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/internal/cssVariables.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/internal/FoundryStyles.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/button/TJSIconButton.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/button/TJSToggleIconButton.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/internal/FVTTVersion.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/prosemirror/plugins/index.js","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/input/TJSInputText.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/select/TJSSelect.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/menu/context/TJSContextMenuImpl.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/index.js","src/view/table/Controls.svelte","src/view/table/Heading.svelte","src/view/table/Header.svelte","node_modules/svelte/animate/index.mjs","node_modules/@typhonjs-fvtt/svelte-standard/_dist/application/TJSContextMenu.js","src/view/table/Rows.svelte","src/view/table/Footer.svelte","src/view/table/Table.svelte","src/view/ModuleCompatibilityCheckerShell.svelte","src/view/ModuleCompatibilityChecker.js","src/view/external/ModuleManagementButton.svelte","src/view/external/PatreonButton.svelte","src/index.js"],"sourcesContent":["/**\n * A helper to create a set of radio checkbox input elements in a named set.\n * The provided keys are the possible radio values while the provided values are human readable labels.\n *\n * @param {string} name         The radio checkbox field name\n *\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options      Options which customize the radio boxes creation\n *\n * @param {string} options.checked    Which key is currently checked?\n *\n * @param {boolean} options.localize  Pass each label through string localization?\n *\n * @returns {string} HTML for radio boxes.\n *\n * @example <caption>The provided input data</caption>\n * let groupName = \"importantChoice\";\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\n * let chosen = \"a\";\n *\n * @example <caption>The template HTML structure</caption>\n * <div class=\"form-group\">\n *   <label>Radio Group Label</label>\n *   <div class=\"form-fields\">\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\n *   </div>\n * </div>\n */\nfunction radioBoxes(name, choices, options)\n{\n   const checked = options['checked'] || null;\n\n   const localize = options['localize'] || false;\n\n   let html = '';\n\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\n   {\n      if (localize) { label = globalThis.game.i18n.localize(label); }\n      const isChecked = checked === key;\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${isChecked ? \"checked\" : \"\"}> ${label}</label>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\n * an example of usage see {@link TJSDocumentOwnership}.\n *\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\n * The provided keys are the option values while the provided values are human-readable labels.\n * This helper supports both single-select as well as multi-select input fields.\n *\n * @param {object} choices                     A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options                     Helper options\n *\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\n *\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\n *\n * @param {string} [options.blank]             Add a blank option as the first option with this label\n *\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\n *\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\n *\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\n *                                             instead of vice-versa\n *\n * @returns {string} The <options> HTML element(s).\n *\n * @example <caption>The provided input data</caption>\n * let choices = {a: 'Choice A', b: 'Choice B'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices { selected: value, localize: true })}\n * </select>\n *\n * @example <caption>The resulting HTML</caption>\n * <select name=\"importantChoice\">\n *   <option value=\"a\" selected>Choice A</option>\n *   <option value=\"b\">Choice B</option>\n * </select>\n *\n * @example <caption>Using inverted</caption>\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n */\nfunction selectOptions(choices, options)\n{\n   const { localize = false, blank = null, sort = false, nameAttr, labelAttr, inverted } = options;\n   let { selected = null } = options;\n\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\n\n   // Prepare the choices as an array of objects\n   const selectChoices = [];\n\n   if (choices instanceof Array)\n   {\n      for (const choice of choices)\n      {\n         const name = String(choice[nameAttr]);\n         let label = choice[labelAttr];\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n   else\n   {\n      for (const choice of Object.entries(choices))\n      {\n         const [key, value] = inverted ? choice.reverse() : choice;\n         const name = String(nameAttr ? value[nameAttr] : key);\n         let label = labelAttr ? value[labelAttr] : value;\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n\n   // Sort the array of options\n   if (sort) { selectChoices.sort((a, b) => a.label.localeCompare(b.label)); }\n\n   // Prepend a blank option\n   if (blank !== null)\n   {\n      const label = localize ? globalThis.game.i18n.localize(blank) : blank;\n      selectChoices.unshift({ name: '', label });\n   }\n\n   // Create the HTML\n   let html = '';\n   for (const option of selectChoices)\n   {\n      const label = globalThis.Handlebars.escapeExpression(option.label);\n      const isSelected = selected.includes(option.name);\n      html += `<option value=\"${option.name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = typeof data !== 'object' ? globalThis.game.i18n.localize(stringId) :\n    globalThis.game.i18n.format(stringId, data);\n\n   return result !== void 0 ? result : '';\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n/**\n * @typedef {{hsl: number[], readonly explanation: string}} StatusesEntry\n * @type {{A: StatusesEntry, B: StatusesEntry, U: StatusesEntry, G: StatusesEntry, X: StatusesEntry, N: StatusesEntry, O: StatusesEntry, C: StatusesEntry}}\n */\nexport const statusData = {\n\tX: {\n\t\thsl: [0, 100, 60],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.x\");\n\t\t},\n\t},\n\tO: {\n\t\thsl: [45, 90, 60],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.o\");\n\t\t},\n\t},\n\tB: {\n\t\thsl: [30, 90, 40],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.b\");\n\t\t},\n\t},\n\tG: {\n\t\thsl: [120, 40, 50],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.g\");\n\t\t},\n\t},\n\tN: {\n\t\thsl: [200, 60, 50],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.n\");\n\t\t},\n\t},\n\tA: {\n\t\thsl: [0, 0, 50],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.a\");\n\t\t},\n\t},\n\tU: {\n\t\thsl: [0, 0, 100],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.u\");\n\t\t},\n\t},\n\tC: {\n\t\thsl: [175, 75, 50],\n\t\tget explanation() {\n\t\t\treturn localize(\"mcc.statuses.c\");\n\t\t}\n\t}\n};\n","import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\nimport { statusData } from \"../store/statusData.js\";\n\nconst WORKER_URL = \"https://mcc2.arcanist.workers.dev\";\n\n/**\n * @typedef {object} RowData\n * @property {string} title - The title of the module\n * @property {string} type - The type of the module\n * @property {string} id - The ID of the module\n * @property {string} author - The author of the module\n * @property {string} version - The verified compatible version of the module\n * @property {keyof statusData} status - The status of the module\n * @property {string} notes - Any notes about the module\n *\n * @typedef {string[]} SpreadsheetRow\n * @typedef {SpreadsheetRow[]} Spreadsheet\n */\n\nexport default class SpreadsheetController {\n\t/**\n\t * @type {string} The status of the spreadsheet\n\t */\n\tstatic spreadsheetStatus;\n\n\t/**\n\t * @type {string} The ID of the spreadsheet\n\t */\n\tstatic spreadsheetID;\n\n\t/**\n\t * Get the core versions that have spreadsheets\n\t * @returns {Promise<string[]>} The versions available\n\t */\n\tstatic async getVersions() {\n\t\treturn await fetchJsonWithTimeout(`${WORKER_URL}/api/versions`);\n\t}\n\n\t/**\n\t * Get the rows of the spreadsheet\n\t * @param {string} version - The Foundry VTT core version of the spreadsheet to get\n\t * @returns {Promise<RowData[]>} The rows of the spreadsheet\n\t */\n\tstatic async getRows(version) {\n\t\tconst spreadsheet = await this.getSpreadsheet(version);\n\t\tthis.spreadsheetStatus = spreadsheet.status.trim();\n\t\tconst modules = this.getModuleList();\n\t\tconst rows = modules.map(module => this.lookupCompatibility(spreadsheet, module, version));\n\t\treturn rows;\n\t}\n\n\t/**\n\t * Get the spreadsheet\n\t * @param {string} version - The Foundry VTT core version of the spreadsheet to get\n\t * @returns {Promise<Spreadsheet>} The spreadsheet\n\t */\n\tstatic async getSpreadsheet(version) {\n\t\tconst response = await fetchWithTimeout(`${WORKER_URL}/?version=${version}`);\n\t\tthis.spreadsheetID = response.headers.get(\"X-Spreadsheet-ID\");\n\t\treturn await response.json();\n\t}\n\n\t/**\n\t * Get the list of modules\n\t * @returns {ModuleData[]} The list of installed modules and the current game system\n\t */\n\tstatic getModuleList() {\n\t\treturn [game.system, ...game.modules.values()];\n\t}\n\n\t/**\n\t * Lookup the compatibility of a module in the spreadsheet\n\t * @param {Spreadsheet} spreadsheet.data - The spreadsheet\n\t * @param {ModuleData} module - The module to lookup\n\t * @param {string} version - The Foundry VTT core version of the spreadsheet\n\t * @returns {RowData} The row of compatibility data\n\t */\n\tstatic lookupCompatibility(spreadsheet, module, version) {\n\t\t// Get installed data\n\t\tconst {\n\t\t\ttitle,\n\t\t\ttype = \"module\",\n\t\t\tauthors: [{ name: authorName = null } = {}],\n\t\t\tcompatibleCoreVersion,\n\t\t\tcompatibility: { verified = null } = {},\n\t\t} = module.data;\n\t\tconst installed = {\n\t\t\ttitle: title ?? localize(\"mcc.untitled\"),\n\t\t\ttype,\n\t\t\tid: module.id,\n\t\t\tauthor: authorName ?? module.data.author ?? localize(\"mcc.unknownAuthor\"),\n\t\t\tversion: verified ?? compatibleCoreVersion ?? \"?\",\n\t\t\tstatus: \"U\",\n\t\t\tnotes: \"\",\n\t\t\tofficial: false,\n\t\t};\n\n\t\t// Get spreadsheet data\n\t\tconst data = spreadsheet.data.find(m => m.id === (module.id ?? module.name)) ?? installed;\n\n\t\t// Merge data\n\t\tfor (const property of [\"title\", \"type\", \"id\", \"author\", \"version\", \"status\", \"notes\"]) {\n\t\t\t// Use the latest of the version numbers\n\t\t\tif (property === \"version\") {\n\t\t\t\tdata.version = isNewerVersion(data.version, installed.version) ? data.version : installed.version;\n\t\t\t}\n\t\t\t// Use the installed data for the title, author, or if there is no spreadsheet data for this property\n\t\t\tif ([\"title\", \"author\"].includes(property) || data[property] === undefined) {\n\t\t\t\tdata[property] = installed[property];\n\t\t\t}\n\t\t}\n\n\t\t// Convert to upper case\n\t\tif (typeof data.status === \"string\") {\n\t\t\tdata.status = data.status.toUpperCase();\n\t\t}\n\n\t\t// No status is equivalent to \"Unknown\"\n\t\tif (data.status === undefined || data.status === \"\") {\n\t\t\tdata.status = \"U\";\n\t\t}\n\n\t\t// If the status is unknown and the version is compatible with the current version, mark as compatible\n\t\tif (data.status === \"U\" && this.isCompatibleVersion(data.version, version)) {\n\t\t\tdata.status = \"C\";\n\t\t}\n\n\t\t// Check for valid status and warn if not\n\t\tif (!statusData[data.status]) {\n\t\t\tconst message = `Error in spreadsheet: ${data.title} (${data.id}) has an invalid status \"${data.status}\". Please contact Anathema#3668 on Discord.`;\n\n\t\t\tconsole.warn(message);\n\n\t\t\tdata.notes = message;\n\t\t\tdata.status = \"X\";\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Compare if a given version is compatible with another version\n\t * @param {string|number} v1 - The target version\n\t * @param {string|number} v0 - The current version\n\t * @returns {boolean} Whether v1 is compatible with v0\n\t */\n\tstatic isCompatibleVersion(v1, v0 = game.release.version) {\n\t\tconst v1Major = String(v1).split(\".\")[0];\n\t\tconst v0Major = String(v0).split(\".\")[0];\n\t\treturn v1Major === v0Major || isNewerVersion(v1Major, v0Major);\n\t}\n}\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\n\nconst s_TAG_OBJECT = '[object Object]';\n\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj)\n{\n   if (Object.prototype.toString.call(target) !== s_TAG_OBJECT)\n   {\n      throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n   }\n\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT)\n      {\n         throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n      }\n   }\n\n   return _deepMerge(target, ...sourceObj);\n}\n\n/**\n * Tests for whether an object is iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isIterableAsync(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value)\n{\n   return value !== null && typeof value === 'object';\n}\n\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: {}, new Object() or Object.create(null).\n *\n * @param {*} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value)\n{\n   if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) { return false; }\n\n   const prototype = Object.getPrototypeOf(value);\n   return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue = void 0)\n{\n   if (typeof data !== 'object') { return defaultValue; }\n   if (typeof accessor !== 'string') { return defaultValue; }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If the next level of object access is undefined or null then return the empty string.\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n      data = data[access[cntr]];\n   }\n\n   return data;\n}\n\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        value - A new value to set if an entry for accessor is found.\n *\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                       'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n      if (Array.isArray(data))\n      {\n         const number = (+access[cntr]);\n\n         if (!Number.isInteger(number) || number < 0) { return false; }\n      }\n\n      if (cntr === access.length - 1)\n      {\n         switch (operation)\n         {\n            case 'add':\n               data[access[cntr]] += value;\n               break;\n\n            case 'div':\n               data[access[cntr]] /= value;\n               break;\n\n            case 'mult':\n               data[access[cntr]] *= value;\n               break;\n\n            case 'set':\n               data[access[cntr]] = value;\n               break;\n\n            case 'set-undefined':\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\n               break;\n\n            case 'sub':\n               data[access[cntr]] -= value;\n               break;\n         }\n      }\n      else\n      {\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         // Abort if the next level is null or not an object and containing a value.\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n         data = data[access[cntr]];\n      }\n   }\n\n   return true;\n}\n\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj)\n{\n   // Iterate and merge all source objects into target.\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      const obj = sourceObj[cntr];\n\n      for (const prop in obj)\n      {\n         if (Object.prototype.hasOwnProperty.call(obj, prop))\n         {\n            // Handle the special property starting with '-=' to delete keys.\n            if (prop.startsWith('-='))\n            {\n               delete target[prop.slice(2)];\n               continue;\n            }\n\n            // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n            // otherwise assign obj[prop] to target[prop].\n            target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n            obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n         }\n      }\n   }\n\n   return target;\n}\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n */\nclass A11yHelper\n{\n   /**\n    * Apply focus to the HTMLElement targets in a given A11yFocusSource data object. An iterable list `options.focusEl`\n    * can contain HTMLElements or selector strings. If multiple focus targets are provided in a list then the first\n    * valid target found will be focused. If focus target is a string then a lookup via `document.querySelector` is\n    * performed. In this case you should provide a unique selector for the desired focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource|{ focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? focusOpts.debug : false;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `, focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target instanceof HTMLElement && target.isConnected)\n               {\n                  target.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element instanceof HTMLElement && element.isConnected)\n                  {\n                     element.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] Optional element to start query.\n    *\n    * @param {object}            [options] - Optional parameters.\n    *\n    * @param {boolean}           [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>}  [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>}  [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @param {string}            [options.selectors] - Custom list of focusable selectors for `querySelectorAll`.\n    *\n    * @returns {Array<HTMLElement>} Child keyboard focusable\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements, selectors } = {})\n   {\n      if (!(element instanceof HTMLElement) && !(element instanceof Document))\n      {\n         throw new TypeError(`'element' is not a HTMLElement or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !(ignoreElements instanceof Set))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      const allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         return allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         return allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent|MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {HTMLElement|string} [options.focusEl] - A specific HTMLElement or selector string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !(focusEl instanceof HTMLElement) && typeof focusEl !== 'string')\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         return {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n      }\n\n      if (!(event instanceof KeyboardEvent) && !(event instanceof MouseEvent))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent or MouseEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {HTMLElement} */\n      const targetEl = event.target;\n\n      if (!(targetEl instanceof HTMLElement))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event.target' is not an HTMLElement.`);\n      }\n\n      const result = { debug };\n\n      if (event instanceof MouseEvent)\n      {\n         // Firefox currently (1/23) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            const rect = targetEl.getBoundingClientRect();\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n            result.source = 'keyboard';\n         }\n         else\n         {\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = focusEl !== void 0 ? [focusEl] : void 0;\n         }\n      }\n      else\n      {\n         const rect = targetEl.getBoundingClientRect();\n         result.x = x ?? rect.left + (rect.width / 2);\n         result.y = y ?? rect.top + (rect.height / 2);\n         result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n         result.source = 'keyboard';\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {HTMLElement} [el] - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || !(el instanceof HTMLElement) || el?.hidden || !el?.isConnected)\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = el.getAttribute('tabindex');\n      const tabindexFocusable = typeof tabindexAttr === 'string' && tabindexAttr !== '-1';\n\n      const isAnchor = el instanceof HTMLAnchorElement;\n\n      if (contenteditableFocusable || tabindexFocusable || isAnchor || el instanceof HTMLButtonElement ||\n       el instanceof HTMLDetailsElement || el instanceof HTMLEmbedElement || el instanceof HTMLIFrameElement ||\n        el instanceof HTMLInputElement || el instanceof HTMLObjectElement || el instanceof HTMLSelectElement ||\n         el instanceof HTMLTextAreaElement)\n      {\n         if (isAnchor && anchorHref && typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {HTMLElement|string}   data - Either an HTMLElement or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return data instanceof HTMLElement || typeof data === 'string';\n   }\n}\n\n/**\n * @typedef {object} A11yFocusSource - Provides essential data to return focus to an HTMLElement after a series of UI\n * actions like working with context menus and modal dialogs.\n *\n * @property {boolean} [debug] - When true logs to console the actions taken in {@link A11yHelper.applyFocusSource}.\n *\n * @property {Iterable<HTMLElement|string>} [focusEl] - List of targets to attempt to focus.\n *\n * @property {string} [source] - The source of the event: 'keyboard' for instance.\n *\n * @property {number} [x] - Potential X coordinate of initial event.\n *\n * @property {number} [y] - Potential Y coordinate of initial event.\n */\n\n/**\n * Provides management of a single Promise that can be shared and accessed across JS & Svelte components. This allows a\n * Promise to be created and managed as part of the TRL application lifecycle and accessed safely in various control\n * flow scenarios. When resolution of the current managed Promise starts further interaction is prevented.\n *\n * Note: to enable debugging / log statements set the static `logging` variable to true.\n */\nclass ManagedPromise\n{\n   /** @type {boolean} */\n   static #logging = false;\n\n   /** @type {{ isProcessing?: boolean, promise?: Promise, reject: Function, resolve: Function }} */\n   #current;\n\n   /**\n    * @returns {boolean} Whether global logging is enabled.\n    */\n   static get logging()\n   {\n      return this.#logging;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise.\n    */\n   get isActive()\n   {\n      return this.#current !== void 0;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise and resolution is currently being processed.\n    */\n   get isProcessing()\n   {\n      return this.#current !== void 0 ? this.#current.isProcessing : false;\n   }\n\n   /**\n    * Sets global logging enabled state.\n    *\n    * @param {boolean}  logging - New logging enabled state.\n    */\n   static set logging(logging)\n   {\n      if (typeof logging !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.logging error: 'logging' is not a boolean.`);\n      }\n\n      this.#logging = logging;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Resolves any current Promise with undefined and creates a new current Promise.\n    *\n    * @template T\n    *\n    * @param {object} opts - Options.\n    *\n    * @param {boolean}  [opts.reuse=false] - When true if there is an existing live Promise it is returned immediately.\n    *\n    * @returns {Promise<T>} The new current managed Promise.\n    */\n   create({ reuse = false } = {})\n   {\n      if (typeof reuse !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.create error: 'reuse' is not a boolean.`);\n      }\n\n      if (reuse && this.#current !== void 0 && this.#current.promise instanceof Promise)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.create info: Reusing / returning existing managed Promise.`);\n         }\n\n         return this.#current.promise;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(\n             `[TRL] ManagedPromise.create info: Creating a new Promise and resolving existing immediately.`);\n         }\n\n         this.#current.resolve(void 0);\n         this.#current = void 0;\n      }\n\n      const promise = new Promise((resolve, reject) =>\n      {\n         this.#current = {\n            isProcessing: false,\n            reject,\n            resolve\n         };\n      });\n\n      this.#current.promise = promise;\n\n      return promise;\n   }\n\n   /**\n    * Gets the current Promise if any.\n    *\n    * @returns {Promise<any>} Current Promise.\n    */\n   get()\n   {\n      return this.#current ? this.#current.promise : void 0;\n   }\n\n   /**\n    * Rejects the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to reject.\n    *\n    * @returns {boolean} Was the promise rejected.\n    */\n   reject(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         this.#current.isProcessing = true;\n\n         if (result instanceof Promise)\n         {\n            result.then((value) =>\n            {\n               this.#current.reject(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.reject(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject warning: No current managed Promise to reject.`);\n         }\n\n         return false;\n      }\n   }\n\n   /**\n    * Resolves the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to resolve.\n    *\n    * @returns {boolean} Was the promise resolved.\n    */\n   resolve(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (result instanceof Promise)\n         {\n            this.#current.isProcessing = true;\n\n            result.then((value) =>\n            {\n               this.#current.resolve(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.resolve(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve warning: No current managed Promise to resolve.`);\n         }\n\n         return false;\n      }\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText()\n   {\n      let result;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await globalThis.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      let success = false;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            await globalThis.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (globalThis?.document?.execCommand instanceof Function)\n      {\n         const textArea = globalThis.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         globalThis.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Provides a solid string hashing algorithm.\n *\n * Sourced from: https://stackoverflow.com/a/52171480\n *\n * @param {string}   str - String to hash.\n *\n * @param {number}   seed - A seed value altering the hash.\n *\n * @returns {number} Hash code.\n */\nfunction hashCode(str, seed = 0)\n{\n   if (typeof str !== 'string') { return 0; }\n\n   let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n   for (let ch, i = 0; i < str.length; i++)\n   {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n   }\n\n   h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n   h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n   return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nconst s_UUIDV4_REGEX = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n/**\n * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n *\n * This code is an evolution of the following Gist.\n * https://gist.github.com/jed/982883\n *\n * There is a public domain / free copy license attached to it that is not a standard OSS license...\n * https://gist.github.com/jed/982883#file-license-txt\n *\n * @returns {string} UUIDv4\n */\nfunction uuidv4()\n{\n   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (c ^ (globalThis.crypto || globalThis.msCrypto).getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\n/**\n * Validates that the given string is formatted as a UUIDv4 string.\n *\n * @param {string}   uuid - UUID string to test.\n *\n * @returns {boolean} Is UUIDv4 string.\n */\nuuidv4.isValid = (uuid) => s_UUIDV4_REGEX.test(uuid);\n\n/**\n * Normalizes a string.\n *\n * @param {string}   query - A string to normalize for comparisons.\n *\n * @returns {string} Cleaned string.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nfunction normalizeString(query)\n{\n   return query.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, ''); // eslint-disable-line no-control-regex\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n *\n * @see https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return { node, reason: `flex-item; z-index: ${computedStyle.zIndex}` };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return { node, reason: `child of grid container; z-index: ${computedStyle.zIndex}` };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return { node, reason: `contain: ${contain}` };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {object} StackingContext\n *\n * @property {Element} node - A DOM Element.\n *\n * @property {string}  reason - Reason for why a stacking context was created.\n */\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of StyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of StyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via the\n * 'version' option. This version number is assigned to the associated style element. When a StyleManager instance is\n * created and there is an existing instance with a version that is lower than the current instance all CSS rules are\n * removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link StyleManager.setProperty} and\n * {@link StyleManager.setProperties} to `false` when loading initial values.\n */\nclass StyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    *\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      // TODO: Verify 'document' type from Popout FVTT module. For some reason the popout document trips this\n      //  unintentionally.\n      // if (!(document instanceof Document))\n      // {\n      //    throw new TypeError(`StyleManager error: 'document' is not an instance of Document.`);\n      // }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing StyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {StyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new StyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {Object<string, string>}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nconst s_REGEX = /(\\d+)\\s*px/;\n\n/**\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n *\n * @param {string}   value - Value to parse.\n *\n * @returns {number|undefined} The integer component of a pixel string.\n */\nfunction styleParsePixels(value)\n{\n   if (typeof value !== 'string') { return void 0; }\n\n   const isPixels = s_REGEX.test(value);\n   const number = parseInt(value);\n\n   return isPixels && Number.isFinite(number) ? number : void 0;\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== void 0 ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseSvelteConfig(config, thisArg = void 0)\n{\n   if (typeof config !== 'object')\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    typeof config.context !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && typeof config.options !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (isObject(result))\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (isObject(svelteConfig.context))\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (isObject(svelteConfig.children))\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('#external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (isObject(result))\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (isObject(props))\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\n/**\n * Wraps a callback in a debounced timeout.\n *\n * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n *\n * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n *\n * @param {number}   delay - An amount of time in milliseconds to delay.\n *\n * @returns {Function} A wrapped function that can be called to debounce execution.\n */\nfunction debounce(callback, delay)\n{\n   let timeoutId;\n\n   return function(...args)\n   {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => { callback.apply(this, args); }, delay);\n   };\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {*}  target - Any target to test.\n *\n * @param {Function} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype)\n{\n   /* c8 ignore next */\n   if (typeof target !== 'function') { return false; }\n\n   if (target === Prototype) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto))\n   {\n      if (proto === Prototype) { return true; }\n   }\n\n   return false;\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\nfunction isSpace(character) {\n    return character == \" \" || character == \"\\n\" || character == \"\\r\" || character == \"\\t\";\n}\nfunction isQuote(character) {\n    return character == '\"' || character == \"'\";\n}\nconst TAG_START = \"<\";\nconst TAG_END = \">\";\nconst ENCODED_TAG_START = \"&lt;\";\nconst ENCODED_TAG_END = \"&gt;\";\nclass InPlaintextState {\n    constructor(options) {\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_START) {\n            transition(new InTagNameState(this.options));\n            return \"\";\n        }\n        else if (character == TAG_END && this.options.encodePlaintextTagDelimiters) {\n            return ENCODED_TAG_END;\n        }\n        return character;\n    }\n}\nclass InTagNameState {\n    constructor(options) {\n        this.options = options;\n        this.nameBuffer = \"\";\n        this.isClosingTag = false;\n    }\n    consume(character, transition) {\n        if (this.nameBuffer.length == 0) {\n            if (isSpace(character)) {\n                transition(new InPlaintextState(this.options));\n                return ((this.options.encodePlaintextTagDelimiters ? ENCODED_TAG_START : \"<\") +\n                    character);\n            }\n            if (character == \"/\") {\n                this.isClosingTag = true;\n                return \"\";\n            }\n        }\n        if (isSpace(character)) {\n            if (this.isNameBufferAnAllowedTag()) {\n                transition(new InTagState(0 /* TagMode.Allowed */, this.options));\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                transition(new InTagState(1 /* TagMode.Disallowed */, this.options));\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == TAG_START) {\n            this.nameBuffer += ENCODED_TAG_START;\n            return \"\";\n        }\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n            if (this.isNameBufferAnAllowedTag()) {\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == \"-\" && this.nameBuffer == \"!-\") {\n            transition(new InCommentState(this.options));\n            return \"\";\n        }\n        this.nameBuffer += character;\n        return \"\";\n    }\n    isNameBufferAnAllowedTag() {\n        const tagName = this.nameBuffer.toLowerCase();\n        if (this.options.allowedTags) {\n            return this.options.allowedTags.has(tagName);\n        }\n        else if (this.options.disallowedTags) {\n            return !this.options.disallowedTags.has(tagName);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass InTagState {\n    constructor(mode, options) {\n        this.mode = mode;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (isQuote(character)) {\n            transition(new InQuotedStringInTagState(this.mode, character, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InQuotedStringInTagState {\n    constructor(mode, quoteCharacter, options) {\n        this.mode = mode;\n        this.quoteCharacter = quoteCharacter;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == this.quoteCharacter) {\n            transition(new InTagState(this.mode, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else if (character == TAG_END) {\n            return ENCODED_TAG_END;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InCommentState {\n    constructor(options) {\n        this.options = options;\n        this.consecutiveHyphens = 0;\n    }\n    consume(character, transition) {\n        if (character == \">\" && this.consecutiveHyphens >= 2) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (character == \"-\") {\n            this.consecutiveHyphens++;\n        }\n        else {\n            this.consecutiveHyphens = 0;\n        }\n        return \"\";\n    }\n}\n\nconst DefaultStateMachineOptions = {\n    tagReplacementText: \"\",\n    encodePlaintextTagDelimiters: true,\n};\nclass StateMachine {\n    constructor(partialOptions = {}) {\n        this.state = new InPlaintextState(Object.assign(Object.assign({}, DefaultStateMachineOptions), partialOptions));\n        this.transitionFunction = ((next) => {\n            this.state = next;\n        }).bind(this);\n    }\n    consume(text) {\n        let outputBuffer = \"\";\n        for (const character of text) {\n            outputBuffer += this.state.consume(character, this.transitionFunction);\n        }\n        return outputBuffer;\n    }\n}\nfunction striptags(text, options = {}) {\n    return new StateMachine(options).consume(text);\n}\n\n/**\n * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n *\n * @param {object}   data - Drop transfer data.\n *\n * @param {ParseDataTransferOptions}   opts - Optional parameters.\n *\n * @returns {string|undefined} Foundry UUID for drop data.\n */\nfunction getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n{\n   if (typeof data !== 'object') { return void 0; }\n   if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n   let uuid = void 0;\n\n   if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n   {\n      const isCompendium = data.uuid.startsWith('Compendium');\n\n      if (isCompendium && compendium)\n      {\n         uuid = data.uuid;\n      }\n      else if (world)\n      {\n         uuid = data.uuid;\n      }\n   }\n   else // v9 and below parsing.\n   {\n      if (actor && world && data.actorId && data.type)\n      {\n         uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n      }\n      else if (typeof data.id === 'string') // v9 and below uses `id`\n      {\n         if (compendium && typeof data.pack === 'string')\n         {\n            uuid = `Compendium.${data.pack}.${data.id}`;\n         }\n         else if (world)\n         {\n            uuid = `${data.type}.${data.id}`;\n         }\n      }\n   }\n\n   return uuid;\n}\n\nexport { A11yHelper, ClipboardAccess, ManagedPromise, StyleManager, debounce, deepMerge, getStackingContext, getUUIDFromDataTransfer, hasAccessor, hasGetter, hasPrototype, hasSetter, hashCode, isApplicationShell, isHMRProxy, isIterable, isIterableAsync, isObject, isPlainObject, isSvelteComponent, klona, normalizeString, outroAndDestroy, parseSvelteConfig, safeAccess, safeSet, striptags, styleParsePixels, uuidv4 };\n//# sourceMappingURL=index.js.map\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { isIterable, uuidv4, isPlainObject, getUUIDFromDataTransfer, isObject, hasPrototype } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { writable as writable$2, derived, get } from 'svelte/store';\nimport { noop, run_all, is_function } from 'svelte/internal';\n\nclass DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param parentIndex - Any associated parent index API.\n     *\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param options - Options defining the new derived reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param name - Name of the derived reducer.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = [null];\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param [force] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\n/**\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\n * {@link DataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\n * attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\n * allows filters to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\n *\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.filters.add(...);\n * dynArray.filters.clear();\n * dynArray.filters.length;\n * dynArray.filters.remove(...);\n * dynArray.filters.removeBy(...);\n * dynArray.filters.removeById(...);\n * ```\n */\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    /**\n     * @param indexUpdate - update function for the indexer.\n     *\n     * @param filtersAdapter - Stores the filter function data.\n     */\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    /**\n     * @returns Returns the length of the filter data.\n     */\n    get length() { return this.#filtersData.filters.length; }\n    /**\n     * Provides an iterator for filters.\n     *\n     * @returns Generator / iterator of filters.\n     * @yields {DataFilter<T>}\n     */\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    /**\n     * @param filters -\n     */\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data = void 0;\n            let subscribeFn = void 0;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                        (filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Clears and removes all filters.\n     */\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    /**\n     * @param filters -\n     */\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\n     * Any truthy value returned will remove that filter.\n     *\n     * @param callback - Callback function to evaluate each filter entry.\n     */\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param ids - Removes filters by ID.\n     */\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param hostUpdate - Host update function invoked on index updates.\n     *\n     * @param [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    /* c8 ignore start */\n    /**\n     * @returns Returns reversed state.\n     */\n    get reversed() { return this.indexData.reversed; }\n    /* c8 ignore end */\n    /**\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) { this.indexData.reversed = reversed; }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = null;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\n/**\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\n * {@link DataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\n * attribute.\n *\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\n * triggers an index update.\n *\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.sort.clear();\n * dynArray.sort.set(...);\n * ```\n */\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    /**\n     * @param indexUpdate - Function to update indexer.\n     *\n     * @param sortData - Storage for compare function.\n     */\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    /**\n     * Clears & removes any assigned sort function and triggers an index update.\n     */\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param data - A callback function that compares two values. Return > 0 to sort b before a;\n     * < 0 to sort a before b; or 0 to keep original order of a & b.\n     *\n     * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\n     */\n    set(data) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn = void 0;\n        let subscribeFn = void 0;\n        switch (typeof data) {\n            case 'function':\n                compareFn = data;\n                subscribeFn = data.subscribe;\n                break;\n            case 'object':\n                // Early out if data is null / noop.\n                if (data === null) {\n                    break;\n                }\n                if (typeof data.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = data.compare;\n                subscribeFn = data.compare.subscribe ?? data.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides the public API for accessing the index API.\n *\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.index.active;\n * dynArray.index.hash;\n * dynArray.index.length;\n * dynArray.index.update(...);\n * ```\n */\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    /**\n     * - Current hash value of the index.\n     */\n    get hash() {\n        return this.#indexData.hash;\n    }\n    /**\n     * Provides an iterator over the index array.\n     *\n     * @returns Iterator / generator\n     * @yields {K}\n     */\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\n * default implementation or passing in a constructor function / class for a custom derived reducer.\n *\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.derived.clear();\n * dynArray.derived.create(...);\n * dynArray.derived.delete(...);\n * dynArray.derived.destroy();\n * dynArray.derived.get(...);\n * ```\n */\nclass DerivedAPI {\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear;\n    /**\n     * @param options - Options for creating a reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create;\n    /**\n     * Deletes and destroys a derived reducer.\n     *\n     * @param name - Name of the derived reducer\n     */\n    delete;\n    /**\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\n     */\n    destroy;\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n */\nclass Indexer$1 extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DerivedArrayReducer {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param array - Data host array.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedArrayReducer.\n     *\n     * @returns Generator / iterator of all data.\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataIterable = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @returns Generator / iterator of all data.\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n */\nclass Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DerivedMapReducer {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param map - Data host Map.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\n     * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedMapReducer.\n     *\n     * @returns Generator / iterator of all data.\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataMap = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            dataMap = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @returns Generator / iterator of all data.\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Provides a readable store to track keys actively pressed. KeyStore is designed to be used with the {@link keyforward}\n * action.\n */\nclass KeyStore\n{\n   #keySet;\n\n   /**\n    * @type {Map<string, number>}\n    */\n   #keyMap = new Map();\n\n   /**\n    * @type {KeyStoreOptions}\n    */\n   #options = { preventDefault: true, useCode: true, stopPropagation: true };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(KeyStore): void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @param {Iterable<string>}  [keyNames] -\n    *\n    * @param {KeyStoreOptions}   [options] - Optional parameters\n    */\n   constructor(keyNames, options)\n   {\n      if (!isIterable(keyNames))\n      {\n         throw new TypeError(`'keyNames' is not an iterable list.`);\n      }\n\n      this.setOptions(options);\n\n      this.#keySet = new Set(keyNames);\n   }\n\n   /**\n    * Add given key to the tracking key set.\n    *\n    * @param {string}   key - Key to add.\n    */\n   addKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      this.#keySet.add(key);\n   }\n\n   /**\n    * @returns {boolean} True if any keys in the key set are pressed.\n    */\n\n   /**\n    * Returns true if any of given keys are pressed. If `keys` is undefined then the result is true if any keys being\n    * tracked are pressed.\n    *\n    * @param {string|Iterable<string>|undefined} keys - Zero or more key strings or list to verify if any pressed.\n    *\n    * @returns {boolean} True if any keys set are pressed.\n    */\n   anyPressed(keys)\n   {\n      // When no keys given then check if any key is pressed.\n      if (keys === void 0) { return this.#keyMap.size > 0; }\n\n      const isList = isIterable(keys);\n\n      if (typeof keys !== 'string' && !isList)\n      {\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\n      }\n\n      let result = false;\n\n      if (isList)\n      {\n         for (const key of keys)\n         {\n            if (this.#keyMap.has(key))\n            {\n               result = true;\n               break;\n            }\n         }\n      }\n      else\n      {\n         if (this.#keyMap.has(keys)) { result = true; }\n      }\n\n      return result;\n   }\n\n   /**\n    * Is the given key in the tracking key set.\n    *\n    * @param {string}   key - Key to check.\n    */\n   hasKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      this.#keySet.has(key);\n   }\n\n   /**\n    * Returns true if all given keys are pressed.\n    *\n    * @param {string|Iterable<string>} keys - One or more key strings to verify if pressed.\n    *\n    * @returns {boolean} Are all keys pressed.\n    */\n   isPressed(keys)\n   {\n      const isList = isIterable(keys);\n\n      if (typeof keys !== 'string' && !isList)\n      {\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\n      }\n\n      let result = true;\n\n      if (isList)\n      {\n         for (const key of keys)\n         {\n            if (!this.#keyMap.has(key))\n            {\n               result = false;\n               break;\n            }\n         }\n      }\n      else\n      {\n         if (!this.#keyMap.has(keys)) { result = false; }\n      }\n\n      return result;\n   }\n\n   /**\n    * Handle keydown event adding any key from the tracked key set.\n    *\n    * @param {KeyboardEvent}  event - KeyboardEvent.\n    */\n   keydown(event)\n   {\n      const key = this.#options.useCode ? event.code : event.key;\n\n      if (this.#keySet.has(key))\n      {\n         if (!this.#keyMap.has(key))\n         {\n            this.#keyMap.set(key, 1);\n            this._updateSubscribers();\n         }\n\n         if (this.#options.preventDefault) { event.preventDefault(); }\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\n      }\n   }\n\n   /**\n    * @returns {IterableIterator<string>} Returns current pressed keys iterator.\n    */\n   keysPressed()\n   {\n      return this.#keyMap.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<string>} Returns currently tracked keys iterator.\n    */\n   keysTracked()\n   {\n      return this.#keySet.keys();\n   }\n\n   /**\n    * Handle keyup event removing any key from the tracked key set.\n    *\n    * @param {KeyboardEvent}  event - KeyboardEvent.\n    */\n   keyup(event)\n   {\n      const key = this.#options.useCode ? event.code : event.key;\n\n      if (this.#keySet.has(key))\n      {\n         if (this.#keyMap.has(key))\n         {\n            this.#keyMap.delete(key);\n            this._updateSubscribers();\n         }\n\n         if (this.#options.preventDefault) { event.preventDefault(); }\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\n      }\n   }\n\n   /**\n    * Remove the given key from the tracking key set.\n    *\n    * @param {string}   key - Key to remove.\n    */\n   removeKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      if (this.#keySet.has(key))\n      {\n         this.#keySet.delete(key);\n\n         if (this.#keyMap.has(key))\n         {\n            this.#keyMap.delete(key);\n            this._updateSubscribers();\n         }\n      }\n   }\n\n   /**\n    * Update options.\n    *\n    * @param {KeyStoreOptions}   options - Options to set.\n    */\n   setOptions(options)\n   {\n      if (typeof options?.preventDefault === 'boolean') { this.#options.preventDefault = options.preventDefault; }\n      if (typeof options?.useCode === 'boolean') { this.#options.useCode = options.useCode; }\n      if (typeof options?.stopPropagation === 'boolean') { this.#options.stopPropagation = options.stopPropagation; }\n   }\n\n   /**\n    * @param {string}   key - key or key code to lookup.\n    *\n    * @returns {number} 1 if currently pressed and 0 if not pressed.\n    */\n   value(key)\n   {\n      return this.#keyMap.has(key) ? 1 : 0;\n   }\n\n   // Store subscriber implementation --------------------------------------------------------------------------------\n\n   /**\n    * @param {function(KeyStore): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @protected\n    */\n   _updateSubscribers()\n   {\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\n   }\n}\n\n/**\n * @typedef {object} KeyStoreOptions\n *\n * @property {boolean}  [preventDefault=true] - Invoke `preventDefault` on key events.\n *\n * @property {boolean}  [useCode=true] - When true use `event.code` otherwise use `event.key` to get active key.\n *\n * @property {boolean}  [stopPropagation=true] - Invoke `stopPropagation` on key events.\n */\n\n// src/generator.ts\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = writable$2(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(get(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: get\n  };\n}\n\n// src/local.ts\nvar storage$1 = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g$1 = generator(storage$1);\nvar writable$1 = g$1.writable;\n\nclass TJSLocalStorage\n{\n   /**\n    * @type {Map<string, import('svelte/store').Writable>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new writable store for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {import('svelte/store').Writable} The new store.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = localStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable$1(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the stores Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {import('svelte/store').Writable} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSLocalStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = localStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {import('svelte/store').Writable} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(localStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar writable = g.writable;\n\nclass TJSSessionStorage\n{\n   /**\n    * @type {Map<string, import('svelte/store').Writable>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {import('svelte/store').Writable} The new store.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = sessionStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {import('svelte/store').Writable} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSSessionStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = sessionStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {import('svelte/store').Writable} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * function and an `update` function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isUpdatableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\n/**\n * Provides management of reactive embedded collections.\n *\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\n * {@link EmbeddedStoreManager.handleUpdate}\n */\nclass EmbeddedStoreManager\n{\n   /**\n    * RegExp for detecting CRUD updates for renderContext.\n    *\n    * @type {RegExp}\n    */\n   static #renderContextRegex = /(create|delete|update)(\\w+)/;\n\n   /**\n    * @type {Map<string, EmbeddedCollectionData>}\n    */\n   #name = new Map();\n\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document;\n\n   /**\n    * @type {Set<string>}\n    */\n   #embeddedNames = new Set();\n\n   /**\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\n    */\n   constructor(document)\n   {\n      this.#document = document;\n\n      this.handleDocChange();\n\n      Object.seal(this);\n   }\n\n   /**\n    * @template T\n    *\n    * @param {string} embeddedName -\n    *\n    * @param {import('@typhonjs-fvtt/svelte/store').OptionsDynMapCreate<string, T>} options -\n    *\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance\n    */\n   create(embeddedName, options)\n   {\n      /** @type {foundry.abstract.Document} */\n      const doc = this.#document[0];\n\n      let collection = null;\n\n      if (doc)\n      {\n         try\n         {\n            collection = doc.getEmbeddedCollection(embeddedName);\n         }\n         catch (err)\n         {\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${embeddedName}`);\n         }\n      }\n\n      let embeddedData;\n\n      if (!this.#name.has(embeddedName))\n      {\n         embeddedData = {\n            collection,\n            stores: new Map()\n         };\n\n         this.#name.set(embeddedName, embeddedData);\n      }\n      else\n      {\n         embeddedData = this.#name.get(embeddedName);\n      }\n\n      /** @type {string} */\n      let name;\n\n      /** @type {import('@typhonjs-fvtt/svelte/store').DataOptions<T>} */\n      let rest = {};\n\n      /** @type {import('@typhonjs-fvtt/svelte/store').IDynMapReducerCtor<string, T>} */\n      let ctor;\n\n      if (typeof options === 'string')\n      {\n         name = options;\n         ctor = DynMapReducer;\n      }\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\n      {\n         ctor = options;\n      }\n      else if (isObject(options))\n      {\n         ({ name, ctor = DynMapReducer, ...rest } = options);\n      }\n      else\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\n      }\n\n      if (!hasPrototype(ctor, DynMapReducer))\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n      }\n\n      name = name ?? ctor?.name;\n\n      if (typeof name !== 'string') { throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`); }\n\n      if (embeddedData.stores.has(name))\n      {\n         return embeddedData.stores.get(name);\n      }\n      else\n      {\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\n         const store = new ctor(storeOptions);\n         embeddedData.stores.set(name, store);\n         return store;\n      }\n   }\n\n   /**\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\n    * store name just that particular store is destroyed and removed.\n    *\n    * @param {string}   [embeddedName] - Specific embedded collection name.\n    *\n    * @param {string}   [storeName] - Specific store name.\n    *\n    * @returns {boolean} One or more stores destroyed?\n    */\n   destroy(embeddedName, storeName)\n   {\n      let count = 0;\n\n      // Destroy all embedded stores\n      if (embeddedName === void 0)\n      {\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.clear();\n      }\n      else if (typeof embeddedName === 'string' && storeName === void 0)\n      {\n         const embeddedData = this.#name.get(embeddedName);\n         if (embeddedData)\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.delete(embeddedName);\n      }\n      else if (typeof embeddedName === 'string' && storeName === 'string')\n      {\n         const embeddedData = this.#name.get(embeddedName);\n         if (embeddedData)\n         {\n            const store = embeddedData.stores.get(storeName);\n            if (store)\n            {\n               store.destroy();\n               count++;\n            }\n         }\n      }\n\n      return count > 0;\n   }\n\n   /**\n    * @template T\n    *\n    * @param {string} embeddedName -\n    *\n    * @param {string} storeName -\n    *\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance.\n    */\n   get(embeddedName, storeName)\n   {\n      if (!this.#name.has(embeddedName)) { return void 0; }\n\n      return this.#name.get(embeddedName).stores.get(storeName);\n   }\n\n   /**\n    * Updates all existing embedded collection stores with the associated embedded collection\n    */\n   handleDocChange()\n   {\n      const doc = this.#document[0];\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         const existingEmbeddedNames = new Set(this.#name.keys());\n\n         /** @type {string[]} */\n         const embeddedNames = Object.keys(doc.constructor?.metadata?.embedded ?? []);\n\n         // Remove all previously stored embedded name CRUD keys.\n         this.#embeddedNames.clear();\n\n         for (const embeddedName of embeddedNames)\n         {\n            // Remove processed embedded name from existingEmbeddedNames set.\n            existingEmbeddedNames.delete(embeddedName);\n\n            // Update CRUD keys.\n            this.#embeddedNames.add(`create${embeddedName}`);\n            this.#embeddedNames.add(`delete${embeddedName}`);\n            this.#embeddedNames.add(`update${embeddedName}`);\n\n            let collection = null;\n\n            try\n            {\n               // Update any existing stores with the actual collection.\n               collection = doc.getEmbeddedCollection(embeddedName);\n            }\n            catch (err)\n            {\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${\n                embeddedName}`);\n            }\n\n            // Update EmbeddedData for new collection.\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = collection;\n\n               // Update all existing stores.\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\n            }\n         }\n\n         // Update all existing embedded collections with null data that aren't processed above.\n         for (const embeddedName of existingEmbeddedNames)\n         {\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n            }\n         }\n      }\n      else // Reset all embedded reducer stores to null data.\n      {\n         this.#embeddedNames.clear();\n\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n         }\n      }\n   }\n\n   /**\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\n    *\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\n    *\n    * @param {string}   renderContext - render context update from document.\n    */\n   handleUpdate(renderContext)\n   {\n      if (!this.#embeddedNames.has(renderContext)) { return; }\n\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\n\n      if (match)\n      {\n         const embeddedName = match[2];\n         if (!this.#name.has(embeddedName)) { return; }\n\n         for (const store of this.#name.get(embeddedName).stores.values())\n         {\n            store.index.update(true);\n         }\n      }\n   }\n}\n\n/**\n * @typedef {object} EmbeddedCollectionData\n *\n * @property {foundry.abstract.Collection} collection -\n *\n * @property {Map<string, import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>>} stores -\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nclass TJSDocument\n{\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {TJSDocumentOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {foundry.abstract.Document | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${uuidv4()}`;\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n         this.#embeddedAPI = {\n            create: (embeddedName, options) => this.#embeddedStoreManager.create(embeddedName, options),\n            destroy: (embeddedName, storeName) => this.#embeddedStoreManager.destroy(embeddedName, storeName),\n            get: (embeddedName, storeName) => this.#embeddedStoreManager.get(embeddedName, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n\n         if (typeof this.#options.preDelete === 'function')\n         {\n            await this.#options.preDelete(doc);\n         }\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function')\n         {\n            await this.#options.delete(doc);\n         }\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      const doc = this.#document[0];\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n\n   /**\n    * @returns {foundry.abstract.Document | undefined} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * @param {foundry.abstract.Document | undefined}  document - New document to set.\n    *\n    * @param {object}         [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (this.#document[0])\n      {\n         delete this.#document[0].apps[this.#uuidv4];\n      }\n\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (options === null || typeof options !== 'object')\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (document instanceof globalThis.foundry.abstract.Document)\n      {\n         document.apps[this.#uuidv4] = {\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n         };\n      }\n\n      this.#setDocument(document);\n      this.#updateOptions = options;\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {foundry.abstract.Document | undefined} doc -\n    */\n   #setDocument(doc)\n   {\n      this.#document[0] = doc;\n\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {ParseDataTransferOptions & TJSDocumentOptions}   [options] - Optional parameters.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(getUUIDFromDataTransfer(data, options), options);\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {function(foundry.abstract.Document, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {(doc: foundry.abstract.Document) => void} [delete] - Optional post delete function to invoke when\n *           document is deleted _after_ subscribers have been notified.\n *\n * @property {(doc: foundry.abstract.Document) => void} [preDelete] - Optional pre delete function to invoke when\n *           document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @typedef {object} EmbeddedAPI\n *\n * @property {(embeddedName: string, options: import('@typhonjs-fvtt/runtime/svelte/store').OptionsDynMapCreate<string, any>) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} create - Creates an embedded collection store.\n *\n * @property {(embeddedName?: string, storeName?: string) => boolean} destroy - Destroys one or more embedded collection stores.\n *\n * @property {(embeddedName: string, storeName: string) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} get - Returns a specific existing embedded collection store.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template {DocumentCollection} T\n */\nclass TJSDocumentCollection\n{\n   #collection;\n   #collectionCallback;\n   #uuid;\n\n   /**\n    * @type {TJSDocumentCollectionOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {T|TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuid = `tjs-collection-${uuidv4()}`;\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {*} UUID\n    */\n   get uuid() { return this.#uuid; }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      if (typeof this.#options.preDelete === 'function')\n      {\n         await this.#options.preDelete(collection);\n      }\n\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function')\n      {\n         await this.#options.delete(collection);\n      }\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have collection update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n\n   /**\n    * @returns {T | undefined} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {object}         [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (this.#collection)\n      {\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\n\n         this.#collectionCallback = void 0;\n      }\n\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (collection instanceof DocumentCollection)\n      {\n         this.#collectionCallback = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n\n         collection?.apps?.push(this.#collectionCallback);\n      }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef TJSDocumentCollectionOptions\n *\n * @property {(collection: foundry.abstract.DocumentCollection) => void} [delete] - Optional post delete function\n *           to invoke when document is deleted _after_ subscribers have been notified.\n *\n * @property {(collection: foundry.abstract.DocumentCollection) => void} [preDelete] - Optional pre delete function to\n *           invoke when document is deleted _before_ subscribers are notified.\n */\n\nconst storeState = writable$2(void 0);\n\n/**\n * @type {GameState} Provides a Svelte store wrapping the Foundry runtime / global game state.\n */\nconst gameState = {\n   subscribe: storeState.subscribe,\n   get: () => game\n};\n\nObject.freeze(gameState);\n\nHooks.once('ready', () => storeState.set(game));\n\nexport { DerivedArrayReducer, DerivedMapReducer, DynArrayReducer, DynMapReducer, KeyStore, TJSDocument, TJSDocumentCollection, TJSLocalStorage, TJSSessionStorage, gameState, isReadableStore, isUpdatableStore, isWritableStore, propertyStore, subscribeFirstRest, subscribeIgnoreFirst, writableDerived };\n//# sourceMappingURL=index.js.map\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp$5(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals$9(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\nconst common = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   get ARRAY_TYPE () { return ARRAY_TYPE; },\n   EPSILON: EPSILON,\n   RANDOM: RANDOM,\n   equals: equals$9,\n   setMatrixArrayType: setMatrixArrayType,\n   toRadian: toRadian\n});\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction create$8() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction clone$8(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction copy$8(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nfunction identity$5(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nfunction fromValues$8(m00, m01, m10, m11) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nfunction set$8(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction transpose$2(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction invert$5(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction adjoint$2(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$3(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction multiply$8(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction rotate$4(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nfunction scale$8(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction fromRotation$4(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nfunction fromScaling$3(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$8(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$3(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction add$8(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction subtract$6(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$8(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$8(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nfunction multiplyScalar$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nfunction multiplyScalarAndAdd$3(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nvar mul$8 = multiply$8;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nvar sub$6 = subtract$6;\n\nconst mat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   LDU: LDU,\n   add: add$8,\n   adjoint: adjoint$2,\n   clone: clone$8,\n   copy: copy$8,\n   create: create$8,\n   determinant: determinant$3,\n   equals: equals$8,\n   exactEquals: exactEquals$8,\n   frob: frob$3,\n   fromRotation: fromRotation$4,\n   fromScaling: fromScaling$3,\n   fromValues: fromValues$8,\n   identity: identity$5,\n   invert: invert$5,\n   mul: mul$8,\n   multiply: multiply$8,\n   multiplyScalar: multiplyScalar$3,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$3,\n   rotate: rotate$4,\n   scale: scale$8,\n   set: set$8,\n   str: str$8,\n   sub: sub$6,\n   subtract: subtract$6,\n   transpose: transpose$2\n});\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction create$7() {\n  var out = new ARRAY_TYPE(6);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction clone$7(a) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction copy$7(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nfunction identity$4(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nfunction fromValues$7(a, b, c, d, tx, ty) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nfunction set$7(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction invert$4(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$2(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction multiply$7(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction rotate$3(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nfunction scale$7(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nfunction translate$3(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction fromRotation$3(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nfunction fromScaling$2(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nfunction fromTranslation$3(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$7(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$2(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction add$7(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction subtract$5(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nfunction multiplyScalar$2(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nfunction multiplyScalarAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$7(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$7(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nvar mul$7 = multiply$7;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nvar sub$5 = subtract$5;\n\nconst mat2d = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$7,\n   clone: clone$7,\n   copy: copy$7,\n   create: create$7,\n   determinant: determinant$2,\n   equals: equals$7,\n   exactEquals: exactEquals$7,\n   frob: frob$2,\n   fromRotation: fromRotation$3,\n   fromScaling: fromScaling$2,\n   fromTranslation: fromTranslation$3,\n   fromValues: fromValues$7,\n   identity: identity$4,\n   invert: invert$4,\n   mul: mul$7,\n   multiply: multiply$7,\n   multiplyScalar: multiplyScalar$2,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$2,\n   rotate: rotate$3,\n   scale: scale$7,\n   set: set$7,\n   str: str$7,\n   sub: sub$5,\n   subtract: subtract$5,\n   translate: translate$3\n});\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction create$6() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nfunction fromMat4$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction clone$6(a) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction copy$6(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nfunction fromValues$6(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nfunction set$6(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nfunction identity$3(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction transpose$1(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction invert$3(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction adjoint$1(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$1(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction multiply$6(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nfunction translate$2(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction rotate$2(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale$6(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nfunction fromTranslation$2(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction fromRotation$2(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nfunction fromScaling$1(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nfunction fromQuat$1(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$6(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$1(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction add$6(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction subtract$4(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nfunction multiplyScalar$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nfunction multiplyScalarAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$6(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$6(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nvar mul$6 = multiply$6;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub$4 = subtract$4;\n\nconst mat3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$6,\n   adjoint: adjoint$1,\n   clone: clone$6,\n   copy: copy$6,\n   create: create$6,\n   determinant: determinant$1,\n   equals: equals$6,\n   exactEquals: exactEquals$6,\n   frob: frob$1,\n   fromMat2d: fromMat2d,\n   fromMat4: fromMat4$1,\n   fromQuat: fromQuat$1,\n   fromRotation: fromRotation$2,\n   fromScaling: fromScaling$1,\n   fromTranslation: fromTranslation$2,\n   fromValues: fromValues$6,\n   identity: identity$3,\n   invert: invert$3,\n   mul: mul$6,\n   multiply: multiply$6,\n   multiplyScalar: multiplyScalar$1,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$1,\n   normalFromMat4: normalFromMat4,\n   projection: projection,\n   rotate: rotate$2,\n   scale: scale$6,\n   set: set$6,\n   str: str$6,\n   sub: sub$4,\n   subtract: subtract$4,\n   translate: translate$2,\n   transpose: transpose$1\n});\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create$5() {\n  var out = new ARRAY_TYPE(16);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone$5(a) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy$5(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues$5(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set$5(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity$2(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert$2(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply$5(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate$1(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale$5(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate$1(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation$1(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation$1(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation$1(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation$1(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation$1(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n    return identity$2(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$5(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add$5(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract$3(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$5(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$5(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul$5 = multiply$5;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub$3 = subtract$3;\n\nconst mat4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$5,\n   adjoint: adjoint,\n   clone: clone$5,\n   copy: copy$5,\n   create: create$5,\n   determinant: determinant,\n   equals: equals$5,\n   exactEquals: exactEquals$5,\n   frob: frob,\n   fromQuat: fromQuat,\n   fromQuat2: fromQuat2,\n   fromRotation: fromRotation$1,\n   fromRotationTranslation: fromRotationTranslation$1,\n   fromRotationTranslationScale: fromRotationTranslationScale,\n   fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n   fromScaling: fromScaling,\n   fromTranslation: fromTranslation$1,\n   fromValues: fromValues$5,\n   fromXRotation: fromXRotation,\n   fromYRotation: fromYRotation,\n   fromZRotation: fromZRotation,\n   frustum: frustum,\n   getRotation: getRotation,\n   getScaling: getScaling,\n   getTranslation: getTranslation$1,\n   identity: identity$2,\n   invert: invert$2,\n   lookAt: lookAt,\n   mul: mul$5,\n   multiply: multiply$5,\n   multiplyScalar: multiplyScalar,\n   multiplyScalarAndAdd: multiplyScalarAndAdd,\n   ortho: ortho,\n   orthoNO: orthoNO,\n   orthoZO: orthoZO,\n   perspective: perspective,\n   perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n   perspectiveNO: perspectiveNO,\n   perspectiveZO: perspectiveZO,\n   rotate: rotate$1,\n   rotateX: rotateX$3,\n   rotateY: rotateY$3,\n   rotateZ: rotateZ$3,\n   scale: scale$5,\n   set: set$5,\n   str: str$5,\n   sub: sub$3,\n   subtract: subtract$3,\n   targetTo: targetTo,\n   translate: translate$1,\n   transpose: transpose\n});\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create$4() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone$4(a) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues$4(x, y, z) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy$4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set$4(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add$4(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract$2(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply$4(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide$2(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil$2(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor$2(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min$2(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max$2(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round$2(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale$4(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate$2(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse$2(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize$4(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$4(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp$4(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random$3(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  var z = RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4$2(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat$1(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle$1(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot$4(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero$2(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$4(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$4(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$4(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub$2 = subtract$2;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul$4 = multiply$4;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div$2 = divide$2;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist$2 = distance$2;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist$2 = squaredDistance$2;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len$4 = length$4;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen$4 = squaredLength$4;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$2 = function () {\n  var vec = create$4();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nconst vec3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$4,\n   angle: angle$1,\n   bezier: bezier,\n   ceil: ceil$2,\n   clone: clone$4,\n   copy: copy$4,\n   create: create$4,\n   cross: cross$2,\n   dist: dist$2,\n   distance: distance$2,\n   div: div$2,\n   divide: divide$2,\n   dot: dot$4,\n   equals: equals$4,\n   exactEquals: exactEquals$4,\n   floor: floor$2,\n   forEach: forEach$2,\n   fromValues: fromValues$4,\n   hermite: hermite,\n   inverse: inverse$2,\n   len: len$4,\n   length: length$4,\n   lerp: lerp$4,\n   max: max$2,\n   min: min$2,\n   mul: mul$4,\n   multiply: multiply$4,\n   negate: negate$2,\n   normalize: normalize$4,\n   random: random$3,\n   rotateX: rotateX$2,\n   rotateY: rotateY$2,\n   rotateZ: rotateZ$2,\n   round: round$2,\n   scale: scale$4,\n   scaleAndAdd: scaleAndAdd$2,\n   set: set$4,\n   sqrDist: sqrDist$2,\n   sqrLen: sqrLen$4,\n   squaredDistance: squaredDistance$2,\n   squaredLength: squaredLength$4,\n   str: str$4,\n   sub: sub$2,\n   subtract: subtract$2,\n   transformMat3: transformMat3$1,\n   transformMat4: transformMat4$2,\n   transformQuat: transformQuat$1,\n   zero: zero$2\n});\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create$3() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone$3(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues$3(x, y, z, w) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy$3(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set$3(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add$3(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract$1(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply$3(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide$1(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil$1(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor$1(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min$1(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max$1(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round$1(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse$1(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize$3(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$3(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross$1(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp$3(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random$2(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = RANDOM() * 2 - 1;\n    v2 = RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = RANDOM() * 2 - 1;\n    v4 = RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero$1(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$3(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$3(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$3(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub$1 = subtract$1;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul$3 = multiply$3;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div$1 = divide$1;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist$1 = distance$1;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist$1 = squaredDistance$1;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len$3 = length$3;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen$3 = squaredLength$3;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$1 = function () {\n  var vec = create$3();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nconst vec4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$3,\n   ceil: ceil$1,\n   clone: clone$3,\n   copy: copy$3,\n   create: create$3,\n   cross: cross$1,\n   dist: dist$1,\n   distance: distance$1,\n   div: div$1,\n   divide: divide$1,\n   dot: dot$3,\n   equals: equals$3,\n   exactEquals: exactEquals$3,\n   floor: floor$1,\n   forEach: forEach$1,\n   fromValues: fromValues$3,\n   inverse: inverse$1,\n   len: len$3,\n   length: length$3,\n   lerp: lerp$3,\n   max: max$1,\n   min: min$1,\n   mul: mul$3,\n   multiply: multiply$3,\n   negate: negate$1,\n   normalize: normalize$3,\n   random: random$2,\n   round: round$1,\n   scale: scale$3,\n   scaleAndAdd: scaleAndAdd$1,\n   set: set$3,\n   sqrDist: sqrDist$1,\n   sqrLen: sqrLen$3,\n   squaredDistance: squaredDistance$1,\n   squaredLength: squaredLength$3,\n   str: str$3,\n   sub: sub$1,\n   subtract: subtract$1,\n   transformMat4: transformMat4$1,\n   transformQuat: transformQuat,\n   zero: zero$1\n});\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nfunction create$2() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction identity$1(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot$2(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nfunction multiply$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateX$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateY$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateZ$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale$2(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction random$1(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = RANDOM();\n  var u2 = RANDOM();\n  var u3 = RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nfunction invert$1(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nfunction conjugate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$2(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar clone$2 = clone$3;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar fromValues$2 = fromValues$3;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nvar copy$2 = copy$3;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nvar set$2 = set$3;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nvar add$2 = add$3;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nvar mul$2 = multiply$2;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nvar scale$2 = scale$3;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$2 = dot$3;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nvar lerp$2 = lerp$3;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nvar length$2 = length$3;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nvar len$2 = length$2;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$2 = squaredLength$3;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nvar sqrLen$2 = squaredLength$2;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nvar normalize$2 = normalize$3;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar exactEquals$2 = exactEquals$3;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar equals$2 = equals$3;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = create$4();\n  var xUnitVec3 = fromValues$4(1, 0, 0);\n  var yUnitVec3 = fromValues$4(0, 1, 0);\n  return function (out, a, b) {\n    var dot = dot$4(a, b);\n\n    if (dot < -0.999999) {\n      cross$2(tmpvec3, xUnitVec3, a);\n      if (len$4(tmpvec3) < 0.000001) cross$2(tmpvec3, yUnitVec3, a);\n      normalize$4(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      cross$2(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize$2(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nvar sqlerp = function () {\n  var temp1 = create$2();\n  var temp2 = create$2();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nvar setAxes = function () {\n  var matr = create$6();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize$2(out, fromMat3(out, matr));\n  };\n}();\n\nconst quat = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$2,\n   calculateW: calculateW,\n   clone: clone$2,\n   conjugate: conjugate$1,\n   copy: copy$2,\n   create: create$2,\n   dot: dot$2,\n   equals: equals$2,\n   exactEquals: exactEquals$2,\n   exp: exp,\n   fromEuler: fromEuler,\n   fromMat3: fromMat3,\n   fromValues: fromValues$2,\n   getAngle: getAngle,\n   getAxisAngle: getAxisAngle,\n   identity: identity$1,\n   invert: invert$1,\n   len: len$2,\n   length: length$2,\n   lerp: lerp$2,\n   ln: ln,\n   mul: mul$2,\n   multiply: multiply$2,\n   normalize: normalize$2,\n   pow: pow,\n   random: random$1,\n   rotateX: rotateX$1,\n   rotateY: rotateY$1,\n   rotateZ: rotateZ$1,\n   rotationTo: rotationTo,\n   scale: scale$2,\n   set: set$2,\n   setAxes: setAxes,\n   setAxisAngle: setAxisAngle,\n   slerp: slerp,\n   sqlerp: sqlerp,\n   sqrLen: sqrLen$2,\n   squaredLength: squaredLength$2,\n   str: str$2\n});\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nfunction create$1() {\n  var dq = new ARRAY_TYPE(8);\n\n  if (ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction clone$1(a) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromValues$1(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = create$2();\n  getRotation(outer, a);\n  var t = new ARRAY_TYPE(3);\n  getTranslation$1(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nfunction copy$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nfunction set$1(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nvar getReal = copy$2;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nvar setReal = copy$2;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateX$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateY$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateZ$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < EPSILON) {\n    return copy$1(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nfunction add$1(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nfunction multiply$1(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nvar mul$1 = multiply$1;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nfunction scale$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$1 = dot$2;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nfunction lerp$1(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot$1(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength$1(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nvar length$1 = length$2;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nvar len$1 = length$1;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$1 = squaredLength$2;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nvar sqrLen$1 = squaredLength$1;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nfunction normalize$1(out, a) {\n  var magnitude = squaredLength$1(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nfunction str$1(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nfunction exactEquals$1(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nfunction equals$1(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\nconst quat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add$1,\n   clone: clone$1,\n   conjugate: conjugate,\n   copy: copy$1,\n   create: create$1,\n   dot: dot$1,\n   equals: equals$1,\n   exactEquals: exactEquals$1,\n   fromMat4: fromMat4,\n   fromRotation: fromRotation,\n   fromRotationTranslation: fromRotationTranslation,\n   fromRotationTranslationValues: fromRotationTranslationValues,\n   fromTranslation: fromTranslation,\n   fromValues: fromValues$1,\n   getDual: getDual,\n   getReal: getReal,\n   getTranslation: getTranslation,\n   identity: identity,\n   invert: invert,\n   len: len$1,\n   length: length$1,\n   lerp: lerp$1,\n   mul: mul$1,\n   multiply: multiply$1,\n   normalize: normalize$1,\n   rotateAroundAxis: rotateAroundAxis,\n   rotateByQuatAppend: rotateByQuatAppend,\n   rotateByQuatPrepend: rotateByQuatPrepend,\n   rotateX: rotateX,\n   rotateY: rotateY,\n   rotateZ: rotateZ,\n   scale: scale$1,\n   set: set$1,\n   setDual: setDual,\n   setReal: setReal,\n   sqrLen: sqrLen$1,\n   squaredLength: squaredLength$1,\n   str: str$1,\n   translate: translate\n});\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nconst vec2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   add: add,\n   angle: angle,\n   ceil: ceil,\n   clone: clone,\n   copy: copy,\n   create: create,\n   cross: cross,\n   dist: dist,\n   distance: distance,\n   div: div,\n   divide: divide,\n   dot: dot,\n   equals: equals,\n   exactEquals: exactEquals,\n   floor: floor,\n   forEach: forEach,\n   fromValues: fromValues,\n   inverse: inverse,\n   len: len,\n   length: length,\n   lerp: lerp,\n   max: max,\n   min: min,\n   mul: mul,\n   multiply: multiply,\n   negate: negate,\n   normalize: normalize,\n   random: random,\n   rotate: rotate,\n   round: round,\n   scale: scale,\n   scaleAndAdd: scaleAndAdd,\n   set: set,\n   sqrDist: sqrDist,\n   sqrLen: sqrLen,\n   squaredDistance: squaredDistance,\n   squaredLength: squaredLength,\n   str: str,\n   sub: sub,\n   subtract: subtract,\n   transformMat2: transformMat2,\n   transformMat2d: transformMat2d,\n   transformMat3: transformMat3,\n   transformMat4: transformMat4,\n   zero: zero\n});\n\n/**\n * Provides a way to calculate velocity via effectively creating a \"complementary filter\".\n *\n * `velQuick` and `velSmooth` separately accumulate over time. `velInstant` and `velUsed` do not accumulate and are\n * discarded each update. `velQuick` is responsive, but noisy. `velSmooth` is laggy but eventually more accurate. By\n * tracking them separately the used result can be responsive in the short term and accurate in the long term.\n *\n * TODO: This class will be moved to a final location in the @typhonjs-svelte/lib/math package.\n */\nclass TJSVelocityTrack\n{\n   /** @type {number} */\n   #lastSampleTime;\n\n   /**\n    * Tracks the last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #lastSamplePoint = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Defines the settle time in milliseconds that resets any tracked velocity state.\n    *\n    * @type {number}\n    */\n   #resetDeltaTime;\n\n   /**\n    * Stores the scaling conversion for used velocity calculation. By default, this is 1000 which converts the velocity\n    * calculation to velocity per second. Set to `1` for instance for velocity per millisecond.\n    *\n    * @type {number}\n    */\n   #scaleTime;\n\n   /**\n    * Stores the instant velocity between current and last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velInstant = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `quick` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velQuick = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `smooth` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velSmooth = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the mix between `quick` and `smooth` running velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velUsed = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Creates a velocity tracker instance.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {number}   [opts.resetDeltaTime=50] - Delta time in milliseconds that resets velocity tracking.\n    *\n    * @param {number}   [opts.scaleTime=1000] - Scales velocity calculation to new time frame. 1000 is velocity per\n    *                                           second.\n    */\n   constructor({ resetDeltaTime = 50, scaleTime = 1000 } = {})\n   {\n      this.resetDeltaTime = resetDeltaTime;\n      this.scaleTime = scaleTime;\n\n      Object.seal(this.#velUsed);\n   }\n\n   /**\n    * @returns {number} Gets `resetDeltaTime`.\n    */\n   get resetDeltaTime() { return this.#resetDeltaTime; }\n\n   /**\n    * @returns {number} Gets `scaleTime`.\n    */\n   get scaleTime() { return this.#scaleTime; }\n\n   /**\n    * Sets `resetDeltaTime`.\n    *\n    * @param {number}   resetDeltaTime - Delta time in milliseconds that resets velocity tracking.\n    */\n   set resetDeltaTime(resetDeltaTime)\n   {\n      if (!Number.isFinite(resetDeltaTime) || resetDeltaTime < 0)\n      {\n         throw new TypeError(`'resetDeltaTime' is not a positive finite number.`);\n      }\n\n      this.#resetDeltaTime = resetDeltaTime;\n   }\n\n   /**\n    * Sets `scaleTime`.\n    *\n    * @param {number}   scaleTime - Scales velocity calculation to new time frame. 1000 is velocity per second.\n    */\n   set scaleTime(scaleTime)\n   {\n      if (!Number.isFinite(scaleTime) || scaleTime < 0)\n      {\n         throw new TypeError(`'scaleTime' is not a positive finite number.`);\n      }\n\n      this.#scaleTime = scaleTime;\n   }\n\n   /**\n    * Resets velocity tracking data.\n    *\n    * @param {number}   [x=0] - 'X' value to set to last sample point.\n    *\n    * @param {number}   [y=0] - 'Y' value to set to last sample point.\n    *\n    * @param {number}   [z=0] - 'Z' value to set to last sample point.\n    *\n    * @param {number}   [sampleTime=performance.now()] - A sample time in milliseconds resolution.\n    */\n   reset(x = 0, y = 0, z = 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(x)) { throw new TypeError(`'x' is not a finite number.`); }\n      if (!Number.isFinite(y)) { throw new TypeError(`'y' is not a finite number.`); }\n      if (!Number.isFinite(z)) { throw new TypeError(`'z' is not a finite number.`); }\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      // Reset velocity tracking variables.\n      this.#lastSampleTime = sampleTime;\n\n      this.#lastSamplePoint.x = x;\n      this.#lastSamplePoint.y = y;\n      this.#lastSamplePoint.z = z;\n\n      this.#velInstant.x = this.#velQuick.x = this.#velSmooth.x = this.#velUsed.x = 0;\n      this.#velInstant.y = this.#velQuick.y = this.#velSmooth.y = this.#velUsed.y = 0;\n      this.#velInstant.z = this.#velQuick.z = this.#velSmooth.z = this.#velUsed.z = 0;\n   }\n\n   /**\n    * Runs ongoing velocity calculation of x / y / z given a sample time.\n    *\n    * @param {number|undefined}  x - New sample X\n    *\n    * @param {number|undefined}  y - New sample Y\n    *\n    * @param {number|undefined}  z - New sample Z\n    *\n    * @param {number}            [sampleTime=performance.now()] - An optional specific time w/ millisecond resolution.\n    *\n    * @returns {{x: number, y: number, z: number}} current velocity.\n    */\n   update(x = void 0, y = void 0, z = void 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      const deltaTime = sampleTime - this.#lastSampleTime + Number.EPSILON;\n      this.#lastSampleTime = sampleTime;\n\n      // Reset velocity tracking if the delta time is greater than `resetDeltaTime`.\n      if (deltaTime > this.#resetDeltaTime)\n      {\n         this.reset(x, y, z, sampleTime);\n         return this.#velUsed;\n      }\n\n      if (Number.isFinite(x))\n      {\n         this.#velInstant.x = (x - this.#lastSamplePoint.x) / deltaTime;\n\n         this.#lastSamplePoint.x = x;\n\n         this.#velQuick.x = lerp$5(this.#velQuick.x, this.#velInstant.x, 0.1);\n         this.#velSmooth.x = lerp$5(this.#velSmooth.x, this.#velInstant.x, 0.01);\n         this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(y))\n      {\n         this.#velInstant.y = (y - this.#lastSamplePoint.y) / deltaTime;\n\n         this.#lastSamplePoint.y = y;\n\n         this.#velQuick.y = lerp$5(this.#velQuick.y, this.#velInstant.y, 0.1);\n         this.#velSmooth.y = lerp$5(this.#velSmooth.y, this.#velInstant.y, 0.01);\n\n         this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(z))\n      {\n         this.#velInstant.z = (z - this.#lastSamplePoint.z) / deltaTime;\n\n         this.#lastSamplePoint.z = z;\n\n         this.#velQuick.z = lerp$5(this.#velQuick.z, this.#velInstant.z, 0.1);\n         this.#velSmooth.z = lerp$5(this.#velSmooth.z, this.#velInstant.z, 0.01);\n         this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n      }\n\n      return this.#velUsed;\n   }\n\n   /**\n    * Gets the current velocity tracking data.\n    *\n    * @returns {{x: number, y: number, z: number}} Velocity tracking data.\n    */\n   get()\n   {\n      this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n\n      return this.#velUsed;\n   }\n}\n\nexport { TJSVelocityTrack, degToRad, common as glMatrix, lerp$5 as lerp, mat2, mat2d, mat3, mat4, quat, quat2, radToDeg, vec2, vec3, vec4 };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Provides a basic {@link TJSBasicAnimation} implementation for Position animation.\n */\nexport class AnimationControl\n{\n   /** @type {object} */\n   #animationData;\n\n   /** @type {Promise<void>} */\n   #finishedPromise;\n\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (isObject(animationData)) { animationData.control = this; }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<void>}\n    */\n   get finished()\n   {\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve();\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n","/**\n * Provides animation management and scheduling allowing all Position instances to utilize one micro-task.\n */\nexport class AnimationManager\n{\n   /**\n    * @type {object[]}\n    */\n   static activeList = [];\n\n   /**\n    * @type {object[]}\n    */\n   static newList = [];\n\n   /**\n    * @type {number}\n    */\n   static current;\n\n   /**\n    * Add animation data.\n    *\n    * @param {object}   data -\n    */\n   static add(data)\n   {\n      const now = performance.now();\n\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\n      // easing is enabled.\n      data.start = now + (AnimationManager.current - now);\n\n      AnimationManager.newList.push(data);\n   }\n\n   /**\n    * Manage all animation\n    */\n   static animate()\n   {\n      const current = AnimationManager.current = performance.now();\n\n      // Early out of the rAF callback when there are no current animations.\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\n      {\n         globalThis.requestAnimationFrame(AnimationManager.animate);\n         return;\n      }\n\n      if (AnimationManager.newList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.newList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled)\n            {\n               AnimationManager.newList.splice(cntr, 1);\n               data.cleanup(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Remove from new list and add to active list.\n               AnimationManager.newList.splice(cntr, 1);\n               AnimationManager.activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n            continue;\n         }\n\n         data.current = current - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData);\n\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData);\n      }\n\n      globalThis.requestAnimationFrame(AnimationManager.animate);\n   }\n\n   /**\n    * Cancels all animations for given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    */\n   static cancel(position)\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.newList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      AnimationManager.activeList.length = 0;\n      AnimationManager.newList.length = 0;\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    *\n    * @returns {AnimationControl[]} All scheduled AnimationControl instances for the given Position instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      return results;\n   }\n}\n\n// Start animation manager immediately. It constantly is running in background.\nAnimationManager.animate();\n","/**\n * Stores the PositionData properties that can be animated.\n *\n * @type {Set<string>}\n */\nconst animateKeys = new Set([\n   // Main keys\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n   // Aliases\n   'rotation'\n]);\n\n/**\n * Defines the keys of PositionData that are transform keys.\n *\n * @type {string[]}\n */\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\n\nObject.freeze(transformKeys);\n\n/**\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n *\n * @type {RegExp}\n */\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\n\n/**\n * Provides numeric defaults for all parameters. This is used by {@link Position.get} to optionally provide\n * numeric defaults.\n *\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\n */\nconst numericDefaults = {\n   // Other keys\n   height: 0,\n   left: 0,\n   maxHeight: null,\n   maxWidth: null,\n   minHeight: null,\n   minWidth: null,\n   top: 0,\n   transformOrigin: null,\n   width: 0,\n   zIndex: null,\n\n   rotateX: 0,\n   rotateY: 0,\n   rotateZ: 0,\n   scale: 1,\n   translateX: 0,\n   translateY: 0,\n   translateZ: 0,\n\n   rotation: 0\n};\n\nObject.freeze(numericDefaults);\n\n/**\n * Sets numeric defaults for a {@link PositionData} like object.\n *\n * @param {object}   data - A PositionData like object.\n */\nfunction setNumericDefaults(data)\n{\n   // Transform keys\n   if (data.rotateX === null) { data.rotateX = 0; }\n   if (data.rotateY === null) { data.rotateY = 0; }\n   if (data.rotateZ === null) { data.rotateZ = 0; }\n   if (data.translateX === null) { data.translateX = 0; }\n   if (data.translateY === null) { data.translateY = 0; }\n   if (data.translateZ === null) { data.translateZ = 0; }\n   if (data.scale === null) { data.scale = 1; }\n\n   // Aliases\n   if (data.rotation === null) { data.rotation = 0; }\n}\n\n/**\n * Defines bitwise keys for transforms used in {@link Transforms.getMat4}.\n *\n * @type {object}\n */\nconst transformKeysBitwise = {\n   rotateX: 1,\n   rotateY: 2,\n   rotateZ: 4,\n   scale: 8,\n   translateX: 16,\n   translateY: 32,\n   translateZ: 64\n};\n\nObject.freeze(transformKeysBitwise);\n\n/**\n * Defines the default transform origin.\n *\n * @type {string}\n */\nconst transformOriginDefault = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(transformOrigins);\n\nexport {\n   animateKeys,\n   numericDefaults,\n   relativeRegex,\n   setNumericDefaults,\n   transformKeys,\n   transformKeysBitwise,\n   transformOriginDefault,\n   transformOrigins\n};\n","import * as constants from './constants.js';\n\n/**\n * Converts any relative string values for animatable keys to actual updates performed against current data.\n *\n * @param {PositionDataExtended}    positionData - position data.\n *\n * @param {Position|PositionData}   position - The source position instance.\n */\nexport function convertRelative(positionData, position)\n{\n   for (const key in positionData)\n   {\n      // Key is animatable / numeric.\n      if (constants.animateKeys.has(key))\n      {\n         const value = positionData[key];\n\n         if (typeof value !== 'string') { continue; }\n\n         // Ignore 'auto' and 'inherit' string values.\n         if (value === 'auto' || value === 'inherit') { continue; }\n\n         const regexResults = constants.relativeRegex.exec(value);\n\n         if (!regexResults)\n         {\n            throw new Error(\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\n         }\n\n         const current = position[key];\n\n         switch (regexResults[1])\n         {\n            case '-':\n               positionData[key] = current - parseFloat(regexResults[2]);\n               break;\n\n            case '+':\n               positionData[key] = current + parseFloat(regexResults[2]);\n               break;\n\n            case '*':\n               positionData[key] = current * parseFloat(regexResults[2]);\n               break;\n         }\n      }\n   }\n}\n","import { cubicOut }           from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/svelte/math';\nimport {\n   isIterable,\n   isObject }                 from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationControl }   from './AnimationControl.js';\nimport { AnimationManager }   from './AnimationManager.js';\n\nimport { convertRelative }    from '../convertRelative.js';\n\nimport {\n   animateKeys,\n   setNumericDefaults }       from '../constants.js';\n\nexport class AnimationAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /** @type {Position} */\n   #position;\n\n   /**\n    * Tracks the number of animation control instances that are active.\n    *\n    * @type {number}\n    */\n   #instanceCount = 0;\n\n   /**\n    * Provides a bound function to pass as data to AnimationManager to invoke\n    *\n    * @type {Function}\n    * @see {AnimationAPI.#cleanupInstance}\n    */\n   #cleanup;\n\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      this.#cleanup = this.#cleanupInstance.bind(this);\n   }\n\n   /**\n    * Returns whether there are scheduled animations whether active or delayed for this Position.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isScheduled()\n   {\n      return this.#instanceCount > 0;\n   }\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {Function}    ease -\n    *\n    * @param {Function}    interpolate -\n    *\n    * @returns {AnimationControl} The associated animation control.\n    */\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\n   {\n      // Set initial data for transform values that are often null by default.\n      setNumericDefaults(initial);\n      setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return AnimationControl.voidControl; }\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\n         setTimeout(() =>\n         {\n            if (!animationData.cancelled)\n            {\n               animationData.active = true;\n\n               const now = performance.now();\n\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n               // precise delayed time.\n               animationData.start = now + (AnimationManager.current - now);\n            }\n         }, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      this.#instanceCount++;\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Cancels all animation instances for this Position instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position);\n   }\n\n   /**\n    * Cleans up an animation instance.\n    *\n    * @param {object}   data - Animation data for an animation instance.\n    */\n   #cleanupInstance(data)\n   {\n      this.#instanceCount--;\n\n      data.active = false;\n      data.finished = true;\n\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this Position instance.\n    *\n    * @returns {AnimationControl[]} All currently scheduled animation controls for this Position instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const position = this.#position;\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (data[key] !== void 0 && fromData[key] !== data[key])\n         {\n            initial[key] = fromData[key];\n            destination[key] = data[key];\n         }\n      }\n\n      convertRelative(initial, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {PositionDataExtended} toData - The ending position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\n            continue;\n         }\n\n         if (data[key] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      convertRelative(initial, data);\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {PositionDataExtended} toData - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         if (data[key] !== void 0 && toData[key] !== data[key])\n         {\n            destination[key] = toData[key];\n            initial[key] = data[key];\n         }\n      }\n\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<string>}  keys - The keys for quickTo.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {number}            [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {quickToCallback} quick-to tween function.\n    */\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\n         }\n\n         if (!animateKeys.has(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         if (data[key] !== void 0)\n         {\n            destination[key] = data[key];\n            initial[key] = data[key];\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n            if (data[key] !== void 0) { initial[key] = data[key]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         convertRelative(destination, data);\n\n         // Set initial data for transform values that are often null by default.\n         setNumericDefaults(initial);\n         setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            this.#instanceCount++;\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = performance.now();\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.current - now);\n            animationData.current = 0;\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object}            [opts] - Optional parameters.\n       *\n       * @param {number}            [opts.duration] - Duration in seconds.\n       *\n       * @param {Function}          [opts.ease] - Easing function.\n       *\n       * @param {Function}          [opts.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\n      {\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\n         }\n\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\n         }\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n         if (interpolate) { animationData.interpolate = interpolate; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * @callback quickToCallback\n *\n * @param {...number|object} args - Either individual numbers corresponding to the order in which keys are specified or\n *                                  a single object with keys specified and numerical values.\n *\n * @property {({duration?: number, ease?: Function, interpolate?: Function}) => quickToCallback} options - A function\n *                                  to update options for quickTo function.\n */\n","/**\n * Provides a basic {@link TJSBasicAnimation} implementation for a Position animation for a group of Position instances.\n */\nexport class AnimationGroupControl\n{\n   /** @type {AnimationControl[]} */\n   #animationControls;\n\n   /** @type {Promise<Awaited<unknown>[]>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {AnimationControl[]} animationControls - An array of AnimationControl instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\n\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         const promises = [];\n         for (let cntr = animationControls.length; --cntr >= 0;)\n         {\n            promises.push(animationControls[cntr].finished);\n         }\n\n         this.#finishedPromise = Promise.all(promises);\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return false; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (animationControls[cntr].isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return true; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (!animationControls[cntr].isFinished) { return false; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return; }\n\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\n      {\n         this.#animationControls[cntr].cancel();\n      }\n   }\n}\n","import {\n   isIterable,\n   isObject }                    from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationManager }      from './AnimationManager.js';\nimport { AnimationAPI }          from './AnimationAPI.js';\nimport { AnimationGroupControl } from './AnimationGroupControl.js';\n\n/**\n * Provides a public API for grouping multiple {@link Position} animations together with the AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the Position static / group Animation API `instanceof`\n * checks are not done against Position. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\n *\n * @see AnimationAPI\n */\nexport class AnimationGroupAPI\n{\n   /**\n    * Checks of the given object is a Position instance by checking for AnimationAPI.\n    *\n    * @param {*}  object - Any data.\n    *\n    * @returns {boolean} Is Position.\n    */\n   static #isPosition(object)\n   {\n      return isObject(object) && object.animate instanceof AnimationAPI;\n   }\n\n   /**\n    * Cancels any animation for given Position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    */\n   static cancel(position)\n   {\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#isPosition(position) ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all Position animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @returns {{position: Position, data: object|void, controls: AnimationControl[]}[]} Results array.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static from(position, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static fromTo(position, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static to(position, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {Iterable<string>}  keys -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {quickToCallback} Basic animation control.\n    */\n   static quickTo(position, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {quickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, data: void 0 };\n\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : entry;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\n            return () => null;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = position;\n         callbackOptions.data = isPosition ? void 0 : position;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(position))\n            {\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition)) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /**\n                   * @type {boolean}\n                   */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition)) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object|Function}   [options] - Optional parameters.\n       *\n       * @param {number}            [options.duration] - Duration in seconds.\n       *\n       * @param {Function}          [options.ease] - Easing function.\n       *\n       * @param {Function}          [options.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n         else if (typeof options === 'function')\n         {\n            if (isIterable(position))\n            {\n               index = -1;\n               let cntr = 0;\n\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition))\n                  {\n                     console.warn(\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\n                     continue;\n                  }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  actualOptions = options(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\n\n                  if (typeof actualOptions !== 'object')\n                  {\n                     throw new TypeError(\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\n                       index}) failed to return an object.`);\n                  }\n\n                  quickToCallbacks[cntr++].options(actualOptions);\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition))\n               {\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\n                  return quickToCB;\n               }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               actualOptions = options(callbackOptions);\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n               }\n\n               quickToCallbacks[0].options(actualOptions);\n            }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n","export class Centered\n{\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ element, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get element() { return this.#element; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   getTop(height)\n   {\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n","import { Centered } from './Centered.js';\n\nconst browserCentered = new Centered();\n\nexport { browserCentered, Centered };\n\n","export class PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n","/**\n * Defines stored positional data.\n */\nexport class PositionData\n{\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\n   {\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.height = height;\n\n      /**\n       * @type {number|null}\n       */\n      this.left = left;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxHeight = maxHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxWidth = maxWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.minHeight = minHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.minWidth = minWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateX = rotateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateY = rotateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateZ = rotateZ;\n\n      /**\n       * @type {number|null}\n       */\n      this.scale = scale;\n\n      /**\n       * @type {number|null}\n       */\n      this.top = top;\n\n      /**\n       * @type {string|null}\n       */\n      this.transformOrigin = transformOrigin;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateX = translateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateY = translateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateZ = translateZ;\n\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.width = width;\n\n      /**\n       * @type {number|null}\n       */\n      this.zIndex = zIndex;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Copies given data to this instance.\n    *\n    * @param {PositionData}   data - Copy from this instance.\n    *\n    * @returns {PositionData} This instance.\n    */\n   copy(data)\n   {\n      this.height = data.height;\n      this.left = data.left;\n      this.maxHeight = data.maxHeight;\n      this.maxWidth = data.maxWidth;\n      this.minHeight = data.minHeight;\n      this.minWidth = data.minWidth;\n      this.rotateX = data.rotateX;\n      this.rotateY = data.rotateY;\n      this.rotateZ = data.rotateZ;\n      this.scale = data.scale;\n      this.top = data.top;\n      this.transformOrigin = data.transformOrigin;\n      this.translateX = data.translateX;\n      this.translateY = data.translateY;\n      this.translateZ = data.translateZ;\n      this.width = data.width;\n      this.zIndex = data.zIndex;\n\n      return this;\n   }\n}\n","import { linear }       from 'svelte/easing';\n\nimport { lerp }         from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isIterable }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class PositionStateAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, PositionDataExtended>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {Position} */\n   #position;\n\n   /** @type {Transforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {PositionDataExtended} The saved data set.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default data.\n    *\n    * @returns {PositionDataExtended} Associated default data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {PositionDataExtended} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets data to default values and invokes set.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (typeof defaultData !== 'object') { return false; }\n\n      // Cancel all animations for Position if there are currently any scheduled.\n      if (this.#position.animate.isScheduled)\n      {\n         this.#position.animate.cancel();\n      }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {PositionDataExtended|Promise<PositionDataExtended>} Saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\n    *\n    * @returns {PositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a position state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.data] - Position data to set.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n","import { writable }           from 'svelte/store';\n\nimport { propertyStore }      from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class StyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {ResizeObserverData}\n       */\n      this.resizeObserved = {\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      };\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {Writable<ResizeObserverData>}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this Position instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = styleParsePixels(el.style.marginLeft) ?? styleParsePixels(this.computed.marginLeft);\n      this.marginTop = styleParsePixels(el.style.marginTop) ?? styleParsePixels(this.computed.marginTop);\n      this.maxHeight = styleParsePixels(el.style.maxHeight) ?? styleParsePixels(this.computed.maxHeight);\n      this.maxWidth = styleParsePixels(el.style.maxWidth) ?? styleParsePixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = styleParsePixels(el.style.minHeight) ?? styleParsePixels(this.computed.minHeight);\n      this.minWidth = styleParsePixels(el.style.minWidth) ?? styleParsePixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : void 0 ?? this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this Position instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n","import { mat4, vec3 }   from '@typhonjs-fvtt/runtime/svelte/math';\n\n/**\n * Provides the output data for {@link Transforms.getData}.\n */\nexport class TransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screenspace clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {Vector3[]}\n    */\n   #corners = [vec3.create(), vec3.create(), vec3.create(), vec3.create()];\n\n   /**\n    * Stores the current gl-matrix mat4 data.\n    *\n    * @type {Matrix4}\n    */\n   #mat4 = mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {Matrix4[]}\n    */\n   #originTranslations = [mat4.create(), mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {Vector3[]} The transformed corner points as vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {Matrix4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {Matrix4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * @typedef {Float32Array} Vector3 - 3 Dimensional Vector.\n *\n * @see https://glmatrix.net/docs/module-vec3.html\n */\n\n/**\n * @typedef {Float32Array} Matrix4 - 4x4 Matrix; Format: column-major, when typed out it looks like row-major.\n *\n * @see https://glmatrix.net/docs/module-mat4.html\n */\n","import { isObject } from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main Position instance.\n * ```\n * const position = new Position(<PositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nexport class AdapterValidators\n{\n   /** @type {boolean} */\n   #enabled = true;\n\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, ValidatorData[]]} Returns this and internal storage for validator adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {boolean} Returns the enabled state.s\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * @param {boolean}  enabled - Sets enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @returns {Generator<ValidatorData|undefined>} Generator / iterator of validators.\n    * @yields {ValidatorData}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(ValidatorFn|ValidatorData)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      // let subscribeCount = 0;  // TODO: Currently unused\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if (validatorType !== 'function' && validatorType !== 'object' || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator.bind(validator),\n                  weight: validator.weight || 1,\n                  instance: validator\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            // subscribeCount++;  // TODO: Currently unused\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(ValidatorFn|ValidatorData)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, ValidatorFn, number): boolean} callback - Callback function to evaluate each validator\n    *                                                                  entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\n/**\n * @callback ValidatorFn - Position validator function that takes a {@link PositionData} instance potentially\n *                             modifying it or returning null if invalid.\n *\n * @param {ValidationData} valData - Validation data.\n *\n * @returns {PositionData|null} The validated position data or null to cancel position update.\n *\n */\n\n/**\n * @typedef {object} ValidatorData\n *\n * @property {*}           [id=undefined] - An ID associated with this validator. Can be used to remove the validator.\n *\n * @property {ValidatorFn} validator - Position validator function that takes a {@link PositionData} instance\n *                                     potentially modifying it or returning null if invalid.\n *\n * @property {number}      [weight=1] - A number between 0 and 1 inclusive to position this validator against others.\n *\n * @property {Function}    [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\n */\n\n/**\n * @typedef {ValidatorFn|ValidatorData|Iterable<ValidatorFn|ValidatorData>} PositionValidatorOptions Defines the\n *          position validator options.\n */\n","export class BasicBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = valData.width = Math.clamped(valData.position.width, valData.minWidth, maxW);\n\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\n         {\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\n         }\n      }\n\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = valData.height = Math.clamped(valData.position.height, valData.minHeight, maxH);\n\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\n         {\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\n         }\n      }\n\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\n      valData.position.left = Math.round(Math.clamped(valData.position.left, 0, maxL));\n\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\n      valData.position.top = Math.round(Math.clamped(valData.position.top, 0, maxT));\n\n      return valData.position;\n   }\n}\n","import { TransformData } from '../transform/TransformData.js';\n\nconst s_TRANSFORM_DATA = new TransformData();\n\nexport class TransformBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = Math.clamped(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = Math.clamped(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n","import { BasicBounds }     from './BasicBounds.js';\nimport { TransformBounds } from './TransformBounds.js';\n\nconst basicWindow = new BasicBounds({ lock: true });\nconst transformWindow = new TransformBounds({ lock: true });\n\nexport { basicWindow, BasicBounds, transformWindow, TransformBounds };\n","import { degToRad, mat4, vec3 }  from '@typhonjs-fvtt/runtime/svelte/math';\n\nimport * as constants            from '../constants.js';\n\nimport { TransformData }         from './TransformData.js';\n\n/** @type {number[]} */\nconst s_SCALE_VECTOR = [1, 1, 1];\n\n/** @type {number[]} */\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\n\n/** @type {Matrix4} */\nconst s_MAT4_RESULT = mat4.create();\n\n/** @type {Matrix4} */\nconst s_MAT4_TEMP = mat4.create();\n\n/** @type {Vector3} */\nconst s_VEC3_TEMP = vec3.create();\n\nexport class Transforms\n{\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   constructor()\n   {\n      this._data = {};\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this._data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this._data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this._data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this._data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this._data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this._data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this._data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this._data.rotateX = value;\n      }\n      else\n      {\n         if (this._data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this._data.rotateY = value;\n      }\n      else\n      {\n         if (this._data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this._data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this._data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this._data.scale = value;\n      }\n      else\n      {\n         if (this._data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this._data.translateX = value;\n      }\n\n      else\n      {\n         if (this._data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this._data.translateY = value;\n      }\n\n      else\n      {\n         if (this._data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this._data.translateZ = value;\n      }\n\n      else\n      {\n         if (this._data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this._data)\n   {\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this._data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given {@link PositionData}\n    * instance with the applied local transform data.\n    *\n    * @param {PositionData} position - The position data to process.\n    *\n    * @param {TransformData} [output] - Optional TransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {TransformData} The output TransformData instance.\n    */\n   getData(position, output = new TransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\n\n         if (constants.transformOriginDefault === position.transformOrigin)\n         {\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            vec3.transformMat4(rect[0], rect[0], translate[0]);\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            vec3.transformMat4(rect[1], rect[1], translate[0]);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            vec3.transformMat4(rect[2], rect[2], translate[0]);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            vec3.transformMat4(rect[3], rect[3], translate[0]);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n            vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= constants.transformKeysBitwise.scale;\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n               mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n               break;\n\n            case 'translateX':\n               seenKeys |= constants.transformKeysBitwise.translateX;\n               s_TRANSLATE_VECTOR[0] = data.translateX;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateY':\n               seenKeys |= constants.transformKeysBitwise.translateY;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = data.translateY;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateZ':\n               seenKeys |= constants.transformKeysBitwise.translateZ;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n                  break;\n\n               case 'translateX':\n                  s_TRANSLATE_VECTOR[0] = data[key];\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateY':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = data[key];\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateZ':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4Ortho(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\n      mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\n         mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {object} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given PositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of constants.transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (constants.transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this._data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this._data[key];\n            }\n         }\n      }\n   }\n}\n\n/**\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n * translation.\n *\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\n * bespoke points based on any `transformOrigin` set in {@link PositionData}.\n *\n * @param {string}   transformOrigin - The transform origin attribute from PositionData.\n *\n * @param {number}   width - The PositionData width or validation data width when 'auto'.\n *\n * @param {number}   height - The PositionData height or validation data height when 'auto'.\n *\n * @param {Matrix4[]}   output - Output Mat4 array.\n *\n * @returns {Matrix4[]} Output Mat4 array.\n */\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\n{\n   const vector = s_VEC3_TEMP;\n\n   switch (transformOrigin)\n   {\n      case 'top left':\n         vector[0] = vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top center':\n         vector[0] = -width * 0.5;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top right':\n         vector[0] = -width;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center left':\n         vector[0] = 0;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case null: // By default null / no transform is center.\n      case 'center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center right':\n         vector[0] = -width;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom left':\n         vector[0] = 0;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom right':\n         vector[0] = -width;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      // No valid transform origin parameter; set identity.\n      default:\n         mat4.identity(output[0]);\n         mat4.identity(output[1]);\n         break;\n   }\n\n   return output;\n}\n","import { writable }        from 'svelte/store';\n\nimport { TransformData }   from '../transform/TransformData.js';\nimport { PositionData }    from '../PositionData.js';\n\nexport class UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from Position.\n       *\n       * @type {PositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {PositionData}\n       */\n      this.dataSubscribers = new PositionData();\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto', height: number | 'auto'}}\n       */\n      this.dimensionData = { width: 0, height: 0 };\n\n      /**\n       * @type {PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {PositionOptions}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this Position / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {StyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {Transforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TransformData}\n       */\n      this.transformData = new TransformData();\n\n      /**\n       * @type {(function(PositionData): void)[]}\n       */\n      this.subscriptions = void 0;\n\n      /**\n       * @type {Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {Writable<TransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      // Seal data backing readable stores.\n      Object.seal(this.dimensionData);\n   }\n}\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\n * Svelte doesn't provide any events for the animate directive.\n *\n * The provided function below wraps a Svelte animate directive function generating bubbling events for start & end of\n * animation.\n *\n * These events are `animate:start` and `animate:end`.\n *\n * This is useful for instance if you are animating several nodes in a scrollable container where the overflow parameter\n * needs to be set to `none` while animating such that the scrollbar is not activated by the animation.\n *\n * Optionally you may also provide a boolean writable store that will be set to true when animation is active. In some\n * cases this leads to an easier implementation for gating on animation state.\n *\n * @example <caption>With events</caption>\n * const flipWithEvents = animateEvents(flip);\n * </script>\n *\n * <main on:animate:start={() => console.log('animate:start')\n *       on:animate:end={() => console.log('animate:end')}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n\n * @example <caption>With optional store</caption>\n * const isAnimating = writable(false);\n * const flipWithEvents = animateEvents(flip, isAnimating);\n * </script>\n *\n * <main class:no-scroll={$isAnimating}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n *\n * @param {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) => import('svelte/animate').AnimationConfig} fn -\n *        A Svelte animation function.\n *\n * @param {import('svelte/store').Writable<boolean>} [store] - An optional boolean writable store that is set to true\n *                                                             when animation is active.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) => import('svelte/animate').AnimationConfig}\n *          Wrapped animation function.\n */\nfunction animateEvents(fn, store = void 0)\n{\n   if (typeof fn !== 'function') { throw new TypeError(`'fn' is not a function.`); }\n   if (store !== void 0 && !isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\n\n   // Track a single start / end sequence across all animations.\n   let startFired = false;\n   let endFired = false;\n\n   return (node, animations, params = {}) =>\n   {\n      const animationConfig = fn(node, animations, params);\n\n      // Store any existing tick function.\n      const existingTick = animationConfig.tick;\n\n      // Use tick callback to fire events only once when t / time is 0 and 1.\n      animationConfig.tick = (t, u) =>\n      {\n         // If there is any tick function then invoke it.\n         if (existingTick) { existingTick(t, u); }\n\n         if (!startFired && t === 0)\n         {\n            if (store) { store.set(true); }\n            node.dispatchEvent(new CustomEvent('animate:start', { bubbles: true }));\n            startFired = true;\n            endFired = false;\n         }\n\n         if (!endFired && t === 1)\n         {\n            if (store) { store.set(false); }\n            node.dispatchEvent(new CustomEvent('animate:end', { bubbles: true }));\n            endFired = true;\n            startFired = false;\n         }\n      };\n\n      return animationConfig;\n   };\n}\n\n/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { animateEvents, nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { nextAnimationFrame }    from '@typhonjs-fvtt/runtime/svelte/animate';\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nexport class UpdateElementManager\n{\n   static list = [];\n   static listCntr = 0;\n\n   static updatePromise;\n\n   static get promise() { return this.updatePromise; }\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\n         }\n         else\n         {\n            s_UPDATE_ELEMENT(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            s_UPDATE_TRANSFORM(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\n      }\n      else\n      {\n         s_UPDATE_ELEMENT(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         s_UPDATE_TRANSFORM(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = updateData.dataSubscribers.copy(data);\n\n      const subscriptions = updateData.subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.left)\n   {\n      el.style.left = `${data.left}px`;\n   }\n\n   if (changeSet.top)\n   {\n      el.style.top = `${data.top}px`;\n   }\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.left || changeSet.top || changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\n   }\n}\n\n/**\n * Updates the applied transform data and sets the readble `transform` store.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update element data.\n */\nfunction s_UPDATE_TRANSFORM(el, updateData)\n{\n   s_VALIDATION_DATA.height = updateData.data.height !== 'auto' ? updateData.data.height :\n    updateData.styleCache.offsetHeight;\n\n   s_VALIDATION_DATA.width = updateData.data.width !== 'auto' ? updateData.data.width :\n    updateData.styleCache.offsetWidth;\n\n   s_VALIDATION_DATA.marginLeft = updateData.styleCache.marginLeft;\n\n   s_VALIDATION_DATA.marginTop = updateData.styleCache.marginTop;\n\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n   // when position width / height is 'auto'.\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA);\n\n   updateData.storeTransform.set(updateData.transformData);\n}\n\nconst s_VALIDATION_DATA = {\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0\n};\n","import {\n   propertyStore,\n   subscribeIgnoreFirst }        from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   isIterable,\n   isObject,\n   isPlainObject }               from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationAPI }          from './animation/AnimationAPI.js';\nimport { AnimationGroupAPI }     from './animation/AnimationGroupAPI.js';\nimport * as constants            from './constants.js';\nimport { convertRelative }       from './convertRelative.js';\nimport * as positionInitial      from './initial/index.js';\nimport { PositionChangeSet }     from './PositionChangeSet.js';\nimport { PositionData }          from './PositionData.js';\nimport { PositionStateAPI }      from './PositionStateAPI.js';\nimport { StyleCache }            from './StyleCache.js';\nimport { TransformData }         from './transform/TransformData.js';\nimport { AdapterValidators }     from './validators/AdapterValidators.js';\nimport * as positionValidators   from './validators/index.js';\nimport { Transforms }            from './transform/Transforms.js';\nimport { UpdateElementData }     from './update/UpdateElementData.js';\nimport { UpdateElementManager }  from './update/UpdateElementManager.js';\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nexport class Position\n{\n   /**\n    * @type {PositionData}\n    */\n   #data = new PositionData();\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    *\n    * @type {boolean}\n    */\n   #enabled = true;\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {PositionOptions}\n    */\n   #options = {\n      calculateTransform: false,\n      initialHelper: void 0,\n      ortho: true,\n      transformSubscribed: false\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {PositionParent}\n    */\n   #parent;\n\n   /**\n    * @type {StorePosition}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {StyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(PositionData): void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {Transforms}\n    */\n   #transforms = new Transforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {{browserCentered?: Centered, Centered?: *}} Initial position helpers.\n    */\n   static get Initial() { return positionInitial; }\n\n   /**\n    * Returns TransformData class / constructor.\n    *\n    * @returns {TransformData} TransformData class / constructor.\n    */\n   static get TransformData() { return TransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\n    *\n    * @returns {{basicWindow?: BasicBounds, transformWindow?: TransformBounds, TransformBounds?: *, BasicBounds?: *}}\n    *  Available validators.\n    */\n   static get Validators() { return positionValidators; }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators.\n    *\n    * // TODO: Consider more safety over options processing.\n    *\n    * @param {Position}          position - A position instance.\n    *\n    * @param {PositionOptions}   options - Position options.\n    *\n    * @returns {Position} A duplicate position instance.\n    */\n   static duplicate(position, options)\n   {\n      if (!(position instanceof Position)) { throw new TypeError(`'position' is not an instance of Position.`); }\n\n      const newPosition = new Position(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {PositionParent|PositionOptionsAll}   [parent] - A potential parent element or object w/ `elementTarget`\n    *                                                      getter. May also be the PositionOptions object w/ 1 argument.\n    *\n    * @param {PositionOptionsAll}   [options] - Default values.\n    */\n   constructor(parent, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parent))\n      {\n         options = parent;\n      }\n      else\n      {\n         this.#parent = parent;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      this.#styleCache = new StyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscriptions = this.#subscriptions;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      if (isObject(options))\n      {\n         // Set Position options\n         if (typeof options.calculateTransform === 'boolean')\n         {\n            this.#options.calculateTransform = options.calculateTransform;\n         }\n\n         if (typeof options.ortho === 'boolean')\n         {\n            this.#options.ortho = options.ortho;\n         }\n\n         // Set default values from options.\n\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\n          options.height === null)\n         {\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\n             Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\n         {\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\n         }\n\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\n         {\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\n         }\n\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\n         {\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\n         }\n\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\n         {\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            transforms.rotateX = data.rotateX = options.rotateX;\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            transforms.rotateY = data.rotateY = options.rotateY;\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            transforms.scale = data.scale = options.scale;\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\n         {\n            data.transformOrigin = constants.transformOrigins.includes(options.transformOrigin) ?\n             options.transformOrigin : null;\n         }\n\n         if (Number.isFinite(options.translateX) || options.translateX === null)\n         {\n            transforms.translateX = data.translateX = options.translateX;\n         }\n\n         if (Number.isFinite(options.translateY) || options.translateY === null)\n         {\n            transforms.translateY = data.translateY = options.translateY;\n         }\n\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\n         {\n            transforms.translateZ = data.translateZ = options.translateZ;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\n          options.width === null)\n         {\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\n             Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         // The main properties for manipulating Position.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      };\n\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set(data);\n         }\n      });\n\n      this.#stores.transformOrigin.values = constants.transformOrigins;\n\n      [this.#validators, this.#validatorData] = new AdapterValidators();\n\n      if (options?.initial || options?.positionInitial)\n      {\n         const initialHelper = options.initial ?? options.positionInitial;\n\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initialHelper = options.initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\n         else { this.validators.add(options.validator); }\n      }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns {boolean} Enabled state.\n    */\n   get enabled()\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link PositionParent} instance.\n    *\n    * @returns {PositionParent} The PositionParent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {PositionStateAPI} Position state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {StorePosition} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {TransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {PositionParent|void} parent - A PositionParent instance.\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number|null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number|null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number|null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {string} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|string|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|string|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|string|null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number|string|null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number|string|null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number|string|null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number|string|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|string|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|string|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {string} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (constants.transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|string|null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number|string|null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number|string|null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number|string|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|string|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|PositionData}  [position] - Target to assign current position data.\n    *\n    * @param {PositionGetOptions}   [options] - Defines options for specific keys and substituting null for numeric\n    *                                           default values.\n    *\n    * @returns {PositionData} Passed in object with current position data.\n    */\n   get(position = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         // Replace any null values potentially with numeric default values.\n         if (numeric)\n         {\n            for (const key of keys) { position[key] = this[key] ?? constants.numericDefaults[key]; }\n         }\n         else // Accept current values.\n         {\n            for (const key of keys) { position[key] = this[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete position[key]; }\n         }\n\n         return position;\n      }\n      else\n      {\n         const data = Object.assign(position, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { constants.setNumericDefaults(data); }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {PositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional application occurs\n    * popOut applications can set `this.options.positionable` to false ensuring no positional inline styles are\n    * applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying Position data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link Position.elementUpdated}.\n    *\n    * @param {PositionDataExtended} [position] - Position data to set.\n    *\n    * @returns {Position} This Position instance.\n    */\n   set(position = {})\n   {\n      if (typeof position !== 'object') { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\n      const immediateElementUpdate = position.immediateElementUpdate === true;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            {\n               // TODO: This is commented out as there is a Chrome bug that reduces quality / blurs\n               // child elements when `will-change: transform` is set.\n               // https://bugs.chromium.org/p/chromium/issues/detail?id=1343711#c4\n\n               // el.style.willChange = this.#options.ortho ? 'transform' : 'top, left, transform';\n            }\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any relative string position data to numeric inputs.\n         convertRelative(position, this);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && constants.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\n       position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\n      }\n\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\n       position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (typeof defaultData !== 'object')\n         {\n            this.#state.save({ name: '#defaultData', ...Object.assign({}, data) });\n         }\n\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\n         // This is for rAF based library integrations like GSAP.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    *\n    * @param {function(PositionData): void} handler - Callback function that is invoked on update / changes. Receives\n    *                                                 a copy of the PositionData.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @param {PositionDataExtended} opts -\n    *\n    * @param {number|null} opts.left -\n    *\n    * @param {number|null} opts.top -\n    *\n    * @param {number|null} opts.maxHeight -\n    *\n    * @param {number|null} opts.maxWidth -\n    *\n    * @param {number|null} opts.minHeight -\n    *\n    * @param {number|null} opts.minWidth -\n    *\n    * @param {number|'auto'|null} opts.width -\n    *\n    * @param {number|'auto'|null} opts.height -\n    *\n    * @param {number|null} opts.rotateX -\n    *\n    * @param {number|null} opts.rotateY -\n    *\n    * @param {number|null} opts.rotateZ -\n    *\n    * @param {number|null} opts.scale -\n    *\n    * @param {string} opts.transformOrigin -\n    *\n    * @param {number|null} opts.translateX -\n    *\n    * @param {number|null} opts.translateY -\n    *\n    * @param {number|null} opts.translateZ -\n    *\n    * @param {number|null} opts.zIndex -\n    *\n    * @param {number|null} opts.rotation - alias for rotateZ\n    *\n    * @param {*} opts.rest -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {StyleCache} styleCache -\n    *\n    * @returns {null|PositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\n          this.#options.initialHelper.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\n          this.#options.initialHelper.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = constants.transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         s_VALIDATION_DATA.parent = parent;\n\n         s_VALIDATION_DATA.el = el;\n\n         s_VALIDATION_DATA.computed = styleCache.computed;\n\n         s_VALIDATION_DATA.transforms = this.#transforms;\n\n         s_VALIDATION_DATA.height = height;\n\n         s_VALIDATION_DATA.width = width;\n\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\n\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\n\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            s_VALIDATION_DATA.position = currentPosition;\n            s_VALIDATION_DATA.rest = rest;\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_DATA_UPDATE = new PositionData();\n\n/**\n * @type {ValidationData}\n */\nconst s_VALIDATION_DATA = {\n   position: void 0,\n   parent: void 0,\n   el: void 0,\n   computed: void 0,\n   transforms: void 0,\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0,\n   maxHeight: void 0,\n   maxWidth: void 0,\n   minHeight: void 0,\n   minWidth: void 0,\n   rest: void 0\n};\n\nObject.seal(s_VALIDATION_DATA);\n\n/**\n * @typedef {object} PositionInitialHelper\n *\n * @property {(width: number) => number} getLeft - Returns the left position given the width of the browser window.\n *\n * @property {(height: number) => number} getTop - Returns the top position given the height of the browser window.\n */\n\n/**\n * @typedef {object} PositionDataExtended\n *\n * @property {number|string|null} [height] -\n *\n * @property {number|string|null} [left] -\n *\n * @property {number|string|null} [maxHeight] -\n *\n * @property {number|string|null} [maxWidth] -\n *\n * @property {number|string|null} [minHeight] -\n *\n * @property {number|string|null} [minWidth] -\n *\n * @property {number|string|null} [rotateX] -\n *\n * @property {number|string|null} [rotateY] -\n *\n * @property {number|string|null} [rotateZ] -\n *\n * @property {number|string|null} [scale] -\n *\n * @property {number|string|null} [top] -\n *\n * @property {string|null} [transformOrigin] -\n *\n * @property {number|string|null} [translateX] -\n *\n * @property {number|string|null} [translateY] -\n *\n * @property {number|string|null} [translateZ] -\n *\n * @property {number|string|null} [width] -\n *\n * @property {number|string|null} [zIndex] -\n *\n * Extended properties -----------------------------------------------------------------------------------------------\n *\n * @property {boolean} [immediateElementUpdate] - When true any associated element is updated immediately.\n *\n * @property {number|null} [rotation] - Alias for `rotateZ`.\n */\n\n/**\n * @typedef {object} PositionGetOptions\n *\n * @property {Iterable<string>} keys - When provided only these keys are copied.\n *\n * @property {Iterable<string>} exclude - When provided these keys are excluded.\n *\n * @property {boolean} numeric - When true any `null` values are converted into defaults.\n */\n\n/**\n * @typedef {object} PositionOptions - Options set in constructor.\n *\n * @property {boolean} calculateTransform - When true always calculate transform data.\n *\n * @property {PositionInitialHelper} initialHelper - Provides a helper for setting initial position data.\n *\n * @property {boolean} ortho - Sets Position to orthographic mode using just transform / matrix3d for positioning.\n *\n * @property {boolean} transformSubscribed - Set to true when there are subscribers to the readable transform store.\n */\n\n/**\n * @typedef {PositionOptions & PositionData} PositionOptionsAll\n */\n\n/**\n * @typedef {HTMLElement | object} PositionParent\n *\n * @property {Function} [elementTarget] - Potentially returns any parent object.\n */\n\n/**\n * @typedef {object} ResizeObserverData\n *\n * @property {number|undefined} contentHeight -\n *\n * @property {number|undefined} contentWidth -\n *\n * @property {number|undefined} offsetHeight -\n *\n * @property {number|undefined} offsetWidth -\n */\n\n/**\n * @typedef {object} StorePosition - Provides individual writable stores for {@link Position}.\n *\n * @property {import('svelte/store').Readable<{width: number, height: number}>} dimension - Readable store for dimension\n *                                                                                          data.\n *\n * @property {import('svelte/store').Readable<HTMLElement>} element - Readable store for current element.\n *\n * @property {import('svelte/store').Writable<number|null>} left - Derived store for `left` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} top - Derived store for `top` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} width - Derived store for `width` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} height - Derived store for `height` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxHeight - Derived store for `maxHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxWidth - Derived store for `maxWidth` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minHeight - Derived store for `minHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minWidth - Derived store for `minWidth` updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentHeight - Readable store for `contentHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentWidth - Readable store for `contentWidth`.\n *\n * @property {import('svelte/store').Writable<ResizeObserverData>} resizeObserved - Protected store for resize observer updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetHeight - Readable store for `offsetHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetWidth - Readable store for `offsetWidth`.\n *\n * @property {import('svelte/store').Writable<number|null>} rotate - Derived store for `rotate` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateX - Derived store for `rotateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateY - Derived store for `rotateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateZ - Derived store for `rotateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} scale - Derived store for `scale` updates.\n *\n * @property {import('svelte/store').Readable<TransformData>} transform - Readable store for transform data.\n *\n * @property {import('svelte/store').Writable<string>} transformOrigin - Derived store for `transformOrigin`.\n *\n * @property {import('svelte/store').Writable<number|null>} translateX - Derived store for `translateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateY - Derived store for `translateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateZ - Derived store for `translateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} zIndex - Derived store for `zIndex` updates.\n */\n\n/**\n * @typedef {object} ValidationData\n *\n * @property {PositionData} position -\n *\n * @property {PositionParent} parent -\n *\n * @property {HTMLElement} el -\n *\n * @property {CSSStyleDeclaration} computed -\n *\n * @property {Transforms} transforms -\n *\n * @property {number} height -\n *\n * @property {number} width -\n *\n * @property {number|undefined} marginLeft -\n *\n * @property {number|undefined} marginTop -\n *\n * @property {number|undefined} maxHeight -\n *\n * @property {number|undefined} maxWidth -\n *\n * @property {number|undefined} minHeight -\n *\n * @property {number|undefined} minWidth -\n *\n * @property {object} rest - The rest of any data submitted to {@link Position.set}\n */\n","import { linear }             from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isObject }           from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Provides the ability the save / restore application state for positional and UI state such as minimized status.\n *\n * You can restore a saved state with animation; please see the options of {@link ApplicationState.restore}.\n */\nexport class ApplicationState\n{\n   /** @type {ApplicationShellExt} */\n   #application;\n\n   /** @type {Map<string, ApplicationStateData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {ApplicationShellExt}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationStateData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {ApplicationStateData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationStateData} Saved application data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationStateData|Promise<ApplicationStateData>} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         if (async)\n         {\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\n         }\n         else\n         {\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationStateData} Current application data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationShellExt|Promise<ApplicationShellExt>} When synchronous the application or Promise when\n    *                                                             animating resolving with application.\n    */\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return application;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      if (animateTo && !rendered)\n      {\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n         return application;\n      }\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position,\n          { duration, ease, interpolate }).finished.then((cancelled) =>\n         {\n            if (cancelled) { return application; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            return application;\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationStateData\n *\n * @property {PositionDataExtended}   position - Application position.\n *\n * @property {object}         beforeMinimized - Any application saved position state for #beforeMinimized\n *\n * @property {object}         options - Application options.\n *\n * @property {object}         ui - Application UI state.\n */\n","import { isObject } from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\n */\nexport class GetSvelteData\n{\n   /**\n    * @type {MountedAppShell[]|null[]}\n    */\n   #applicationShellHolder;\n\n   /**\n    * @type {SvelteData[]}\n    */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {MountedAppShell[]|null[]}  applicationShellHolder - A reference to the MountedAppShell array.\n    *\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {MountedAppShell|null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return isObject(data) ? data?.component : void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {Generator<Array<number|SvelteComponent>>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {Generator<SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index -\n    *\n    * @returns {SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {object} component - Svelte component.\n    *\n    * @returns {SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import {\n   isApplicationShell,\n   isObject,\n   parseSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            opts - Optional parameters.\n *\n * @param {object}            opts.app - The target application\n *\n * @param {HTMLElement}       opts.template - Any HTML template.\n *\n * @param {object}            opts.config - Svelte component options\n *\n * @param {Function}          opts.elementRootUpdate - A callback to assign to the external context.\n *\n * @returns {SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\n{\n   const svelteOptions = isObject(config.options) ? config.options : {};\n\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (config.target instanceof HTMLElement)\n   {\n      target = config.target;\n   }\n   // A string target defines a selector to find in existing HTML.\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\n   {\n      target = template.querySelector(config.target);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\n       'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   svelteConfig.context.set('external', new Proxy({}, {\n      get(targetUnused, prop)\n      {\n         console.warn(`[TRL] Deprecation warning: Please change getContext('external') to getContext('#external').`);\n         return externalContext[prop];\n      }\n   }));\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      template.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\n           svelteOptions.selectorElement}', not found for config:\\n`,\n          'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","import { derived, writable }  from \"svelte/store\";\n\nimport {\n   propertyStore,\n   subscribeIgnoreFirst,\n   TJSSessionStorage }        from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication and retrievable by\n * {@link SvelteApplication.reactive}.\n *\n * There are several reactive getters for UI state such and for two-way bindings / stores see\n * {@link SvelteReactive.storeUIState}:\n * - {@link SvelteReactive.dragging}\n * - {@link SvelteReactive.minimized}\n * - {@link SvelteReactive.resizing}\n *\n * There are also reactive getters / setters for {@link SvelteApplicationOptions} and Foundry\n * {@link ApplicationOptions}. You can use the following as one way bindings and update the associated stores. For\n * two-way bindings / stores see {@link SvelteReactive.storeAppOptions}.\n *\n * - {@link SvelteReactive.draggable}\n * - {@link SvelteReactive.focusAuto}\n * - {@link SvelteReactive.focusKeep}\n * - {@link SvelteReactive.focusTrap}\n * - {@link SvelteReactive.headerButtonNoClose}\n * - {@link SvelteReactive.headerButtonNoLabel}\n * - {@link SvelteReactive.headerIcon}\n * - {@link SvelteReactive.headerNoTitleMinimized}\n * - {@link SvelteReactive.minimizable}\n * - {@link SvelteReactive.popOut}\n * - {@link SvelteReactive.positionable}\n * - {@link SvelteReactive.resizable}\n * - {@link SvelteReactive.title}\n *\n * An instance of TJSSessionStorage is accessible via {@link SvelteReactive.sessionStorage}. Optionally you can pass\n * in an existing instance that can be shared across multiple SvelteApplications by setting\n * {@link SvelteApplicationOptions.sessionStorage}.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * This API is not sealed, and it is recommended that you extend it with accessors to get / set data that is reactive\n * in your application. An example of setting an exported prop `document` from the main mounted application shell.\n *\n * @example\n * import { hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\n *\n * // Note: make a normal comment.\n * //  * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\n * //  *                             Document with the mounted application shell Svelte component.\n * //  *\n * //  * @memberof SvelteReactive#\n * //  *\n * Object.defineProperty(this.reactive, 'document', {\n *    get: () => this.svelte?.applicationShell?.document,\n *    set: (document) =>\n *    {\n *       const component = this.svelte?.applicationShell;\n *       if (hasSetter(component, 'document')) { component.document = document; }\n *    }\n * });\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {TJSSessionStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSSessionStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSSessionStorage.`);\n      }\n\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteStores|void} Internal methods to interact with Svelte stores.\n    * @package\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiOptionsUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {TJSSessionStorage} Returns TJSSessionStorage instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApplicationOptions.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string|void}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApplication.position.set}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string|undefined|null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * ` storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApplication app options {@link SvelteApplicationOptions.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApplicationOptions.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} opts - Optional parameters (for internal use)\n    *\n    * @param {boolean} opts.headerButtonNoClose - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} opts.headerButtonNoLabel - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n","// import { Position }           from '@typhonjs-fvtt/runtime/svelte/store';\nimport { Position }           from './position/Position.js';\n\nimport {\n   A11yHelper,\n   deepMerge,\n   hasGetter,\n   isApplicationShell,\n   isHMRProxy,\n   isObject,\n   outroAndDestroy }          from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   SvelteReactive }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\n * load one or more components from `defaultOptions`.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {Position}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * {@link SvelteData}.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {SvelteStores}\n    */\n   #stores;\n\n   /**\n    * @param {SvelteApplicationOptions} options - The options for the application.\n    *\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize Position with the position object set by Application.\n      this.#position = new Position(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve Position by `this.position`.\n       *\n       * @member {Position} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {SvelteApplicationOptions} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: Position.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true Position is optimized for orthographic use.\n         positionValidator: Position.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of SessionStorage to share across SvelteApplications.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html : [this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    */\n   bringToTop({ force = false } = {})\n   {\n      if (force || this.popOut) { super.bringToTop(); }\n\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\n      {\n         // Blur current active element.\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n         // Make document body focused.\n         document.body.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    * @ignore\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * @param {Application} app                     The Application instance being closed\n          *\n          * @param {jQuery[]} html                       The application HTML when it is closed\n          *\n          * @function closeApplication\n          *\n          * @memberof hookEvents\n          */\n         Hooks.call(`close${cls.name}`, this, el);\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n      /**\n       * @ignore\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n      delete globalThis.ui.windows[this.appId];\n      /**\n       * @ignore\n       */\n      this._minimized = false;\n      /**\n       * @ignore\n       */\n      this._scrollPositions = null;\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store options.\n      this.#stores.uiOptionsUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @param {JQuery} html -\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (Array.isArray(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig({\n               app: this,\n               template: html[0],\n               config: svelteConfig,\n               elementRootUpdate\n            });\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n               // refreshes. Update the element root accordingly and force an update to Position.\n               // See this issue for info about `on_hmr`:\n               // https://github.com/sveltejs/svelte-hmr/issues/57\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n               {\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n               }\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (isObject(this.options.svelte))\n      {\n         const svelteData = loadSvelteConfig({\n            app: this,\n            template: html[0],\n            config: this.options.svelte,\n            elementRootUpdate\n         });\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n            // refreshes. Update the element root accordingly and force an update to Position.\n            // See this issue for info about `on_hmr`:\n            // https://github.com/sveltejs/svelte-hmr/issues/57\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n            {\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n            }\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n          this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n      }\n\n      if (this.#elementTarget === null || this.#elementTarget === void 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteMount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteRemount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link Position.set}.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      if (!this.#onMount)\n      {\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @param {object} data         The data used to render the inner template\n    *\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\n    *\n    * @protected\n    * @ignore\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @returns {Promise<JQuery>} Outer frame / unused.\n    * @protected\n    * @ignore\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link Position.validators} functionality.\n    *\n    * @param {PositionDataExtended}   [position] - Position data.\n    *\n    * @returns {Position} The updated position object for the application containing the new values\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.#elementTarget]);\n\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n\n/**\n * @typedef {ApplicationOptions} SvelteApplicationOptions\n *\n * @property {boolean}  [defaultCloseAnimation=true] - If false the default slide close animation is not run.\n *\n * @property {boolean}  [draggable=true] - If true then application shells are draggable.\n *\n * @property {boolean}  [focusAuto=true] - When true auto-management of app focus is enabled.\n *\n * @property {boolean}  [focusKeep=false] - When `focusAuto` and `focusKeep` is true; keeps internal focus.\n *\n * @property {object}   [focusSource] - Defines A11yHelper focus source to apply when application closes.\n *\n * @property {boolean}  [headerButtonNoClose=false] - If true then the close header button is removed.\n *\n * @property {boolean}  [headerButtonNoLabel=false] - If true then header button labels are removed.\n *\n * @property {boolean}  [headerNoTitleMinimized=false] - If true then header title is hidden when minimized.\n *\n * @property {number}   [minHeight=MIN_WINDOW_HEIGHT] - Assigned to position. Number specifying minimum window height.\n *\n * @property {number}   [minWidth=MIN_WINDOW_WIDTH] - Assigned to position. Number specifying minimum window width.\n *\n * @property {boolean}  [positionable=true] - If false then `position.set` does not take effect.\n *\n * @property {PositionInitialHelper}   [positionInitial] - A helper for initial position placement.\n *\n * @property {boolean}  [positionOrtho=true] - When true Position is optimized for orthographic use.\n *\n * @property {PositionValidatorOptions}   [positionValidator] - A validator function or data or list of validators.\n *\n * @property {object}   [sessionStorage] - An instance of TJSSessionStorage to share across SvelteApplications.\n *\n * @property {object}   [svelte] - A Svelte configuration object defining the main component.\n *\n * @property {string}   [transformOrigin='top left'] - By default, 'top / left' respects rotation when minimizing.\n */\n\n/**\n * @typedef {object} SvelteData\n *\n * @property {object}                           config -\n *\n * @property {import('svelte').SvelteComponent} component -\n *\n * @property {HTMLElement}                      element -\n *\n * @property {boolean}                          injectHTML -\n */\n\n/**\n * @typedef {object} SvelteStores\n *\n * @property {import('svelte/store').Writable.update} appOptionsUpdate - Update function for app options store.\n *\n * @property {Function} subscribe - Subscribes to local stores.\n *\n * @property {import('svelte/store').Writable.update} uiOptionsUpdate - Update function for UI options store.\n *\n * @property {Function} unsubscribe - Unsubscribes from local stores.\n */\n","import { StyleManager } from '@typhonjs-fvtt/runtime/svelte/util';\n\nconst s_STYLE_KEY = '#__trl-root-styles';\n\nconst cssVariables = new StyleManager({ docKey: s_STYLE_KEY, version: 1 });\n\nexport { cssVariables };\n","import { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels, isObject, debounce, hasSetter, isIterable } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { cubicOut } from 'svelte/easing';\n\n/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n *\n * @returns {{destroy: Function}} Lifecycle functions.\n */\nfunction alwaysBlur(node)\n{\n   /**\n    * Blurs node if active element.\n    */\n   function blurNode()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blurNode);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blurNode)\n   };\n}\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes are directly set on target.\n * - target is a function; the function is invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (isObject(stores) || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType !== null && targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {object | Function} ResizeObserverTarget\n *\n * @property {number} [contentHeight] -\n *\n * @property {number} [contentWidth] -\n *\n * @property {number} [offsetHeight] -\n *\n * @property {number} [offsetWidth] -\n *\n * @property {Writable<object> | Function} [resizedObserver] - Either a function or a writable store.\n *\n * @property {Function} [setContentSize] - A function that is invoked with content width & height changes.\n *\n * @property {Function} [setDimension] - A function that is invoked with offset width & height changes.\n *\n * @property {{resizedObserver: Writable<object>}} [stores] - An object with a writable store.\n */\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n *\n * @returns {{destroy: Function, update: Function}} Lifecycle functions.\n */\nfunction applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   /**\n    * Updates element `scrollTop`.\n    *\n    * @param {number}   value -\n    */\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, debounce(() =>\n   {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n\n/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n *\n * @returns {{destroy: Function}} Lifecycle functions.\n */\nfunction autoBlur(node)\n{\n   /**\n    * Removes listener on blur.\n    */\n   function onBlur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Adds listener on focus.\n    */\n   function onFocus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    *\n    * @param {PointerEvent} event -\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', onBlur);\n   node.addEventListener('focus', onFocus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', onBlur);\n         node.removeEventListener('focus', onFocus);\n      }\n   };\n}\n\n/**\n * Provides an action to monitor focus state of a given element and set an associated store with current focus state.\n *\n * This action is usable with any writable store.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {import('svelte/store').Writable<boolean>}  storeFocused - Update store for focus changes.\n *\n * @returns {{update: (function(object): void), destroy: (function(): void)}} Action lifecycle methods.\n */\nfunction isFocused(node, storeFocused)\n{\n   let localFocused = false;\n\n   /**\n    * Updates `storeFocused` w/ current focused state.\n    *\n    * @param {boolean}  current - current focused state.\n    */\n   function setFocused(current)\n   {\n      localFocused = current;\n\n      if (isWritableStore(storeFocused)) { storeFocused.set(localFocused); }\n   }\n\n   /**\n    * Focus event listener.\n    */\n   function onFocus()\n   {\n      setFocused(true);\n   }\n\n   /**\n    * Blur event listener.\n    */\n   function onBlur()\n   {\n      setFocused(false);\n   }\n\n   /**\n    * Activate listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n   }\n\n   /**\n    * Remove listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('focus', onFocus);\n      node.removeEventListener('blur', onBlur);\n   }\n\n   activateListeners();\n\n   return {\n      update: (newStoreFocused) =>  // eslint-disable-line no-shadow\n      {\n         storeFocused = newStoreFocused;\n         setFocused(localFocused);\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\n/**\n * Provides an action to forward on key down & up events. This can be any object that has associated `keydown` and\n * `keyup` methods. See {@link KeyStore} for a store implementation.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {{keydown: Function, keyup: Function}}   keyStore - Object to forward events key down / up events to...\n *\n * @returns {{update: (function(object): void), destroy: (function(): void)}} Action lifecycle methods.\n */\nfunction keyforward(node, keyStore)\n{\n   if (typeof keyStore?.keydown !== 'function' || typeof keyStore.keyup !== 'function')\n   {\n      throw new TypeError(`'keyStore' doesn't have required 'keydown' or 'keyup' methods.`);\n   }\n\n   /**\n    * @param {KeyboardEvent} event -\n    */\n   function onKeydown(event)\n   {\n      keyStore.keydown(event);\n   }\n\n   /**\n    * @param {KeyboardEvent} event -\n    */\n   function onKeyup(event)\n   {\n      keyStore.keyup(event);\n   }\n\n   /**\n    * Activates key listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('keydown', onKeydown);\n      node.addEventListener('keyup', onKeyup);\n   }\n\n   /**\n    * Removes key listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('keydown', onKeydown);\n      node.removeEventListener('keyup', onKeyup);\n   }\n\n   activateListeners();\n\n   return {\n      update: (newKeyStore) =>  // eslint-disable-line no-shadow\n      {\n         keyStore = newKeyStore;\n\n         if (typeof keyStore?.keydown !== 'function' || typeof keyStore.keyup !== 'function')\n         {\n            throw new TypeError(`'newKeyStore' doesn't have required 'keydown' or 'keyup' methods.`);\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {object}      properties - Key / value object of properties to set.\n *\n * @returns {Function} Update function.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (typeof properties !== 'object') { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      update(newProperties)\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\n/**\n * Provides an action to apply a Position instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {Position}          position - A position instance.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   if (hasSetter(position, 'parent')) { position.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\n\n         if (hasSetter(position)) { position.parent = void 0; }\n\n         position = newPosition;\n\n         if (hasSetter(position, 'parent')) { position.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given {@link Position}\n * instance provided. When the attached boolean store state changes the draggable action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {Position}          params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {import('svelte/store').Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\"\n *                                                                            state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @param {Iterable<string>}  [params.hasTargetClassList] - When defined any event targets that have a class in this\n *                                                          list are allowed.\n *\n * @param {Iterable<string>}  [params.ignoreTargetClassList] - When defined any event targets that have a class in this\n *                                                             list are ignored.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\n easeOptions = { duration: 0.1, ease: cubicOut }, hasTargetClassList, ignoreTargetClassList })\n{\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\n   {\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\n   }\n\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\n   {\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n   }\n\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {quickToCallback}\n    */\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n\n   /**\n    * Remember event handlers associated with this action so they may be later unregistered.\n    *\n    * @type {object}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\n      dragMove: ['pointermove', (e) => onDragPointerChange(e), false],\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      // Do not process if the position system is not enabled.\n      if (!position.enabled) { return; }\n\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n      // class.\n      if (ignoreTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         for (const targetClass of ignoreTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass)) { return; }\n         }\n      }\n\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n      // matching class from the list.\n      if (hasTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         let foundTarget = false;\n\n         for (const targetClass of hasTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass))\n            {\n               foundTarget = true;\n               break;\n            }\n         }\n\n         if (!foundTarget) { return; }\n      }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (ease)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         s_POSITION_DATA.left = newLeft;\n         s_POSITION_DATA.top = newTop;\n\n         position.set(s_POSITION_DATA);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (options.position !== void 0 && options.position !== position)\n         {\n            position = options.position;\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n\n         if (isObject(options.easeOptions))\n         {\n            easeOptions = options.easeOptions;\n            quickTo.options(easeOptions);\n         }\n\n         if (options.hasTargetClassList !== void 0)\n         {\n            if (!isIterable(options.hasTargetClassList))\n            {\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               hasTargetClassList = options.hasTargetClassList;\n            }\n         }\n\n         if (options.ignoreTargetClassList !== void 0)\n         {\n            if (!isIterable(options.ignoreTargetClassList))\n            {\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               ignoreTargetClassList = options.ignoreTargetClassList;\n            }\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nclass DraggableOptions\n{\n   #ease = false;\n\n   #easeOptions = { duration: 0.1, ease: cubicOut };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(DraggableOptions): void)[]}\n    */\n   #subscriptions = [];\n\n   constructor({ ease, easeOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (newEaseOptions === null || typeof newEaseOptions !== 'object')\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n   }\n\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = false;\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {function(DraggableOptions): void} handler - Callback function that is invoked on update / changes.\n    *                                                 Receives the DraggableOptions object / instance.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptions instance.\n *\n * @param {{ ease?: boolean, easeOptions?: object }} options - Draggable options.\n *\n * @returns {DraggableOptions} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptions(options);\n\n/**\n * Used for direct call to `position.set`.\n *\n * @type {{top: number, left: number}}\n */\nconst s_POSITION_DATA = { left: 0, top: 0 };\n\nexport { alwaysBlur, applyPosition, applyScrolltop, applyStyles, autoBlur, draggable, isFocused, keyforward, resizeObserver };\n//# sourceMappingURL=index.js.map\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/svelte/math';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = options.easing ?? linear;\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingRotate=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = options.easingFade || options.easing || linear;\n   const easingRotate = options.easingRotate || options.easing || linear;\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingSlide=linear] - The easing function to apply to the slide transition.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = options.easingFade || options.easing || linear;\n   const slideEasing = options.easingSlide || options.easing || linear;\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node);\n\n   return {\n      delay: options.delay || 0,\n      duration: options.duration || 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, params?: object) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: object) => import('svelte/transition').TransitionConfig} -\n *          Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, params = {}) => fn(node, params);\n}\n\nconst s_DEFAULT_TRANSITION = () => void 0;\nconst s_DEFAULT_TRANSITION_OPTIONS = {};\n\nexport { rotate, rotateFade, s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n */\nexport class AppShellContextInternal\n{\n   /** @type {InternalAppStores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {InternalAppStores} The internal context stores for elementContent / elementRoot\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n\n/**\n * @typedef {object} InternalAppStores\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementContent - The window content element.\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementRoot - The window root element.\n */\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally, a\n    * `title` field is supported to give a tool tip for the button. For backward compatibility `onclick` is supported,\n    * but for uniformity across TRL defining an `onPress` function is recommended. If defined it is invoked when\n    * the button is clicked or `Enter` key pressed and state is updated accordingly.\n    *\n    * TRL also supports the following extra button data:\n    * - {keyCode='Enter'}           keyCode: A string conforming to `KeyboardEvent.code` to activate `onPress` callback.\n    * - {keepMinimized=false}       keepMinimized: When true the button is not removed when app minimized.\n    * - {Function}                  onContextMenu: Invoked when right mouse button or contextmenu key is pressed.\n    * - {Function}                  onPress: Invoked when left mouse button or `keyCode` key is pressed.\n    * - {Record<string, string>}    styles: Additional inline styles to apply to button.\n    * - {string}                    title: Tooltip title.\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action';\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\n   import { isObject }      from '@typhonjs-fvtt/runtime/svelte/util';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   $: title = isObject(button) && typeof button.title === 'string' ? localize(button.title) : '';\n\n   // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n   $: icon = isObject(button) && typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ?\n    button.icon : `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n   $: label = isObject(button) && typeof button.label === 'string' ? localize(button.label) : void 0;\n\n   $: keepMinimized = isObject(button) && typeof button.keepMinimized === 'boolean' ? button.keepMinimized : false;\n\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode : 'Enter';\n\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles : void 0;\n\n   function onClick(event)\n   {\n      // Accept `onPress or `onclick` as the function / data to invoke.\n      const invoke = button?.onPress ?? button?.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   function onContextMenu(event)\n   {\n      // Accept `onContextMenu` as the function / data to invoke.\n      const invoke = button?.onContextMenu;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   /**\n    * Consume / stop propagation of key down when key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeydown(event)\n   {\n      if (event.code === keyCode)\n      {\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Handle press event if key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         const invoke = button.onPress ?? button.onclick;\n\n         if (typeof invoke === 'function')\n         {\n            invoke.call(button, event);\n            button = button; // This provides a reactive update if button data changes.\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- svelte-ignore a11y-missing-attribute -->\n<a on:click|preventDefault|stopPropagation={onClick}\n   on:contextmenu|preventDefault|stopPropagation={onContextMenu}\n   on:keydown={onKeydown}\n   on:keyup={onKeyup}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\"\n   class:keep-minimized={keepMinimized}\n   aria-label={label}\n   tabindex=0\n   role=button>\n    {@html icon}{#if label}<span class:has-icon={icon !== void 0}>{label}</span>{/if}\n</a>\n\n<style>\n   a {\n      padding: var(--tjs-app-header-button-padding, 0 3px);\n   }\n\n   a :global(i) {\n      padding: var(--tjs-app-header-button-icon-padding, 0);\n   }\n\n   a:hover {\n      text-shadow: var(--tjs-app-header-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   a:focus-visible {\n      box-shadow: var(--tjs-app-header-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-app-header-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-app-header-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-app-header-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   span {\n      padding: var(--tjs-app-header-button-label-padding, 0);\n   }\n\n   span.has-icon {\n      padding: var(--tjs-app-header-button-label-padding, 0 0 0 3px);\n   }\n</style>\n","<script>\n   import { getContext }            from 'svelte';\n   import { cubicOut }              from 'svelte/easing';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   import {\n      isObject,\n      isSvelteComponent }           from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep } = application.reactive.storeAppOptions;\n\n   const { elementRoot } = getContext('#internal').stores;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderIcon = application.reactive.storeAppOptions.headerIcon;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   // These classes in the window header allow dragging.\n   const s_DRAG_TARGET_CLASSLIST = Object.freeze(['tjs-app-icon', 'tjs-window-header-spacer',\n    'window-header', 'window-title']);\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.08 seconds and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { ease: true, easeOptions: { duration: 0.08, ease: cubicOut } },\n    isObject(draggableOptions) ? draggableOptions : {}, { position: application.position, active:\n     $storeDraggable, storeDragging, hasTargetClassList: s_DRAG_TARGET_CLASSLIST });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttonsLeft;\n   let buttonsRight;\n\n   $:\n   {\n      buttonsLeft = [];\n      buttonsRight = [];\n\n      for (const button of $storeHeaderButtons)\n      {\n         const buttonsList = typeof button?.alignLeft === 'boolean' && button?.alignLeft ? buttonsLeft : buttonsRight;\n\n         // If the button is a Svelte component set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n         buttonsList.push(isSvelteComponent(button) ? { class: button, props: {} } :\n          { class: TJSHeaderButton, props: { button } });\n      }\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = (event) =>\n      {\n         // Only toggle minimize state if window title or header is the event target. Also allow toggle state if the\n         // event target has 'keep-minimized' class.\n         if (event.target.classList.contains('window-title') || event.target.classList.contains('window-header') ||\n           event.target.classList.contains('keep-minimized'))\n         {\n            application._onToggleMinimize(event);\n         }\n      }\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n   /**\n    * Explicitly focus `elementRoot` if pointer event is not consumed by header buttons / components. This allows\n    * keyboard tab navigation to select header buttons.\n    *\n    * Note: if `focusKeep` app option store is set to true `elementRoot` is only focused if the current browser wide\n    * active element is not contained inside the app element.\n    */\n   function onPointerdown(event)\n   {\n      const rootEl = $elementRoot;\n\n      if ($focusAuto && rootEl instanceof HTMLElement && rootEl?.isConnected)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !rootEl.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               rootEl.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            rootEl.focus();\n         }\n      }\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}\n           on:pointerdown={onPointerdown}>\n      {#if typeof $storeHeaderIcon === 'string'}\n         <img class=\"tjs-app-icon keep-minimized\" src={$storeHeaderIcon} alt=icon>\n      {/if}\n      <h4 class=window-title style:display={displayHeaderTitle}>\n         {localize($storeTitle)}\n      </h4>\n      {#each buttonsLeft as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n      <span class=\"tjs-window-header-spacer keep-minimized\" />\n      {#each buttonsRight as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   /**\n    * Provides a zero space element that expands to the right creating the gap between window title and left aligned\n    * buttons and right aligned buttons. Note the use of a negative left margin to remove the gap between elements.\n    */\n   .tjs-window-header-spacer {\n      flex: 0;\n      margin-left: calc(-1 * var(--tjs-app-header-gap, 5px));\n      margin-right: auto;\n   }\n\n   .window-header {\n      flex: var(--tjs-app-header-flex, 0 0 30px);\n      gap: var(--tjs-app-header-gap, 5px);\n      padding: var(--tjs-app-header-padding, 0 4px);\n   }\n\n   .window-header .tjs-app-icon {\n      align-self: center;\n      border-radius: var(--tjs-app-header-icon-border-radius, 4px);\n      flex: 0 0 var(--tjs-app-header-icon-width, 24px);\n      height: var(--tjs-app-header-icon-height, 24px);\n   }\n\n   .window-title {\n      gap: var(--tjs-app-header-gap, 5px);\n      max-width: fit-content;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   import { A11yHelper }        from '@typhonjs-fvtt/runtime/svelte/util';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (elementRoot instanceof HTMLElement)\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (firstFocusEl instanceof HTMLElement && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus} />\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('#external').application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('storeElementRoot');\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         application._onResize(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={{active: $storeResizable, storeResizing}}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n","<script>\n   /**\n    * Provides an application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import {\n      A11yHelper,\n      isObject }                       from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSFocusWrap                 from './TJSFocusWrap.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import {\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/runtime/svelte/transition';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   // export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Store application reference.\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = void 0;\n   export let outTransition = void 0;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : void 0;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && isObject(transitionOptions) ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = void 0; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = void 0; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\n      {\n         application.options.defaultCloseAnimation = outTransition === void 0;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!(targetEl instanceof HTMLElement)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === document.activeElement || firstFocusEl === document.activeElement)\n         {\n            if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !elementRoot.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition || outTransition}\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        in:inTransition={inTransitionOptions}\n        out:outTransition={outTransitionOptions}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} />\n   </div>\n{:else}\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n   </div>\n{/if}\n\n<style>\n   /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n   .window-app {\n      overflow: var(--tjs-app-overflow, hidden);\n   }\n\n   .window-app:focus-visible {\n      outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   .window-content:focus-visible {\n      outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   /* Override Foundry default; adjust --tjs-app-header-gap to change gap size */\n   .window-app :global(.window-header a) {\n      flex: none;\n      margin: 0;\n   }\n\n   /* Override Foundry default; See TJSHeaderButton for CSS variables */\n   .window-app :global(.window-header i[class^=fa]) {\n      margin: 0\n   }\n</style>\n","import { cssVariables } from './cssVariables.js';\n\nexport { default as TJSComponentShell }   from './TJSComponentShell.svelte';\nexport { default as TJSContainer }        from './TJSContainer.svelte';\nexport { default as TJSGlassPane }        from './TJSGlassPane.svelte';\nexport *                                  from './application/index.js';\nexport *                                  from './dialog/index.js';\n\n/**\n * @typedef {object} TransformData\n *\n * @property {Function} transition - A transition applying to both in & out.\n *\n * @property {Function} inTransition - A transition applying to in.\n *\n * @property {Function} outTransition - A transition applying to out.\n *\n * @property {object}   transitionOptions - The options config object for in & out transitions.\n *\n * @property {object}   inTransitionOptions - The options config object for in transitions.\n *\n * @property {object}   outTransitionOptions - The options config object for out transitions.\n */\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","import { SvelteApplication } from './SvelteApplication.js';\n\nexport * from './SvelteApplication.js';\nexport * from './TJSDialog.js';\n\n// TODO: temporary\nexport * from './position/Position.js';\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------------\n\nHooks.on('PopOut:loading', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = false; }\n});\n\nHooks.on('PopOut:popin', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = true; }\n});\n\nHooks.on('PopOut:close', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = true; }\n});\n\n/**\n * @typedef {object} MountedAppShell - Application shell contract for Svelte components.\n *\n * @property {HTMLElement} elementRoot - The root element / exported prop.\n *\n * @property {HTMLElement} [elementContent] - The content element / exported prop.\n *\n * @property {HTMLElement} [elementTarget] - The target element / exported prop.\n */\n\n/**\n * @typedef {ApplicationShell} ApplicationShellExt\n *\n * @property {SvelteReactive} reactive -\n *\n * @property {object} options -\n *\n * @property {Position} position -\n */\n\n/**\n * @typedef {object} StoreAppOptions - Provides a custom readable Svelte store for Application options state.\n *\n * @property {import('svelte/store').Readable<object>} subscribe - Subscribe to all app options updates.\n *\n * @property {import('svelte/store').Writable<boolean>} draggable - Derived store for `draggable` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} focusAuto - Derived store for `focusAuto` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} focusKeep - Derived store for `focusKeep` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} focusTrap - Derived store for `focusTrap` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} headerButtonNoClose - Derived store for `headerButtonNoClose`\n *                                                                            updates.\n *\n * @property {import('svelte/store').Writable<boolean>} headerButtonNoLabel - Derived store for `headerButtonNoLabel`\n *                                                                            updates.\n *\n * @property {import('svelte/store').Writable<string>} headerIcon - Derived store for `headerIcon` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} headerNoTitleMinimized - Derived store for\n *                                                                               `headerNoTitleMinimized` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} minimizable - Derived store for `minimizable` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} popOut - Derived store for `popOut` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} positionable - Derived store for `positionable` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} resizable - Derived store for `resizable` updates.\n *\n * @property {import('svelte/store').Writable<string>} title - Derived store for `title` updates.\n */\n\n/**\n * @typedef {object} StoreUIOptions - Provides a custom readable Svelte store for UI options state.\n *\n * @property {import('svelte/store').Readable.subscribe} subscribe - Subscribe to all UI options updates.\n *\n * @property {import('svelte/store').Writable<boolean>} dragging - Derived store for `dragging` updates.\n *\n * @property {import('svelte/store').Readable<ApplicationHeaderButton[]>} headerButtons - Derived store for\n *                                                                                        `headerButtons` updates.\n *\n * @property {import('svelte/store').Readable<boolean>} minimized - Derived store for `minimized` updates.\n *\n * @property {import('svelte/store').Writable<boolean>} resizing - Derived store for `resizing` updates.\n */\n\n/**\n * @typedef {object} TransformData\n *\n * @property {Function} transition - A transition applying to both in & out.\n *\n * @property {Function} inTransition - A transition applying to in.\n *\n * @property {Function} outTransition - A transition applying to out.\n *\n * @property {object}   transitionOptions - The options config object for in & out transitions.\n *\n * @property {object}   inTransitionOptions - The options config object for in transitions.\n *\n * @property {object}   outTransitionOptions - The options config object for out transitions.\n */\n","import { debounce } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { tick } from 'svelte';\nimport { subscribeFirstRest } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\r\n * Defines an `Element.animate` animation from provided keyframes and options.\r\n *\r\n * @param {object}         [opts] - Optional parameters.\r\n *\r\n * @param {number}         [opts.duration=600] - Duration in milliseconds.\r\n *\r\n * @param {Array|object}   opts.keyframes - An array of keyframe objects or a keyframe object whose properties are\r\n *                                          arrays of values to iterate over.\r\n *\r\n * @param {object}         [opts.options] - An object containing one or more timing properties. When defined it is used\r\n *                                          instead of duration.\r\n *\r\n * @param {string}         [opts.event='click'] - DOM event to bind element to respond with the ripple effect.\r\n *\r\n * @param {number}         [opts.debounce=undefined] - Add a debounce to incoming events in milliseconds.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats\r\n *\r\n * @returns {Function} Actual action.\r\n */\r\nfunction animate({ duration = 600, keyframes = [], options, event = 'click', debounce: debounce$1 } = {})\r\n{\r\n   return (element) =>\r\n   {\r\n      /**\r\n       * Creates WAAPI animation.\r\n       */\r\n      function createAnimation()\r\n      {\r\n         element.animate(keyframes, typeof options === 'object' && options !== null ? options : duration);\r\n      }\r\n\r\n      const eventFn = Number.isInteger(debounce$1) && debounce$1 > 0 ? debounce(createAnimation, debounce$1) :\r\n       createAnimation;\r\n\r\n      element.addEventListener(event, eventFn);\r\n\r\n      return {\r\n         destroy: () => element.removeEventListener(event, eventFn)\r\n      };\r\n   };\r\n}\n\n/**\r\n * Combines multiple composable actions.\r\n *\r\n * Note: The update function passes the same variable to all update functions of each action.\r\n *\r\n * @param {...Function} actions - One or more composable action functions to combine.\r\n *\r\n * @returns {Function} Composed action.\r\n */\r\nfunction composable(...actions)\r\n{\r\n   return (element, options) =>\r\n   {\r\n      let lifecycle = actions.map((action) => action(element, options));\r\n\r\n      return {\r\n         destroy: () =>\r\n         {\r\n            for (const action of lifecycle)\r\n            {\r\n               if (typeof action.destroy === 'function') { action.destroy(); }\r\n            }\r\n\r\n            lifecycle = void 0;\r\n         },\r\n         update: (parameters) =>\r\n         {\r\n            for (const action of lifecycle)\r\n            {\r\n               if (typeof action.update === 'function') { action.update(parameters); }\r\n            }\r\n         }\r\n      };\r\n   };\r\n}\n\n/**\r\n * Defines the classic Material Design ripple effect as an action. `ripple` is a wrapper around the returned action.\r\n * This allows it to be easily used as a prop.\r\n *\r\n * Note: A negative one translateZ transform is applied to the added spans allowing other content to be layered on top\r\n * with a positive translateZ.\r\n *\r\n * Styling: There is a single CSS variable `--tjs-action-ripple-background` that can be set to control the background.\r\n *\r\n * @param {object}   [opts] - Optional parameters.\r\n *\r\n * @param {number}   [opts.duration=600] - Duration in milliseconds.\r\n *\r\n * @param {string}   [opts.background='rgba(255, 255, 255, 0.7)'] - A valid CSS background attribute.\r\n *\r\n * @param {Iterable<string>}  [opts.events=['click', 'keyup']] - DOM event to bind element to respond with the ripple\r\n *                                                                  effect.\r\n *\r\n * @param {string}   [opts.keyCode='Enter'] - Key code to trigger for any applicable key events.\r\n *\r\n * @param {number}   [opts.debounce=undefined] - Add a debounce to incoming events in milliseconds.\r\n *\r\n * @returns {Function} Actual action.\r\n */\r\nfunction ripple({ duration = 600, background = 'rgba(255, 255, 255, 0.7)', events = ['click', 'keyup'],\r\n keyCode = 'Enter', debounce: debounce$1 } = {})\r\n{\r\n   return (element) =>\r\n   {\r\n      /**\r\n       * Creates the ripple effect.\r\n       *\r\n       * @param {MouseEvent|KeyboardEvent}   e -\r\n       */\r\n      function createRipple(e)\r\n      {\r\n         const elementRect = element.getBoundingClientRect();\r\n\r\n         const diameter = Math.max(elementRect.width, elementRect.height);\r\n         const radius = diameter / 2;\r\n\r\n         // Find the adjusted click location relative to center or if no `clientX/Y` parameters choose center.\r\n         const left = e.clientX ? `${e.clientX - (elementRect.left + radius)}px` : '0';\r\n         const top = e.clientY ? `${e.clientY - (elementRect.top + radius)}px` : '0';\r\n\r\n         const span = document.createElement('span');\r\n\r\n         span.style.position = 'absolute';\r\n         span.style.width = `${diameter}px`;\r\n         span.style.height = `${diameter}px`;\r\n         span.style.left = left;\r\n         span.style.top = top;\r\n\r\n         span.style.background = `var(--tjs-action-ripple-background, ${background})`;\r\n         span.style.borderRadius = '50%';\r\n         span.style.pointerEvents = 'none';\r\n         span.style.transform = 'translateZ(-1px)';\r\n\r\n         element.prepend(span);\r\n\r\n         const animation = span.animate([\r\n            {  // from\r\n               transform: 'scale(.7)',\r\n               opacity: 0.5,\r\n               filter: 'blur(2px)'\r\n            },\r\n            {  // to\r\n               transform: 'scale(4)',\r\n               opacity: 0,\r\n               filter: 'blur(5px)'\r\n            }\r\n         ],\r\n         duration);\r\n\r\n         animation.onfinish = () =>\r\n         {\r\n            if (span && span.isConnected) { span.remove(); }\r\n         };\r\n      }\r\n\r\n      /**\r\n       * Handles any key event and only triggers the ripple effect if key code matches.\r\n       *\r\n       * @param {KeyboardEvent}  event -\r\n       */\r\n      function keyHandler(event)\r\n      {\r\n         if (event?.code === keyCode) { createRipple(event); }\r\n      }\r\n\r\n      const eventFn = Number.isInteger(debounce$1) && debounce$1 > 0 ? debounce(createRipple, debounce$1) : createRipple;\r\n      const keyEventFn = Number.isInteger(debounce$1) && debounce$1 > 0 ? debounce(keyHandler, debounce$1) : keyHandler;\r\n\r\n      for (const event of events)\r\n      {\r\n         if (['keydown', 'keyup'].includes(event))\r\n         {\r\n            element.addEventListener(event, keyEventFn);\r\n         }\r\n         else\r\n         {\r\n            element.addEventListener(event, eventFn);\r\n         }\r\n      }\r\n\r\n      return {\r\n         destroy: () =>\r\n         {\r\n            for (const event of events)\r\n            {\r\n               if (['keydown', 'keyup'].includes(event))\r\n               {\r\n                  element.removeEventListener(event, keyEventFn);\r\n               }\r\n               else\r\n               {\r\n                  element.removeEventListener(event, eventFn);\r\n               }\r\n            }\r\n         }\r\n      };\r\n   };\r\n}\n\n/**\r\n * Defines the classic Material Design ripple effect as an action that is attached to an elements focus and blur events.\r\n * `rippleFocus` is a wrapper around the returned action. This allows it to be easily used as a prop.\r\n *\r\n * Note: A negative one translateZ transform is applied to the added span allowing other content to be layered on top\r\n * with a positive translateZ.\r\n *\r\n * If providing the `selectors` option a target child element will be registered for the focus events otherwise the\r\n * first child is targeted with a final fallback of the element assigned to this action.\r\n *\r\n * Styling: There is a single CSS variable `--tjs-action-ripple-background-focus` that can be set to control the\r\n * background with a fallback to `--tjs-action-ripple-background`.\r\n *\r\n * @param {object}   [opts] - Optional parameters.\r\n *\r\n * @param {number}   [opts.duration=600] - Duration in milliseconds.\r\n *\r\n * @param {string}   [opts.background='rgba(255, 255, 255, 0.7)'] - A valid CSS background attribute.\r\n *\r\n * @param {string}   [opts.selectors] - A valid CSS selectors string.\r\n *\r\n * @returns {Function} Actual action.\r\n */\r\nfunction rippleFocus({ duration = 300, background = 'rgba(255, 255, 255, 0.7)', selectors } = {})\r\n{\r\n   return (element) =>\r\n   {\r\n      const targetEl = typeof selectors === 'string' ? element.querySelector(selectors) :\r\n       element.firstChild instanceof HTMLElement ? element.firstChild : element;\r\n\r\n      let span = void 0;\r\n      let clientX = -1;\r\n      let clientY = -1;\r\n\r\n      /**\r\n       * WAAPI ripple animation on blur.\r\n       */\r\n      function blurRipple()\r\n      {\r\n         // When clicking outside the browser window or to another tab `document.activeElement` remains\r\n         // the same despite blur being invoked; IE the target element.\r\n         if (!(span instanceof HTMLElement) || document.activeElement === targetEl)\r\n         {\r\n            return;\r\n         }\r\n\r\n         const animation = span.animate(\r\n         [\r\n            {  // from\r\n               transform: 'scale(3)',\r\n               opacity: 0.3,\r\n            },\r\n            {  // to\r\n               transform: 'scale(.7)',\r\n               opacity: 0.0,\r\n            }\r\n         ],\r\n         {\r\n            duration,\r\n            fill: 'forwards'\r\n         });\r\n\r\n         animation.onfinish = () =>\r\n         {\r\n            clientX = clientY = -1;\r\n            if (span && span.isConnected) { span.remove(); }\r\n            span = void 0;\r\n         };\r\n      }\r\n\r\n      /**\r\n       * WAAPI ripple animation on focus.\r\n       */\r\n      function focusRipple()\r\n      {\r\n         // If already focused and the span exists do not create another ripple effect.\r\n         if (span instanceof HTMLElement) { return; }\r\n\r\n         const elementRect = element.getBoundingClientRect();\r\n\r\n         // The order of events don't always occur with a pointer event first. In this case use the center of the\r\n         // element as the click point. Mostly this is seen when the focused target element has a followup event off\r\n         // the app / screen. If the next pointer down occurs on the target element the focus callback occurs before\r\n         // pointer down in Chrome and Firefox.\r\n         const actualX = clientX >= 0 ? clientX : elementRect.left + (elementRect.width / 2);\r\n         const actualY = clientX >= 0 ? clientY : elementRect.top + (elementRect.height / 2);\r\n\r\n         const diameter = Math.max(elementRect.width, elementRect.height);\r\n         const radius = diameter / 2;\r\n         const left = `${actualX - (elementRect.left + radius)}px`;\r\n         const top = `${actualY - (elementRect.top + radius)}px`;\r\n\r\n         span = document.createElement('span');\r\n\r\n         span.style.position = 'absolute';\r\n         span.style.width = `${diameter}px`;\r\n         span.style.height = `${diameter}px`;\r\n         span.style.left = left;\r\n         span.style.top = top;\r\n\r\n         span.style.background =\r\n          `var(--tjs-action-ripple-background-focus, var(--tjs-action-ripple-background, ${background}))`;\r\n\r\n         span.style.borderRadius = '50%';\r\n         span.style.pointerEvents = 'none';\r\n         span.style.transform = 'translateZ(-1px)';\r\n\r\n         element.prepend(span);\r\n\r\n         span.animate([\r\n            {  // from\r\n               transform: 'scale(.7)',\r\n               opacity: 0.5,\r\n            },\r\n            {  // to\r\n               transform: 'scale(3)',\r\n               opacity: 0.3,\r\n            }\r\n         ],\r\n         {\r\n            duration,\r\n            fill: 'forwards'\r\n         });\r\n      }\r\n\r\n      /**\r\n       * Store the pointer down location for the origination of the ripple.\r\n       *\r\n       * @param {PointerEvent} e - A PointerEvent.\r\n       */\r\n      function onPointerDown(e)\r\n      {\r\n         clientX = e.clientX;\r\n         clientY = e.clientY;\r\n      }\r\n\r\n      targetEl.addEventListener('pointerdown', onPointerDown);\r\n      targetEl.addEventListener('blur', blurRipple);\r\n      targetEl.addEventListener('focus', focusRipple);\r\n\r\n      return {\r\n         destroy: () =>\r\n         {\r\n            targetEl.removeEventListener('pointerdown', onPointerDown);\r\n            targetEl.removeEventListener('blur', blurRipple);\r\n            targetEl.removeEventListener('focus', focusRipple);\r\n         }\r\n      };\r\n   };\r\n}\n\n/**\r\n * Provides a toggle action for `details` HTML elements. The boolean store provided controls animation.\r\n *\r\n * It is not necessary to bind the store to the `open` attribute of the associated details element.\r\n *\r\n * When the action is triggered to close the details element a data attribute `closing` is set to `true`. This allows\r\n * any associated closing transitions to start immediately.\r\n *\r\n * @param {HTMLDetailsElement} details - The details element.\r\n *\r\n * @param {object} opts - Options parameters.\r\n *\r\n * @param {import('svelte/store').Writable<boolean>} opts.store - A boolean store.\r\n *\r\n * @param {boolean} [opts.clickActive] - When false click events are not handled.\r\n *\r\n * @returns {object} Destroy callback.\r\n */\r\nfunction toggleDetails(details, { store, clickActive = true } = {})\r\n{\r\n   /** @type {HTMLElement} */\r\n   const summary = details.querySelector('summary');\r\n\r\n   /** @type {Animation} */\r\n   let animation;\r\n\r\n   /** @type {boolean} */\r\n   let open = details.open;  // eslint-disable-line no-shadow\r\n\r\n   // The store sets initial open state and handles animation on further changes.\r\n   const unsubscribe = subscribeFirstRest(store, (value) => { open = value; details.open = open; }, async (value) =>\r\n   {\r\n      open = value;\r\n\r\n      // Await `tick` to allow any conditional logic in the template to complete updating before handling animation.\r\n      await tick();\r\n\r\n      handleAnimation();\r\n   });\r\n\r\n   /**\r\n    * @param {number} a -\r\n    *\r\n    * @param {number} b -\r\n    *\r\n    * @param {boolean} value -\r\n    */\r\n   function animate(a, b, value)\r\n   {\r\n      details.style.overflow = 'hidden';\r\n\r\n      // Must guard when `b - a === 0`; add a small epsilon and wrap with Math.max.\r\n      const duration = Math.max(0, 30 * Math.log(Math.abs(b - a) + Number.EPSILON));\r\n\r\n      animation = details.animate(\r\n       {\r\n          height: [`${a}px`, `${b}px`]\r\n       },\r\n       {\r\n          duration,\r\n          easing: 'ease-out'\r\n       }\r\n      );\r\n\r\n      animation.onfinish = () =>\r\n      {\r\n         details.open = value;\r\n         details.dataset.closing = 'false';\r\n         details.style.overflow = '';\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Handles animation coordination based on current state.\r\n    */\r\n   function handleAnimation()\r\n   {\r\n      if (open)\r\n      {\r\n         const a = details.offsetHeight;\r\n         if (animation) { animation.cancel(); }\r\n         details.open = true;\r\n         const b = details.offsetHeight;\r\n\r\n         animate(a, b, true);\r\n      }\r\n      else\r\n      {\r\n         const a = details.offsetHeight;\r\n         const b = summary.offsetHeight;\r\n\r\n         details.dataset.closing = 'true';\r\n\r\n         animate(a, b, false);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {MouseEvent} e - A mouse event.\r\n    */\r\n   function handleClick(e)\r\n   {\r\n      if (clickActive)\r\n      {\r\n         e.preventDefault();\r\n\r\n         // Simply set the store to the opposite of current open state and the callback above handles animation.\r\n         store.set(!open);\r\n      }\r\n   }\r\n\r\n   summary.addEventListener('click', handleClick);\r\n\r\n   return {\r\n      destroy()\r\n      {\r\n         unsubscribe();\r\n         summary.removeEventListener('click', handleClick);\r\n      }\r\n   };\r\n}\n\nexport { animate, composable, ripple, rippleFocus, toggleDetails };\n//# sourceMappingURL=index.js.map\n","import { isWritableStore, DynArrayReducer, subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { debounce, isObject as isObject$1, uuidv4 as uuidv4$1, klona, normalizeString, isIterable, isSvelteComponent } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { isObject, uuidv4 } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { writable, get } from 'svelte/store';\nimport { TJSDialog } from '@typhonjs-fvtt/runtime/svelte/application';\nimport { localize } from '@typhonjs-fvtt/runtime/svelte/helper';\nimport { ripple, rippleFocus } from '@typhonjs-fvtt/svelte-standard/action';\n\n/**\r\n * Provides a base implementation for store entries in {@link ArrayObjectStore}.\r\n *\r\n * In particular providing the required getting / accessor for the 'id' property.\r\n */\r\nclass ObjectEntryStore\r\n{\r\n   /**\r\n    * @type {object}\r\n    */\r\n   #data;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(object): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @param {object}   data -\r\n    */\r\n   constructor(data = {})\r\n   {\r\n      if (!isObject(data)) { throw new TypeError(`'data' is not an object.`); }\r\n\r\n      this.#data = data;\r\n\r\n      // If an id is missing then add it.\r\n      if (typeof data.id !== 'string') { this.#data.id = uuidv4(); }\r\n\r\n      if (!uuidv4.isValid(data.id)) { throw new Error(`'data.id' (${data.id}) is not a valid UUIDv4 string.`); }\r\n   }\r\n\r\n   /**\r\n    * Invoked by ArrayObjectStore to provide custom duplication. Override this static method in your entry store.\r\n    *\r\n    * @param {object}   data - A copy of local data w/ new ID already set.\r\n    *\r\n    * @param {ArrayObjectStore} arrayStore - The source ArrayObjectStore instance.\r\n    */\r\n   static duplicate(data, arrayStore) {}  // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * @returns {object}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get id() { return this.#data.id; }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n   /**\r\n    * @param {function(object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);  // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * @protected\r\n    */\r\n   _updateSubscribers()\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n\r\n      const data = this.#data;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n   }\r\n}\n\n/**\r\n * @typedef {typeof import('svelte/store').Writable & { get id: string }} BaseEntryStore\r\n */\r\n\r\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass ArrayObjectStore\r\n{\r\n   /** @type {T[]} */\r\n   #data = [];\r\n\r\n   /**\r\n    * @type {Map<string, { store: T, unsubscribe: Function}>}\r\n    */\r\n   #dataMap = new Map();\r\n\r\n   /**\r\n    * @type {DynArrayReducer<T>}\r\n    */\r\n   #dataReducer;\r\n\r\n   /**\r\n    * @type {boolean}\r\n    */\r\n   #manualUpdate;\r\n\r\n   #StoreClass;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(T[]): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {Function}\r\n    */\r\n   #updateSubscribersBound;\r\n\r\n   /**\r\n    * @returns {ObjectEntryStore}\r\n    */\r\n   static get EntryStore() { return ObjectEntryStore; }\r\n\r\n   /**\r\n    * @param {ArrayObjectStoreParams} params -\r\n    */\r\n   constructor({ StoreClass, defaultData = [], childDebounce = 250, dataReducer = false, manualUpdate = false } = {})\r\n   {\r\n      if (!Number.isInteger(childDebounce) || childDebounce < 0 || childDebounce > 1000)\r\n      {\r\n         throw new TypeError(`'childDebounce' must be an integer between and including 0 - 1000.`);\r\n      }\r\n\r\n      if (typeof manualUpdate !== 'boolean') { throw new TypeError(`'manualUpdate' is not a boolean.`); }\r\n\r\n      if (!isWritableStore(StoreClass.prototype))\r\n      {\r\n         throw new TypeError(`'StoreClass' is not a writable store constructor.`);\r\n      }\r\n\r\n      let hasIDGetter = false;\r\n\r\n      // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n      for (let o = StoreClass.prototype; o; o = Object.getPrototypeOf(o))\r\n      {\r\n         const descriptor = Object.getOwnPropertyDescriptor(o, 'id');\r\n         if (descriptor !== void 0 && descriptor.get !== void 0)\r\n         {\r\n            hasIDGetter = true;\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!hasIDGetter)\r\n      {\r\n         throw new TypeError(`'StoreClass' does not have a getter accessor for 'id' property.`);\r\n      }\r\n\r\n      if (!Array.isArray(defaultData)) { throw new TypeError(`'defaultData' is not an array.`); }\r\n\r\n      this.#manualUpdate = manualUpdate;\r\n\r\n      this.#StoreClass = StoreClass;\r\n\r\n      if (dataReducer) { this.#dataReducer = new DynArrayReducer({ data: this.#data }); }\r\n\r\n      // Prepare a debounced callback that is used for all child store entry subscriptions.\r\n      this.#updateSubscribersBound = childDebounce === 0 ? this.updateSubscribers.bind(this) :\r\n       debounce((data) => this.updateSubscribers(data), childDebounce);\r\n   }\r\n\r\n   /**\r\n    * Provide an iterator for public access to entry stores.\r\n    *\r\n    * @returns {Generator<T | void>}\r\n    * @yields {T|void}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#data.length === 0) { return; }\r\n\r\n      for (const entryStore of this.#data) { yield entryStore; }\r\n   }\r\n\r\n   /**\r\n    * @returns {T[]}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   /**\r\n    * @returns {DynArrayReducer<T>}\r\n    */\r\n   get dataReducer()\r\n   {\r\n      if (!this.#dataReducer)\r\n      {\r\n         throw new Error(\r\n          `'dataReducer' is not initialized; did you forget to specify 'dataReducer' as true in constructor options?`);\r\n      }\r\n\r\n      return this.#dataReducer;\r\n   }\r\n\r\n   /**\r\n    * @returns {number}\r\n    */\r\n   get length() { return this.#data.length; }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clearEntries()\r\n   {\r\n      for (const storeEntryData of this.#dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n      this.#dataMap.clear();\r\n      this.#data.length = 0;\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   createEntry(entryData = {})\r\n   {\r\n      if (!isObject$1(entryData)) { throw new TypeError(`'entryData' is not an object.`); }\r\n\r\n      if (typeof entryData.id !== 'string') { entryData.id = uuidv4$1(); }\r\n\r\n      if (this.#data.findIndex((entry) => entry.id === entryData.id) >= 0)\r\n      {\r\n         throw new Error(`'entryData.id' (${entryData.id}) already in this ArrayObjectStore instance.`);\r\n      }\r\n\r\n      const store = this.#createStore(entryData);\r\n\r\n      this.updateSubscribers();\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Add a new store entry from the given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T} New store entry instance.\r\n    */\r\n   #createStore(entryData)\r\n   {\r\n      const store = new this.#StoreClass(entryData, this);\r\n\r\n      if (!uuidv4$1.isValid(store.id))\r\n      {\r\n         throw new Error(`'store.id' (${store.id}) is not a UUIDv4 compliant string.`);\r\n      }\r\n\r\n      const unsubscribe = subscribeIgnoreFirst(store, this.#updateSubscribersBound);\r\n\r\n      this.#data.push(store);\r\n      this.#dataMap.set(entryData.id, { store, unsubscribe });\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   deleteEntry(id)\r\n   {\r\n      const result = this.#deleteStore(id);\r\n\r\n      if (result) { this.updateSubscribers(); }\r\n\r\n      return result;\r\n   }\r\n\r\n   #deleteStore(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      if (storeEntryData)\r\n      {\r\n         storeEntryData.unsubscribe();\r\n\r\n         this.#dataMap.delete(id);\r\n\r\n         const index = this.#data.findIndex((entry) => entry.id === id);\r\n         if (index >= 0) { this.#data.splice(index, 1); }\r\n\r\n         return true;\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Duplicates an entry store by the given ID.\r\n    *\r\n    * @param {string}   id - UUIDv4 string.\r\n    *\r\n    * @returns {*} Instance of StoreClass.\r\n    */\r\n   duplicateEntry(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n\r\n      if (storeEntryData)\r\n      {\r\n         const data = klona(storeEntryData.store.toJSON());\r\n         data.id = uuidv4$1();\r\n\r\n         // Allow StoreClass to statically perform any specialized duplication.\r\n         this.#StoreClass?.duplicate?.(data, this);\r\n\r\n         return this.createEntry(data);\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Find an entry in the backing child store array.\r\n    *\r\n    * @param {function(T): T|void}  predicate - A predicate function\r\n    *\r\n    * @returns {T|void} Found entry in array or undefined.\r\n    */\r\n   findEntry(predicate)\r\n   {\r\n      return this.#data.find(predicate);\r\n   }\r\n\r\n   /**\r\n    * Finds an entry store instance by 'id' / UUIDv4.\r\n    *\r\n    * @param {string}   id - A UUIDv4 string.\r\n    *\r\n    * @returns {T|void} Entry store instance.\r\n    */\r\n   getEntry(id)\r\n   {\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      return storeEntryData ? storeEntryData.store : void 0;\r\n   }\r\n\r\n   /**\r\n    * Sets the children store data by 'id', adds new entry store instances, or removes entries that are no longer in the\r\n    * update list.\r\n    *\r\n    * @param {T[]}   updateList -\r\n    */\r\n   set(updateList)\r\n   {\r\n      if (!Array.isArray(updateList))\r\n      {\r\n         console.warn(`ArrayObjectStore.set warning: aborting set operation as 'updateList' is not an array.`);\r\n         return;\r\n      }\r\n\r\n      const data = this.#data;\r\n      const dataMap = this.#dataMap;\r\n\r\n      // Create a set of all current entry IDs.\r\n      const removeIDSet = new Set(dataMap.keys());\r\n\r\n      let rebuildIndex = false;\r\n\r\n      for (let updateIndex = 0; updateIndex < updateList.length; updateIndex++)\r\n      {\r\n         const updateData = updateList[updateIndex];\r\n\r\n         const id = updateData.id;\r\n\r\n         if (typeof id !== 'string') { throw new Error(`'updateData.id' is not a string.`); }\r\n\r\n         const localIndex = data.findIndex((entry) => entry.id === id);\r\n\r\n         if (localIndex >= 0)\r\n         {\r\n            const localEntry = data[localIndex];\r\n\r\n            // Update the entry data.\r\n            localEntry.set(updateData);\r\n\r\n            // Must move to correct position\r\n            if (localIndex !== updateIndex)\r\n            {\r\n               // Remove from current location.\r\n               data.splice(localIndex, 1);\r\n\r\n               if (updateIndex < data.length)\r\n               {\r\n                  // Insert at new location.\r\n                  data.splice(updateIndex, 0, localEntry);\r\n               }\r\n               else\r\n               {\r\n                  // Local data length is less than update data index; rebuild index.\r\n                  rebuildIndex = true;\r\n               }\r\n            }\r\n\r\n            // Delete from removeIDSet as entry is still in local data.\r\n            removeIDSet.delete(id);\r\n         }\r\n         else\r\n         {\r\n            this.#createStore(updateData);\r\n         }\r\n      }\r\n\r\n      if (rebuildIndex)\r\n      {\r\n         // Must invoke unsubscribe for all child stores.\r\n         for (const storeEntryData of dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n         data.length = 0;\r\n         dataMap.clear();\r\n\r\n         for (const updateData of updateList) { this.#createStore(updateData); }\r\n      }\r\n      else\r\n      {\r\n         // Remove entries that are no longer in data.\r\n         for (const id of removeIDSet) { this.#deleteStore(id); }\r\n      }\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {function(T[]): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @param {ArrayObjectUpdateData}  [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      const updateGate = typeof update === 'boolean' ? update : !this.#manualUpdate;\r\n\r\n      if (updateGate)\r\n      {\r\n         const subscriptions = this.#subscriptions;\r\n\r\n         const data = this.#data;\r\n\r\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n      }\r\n\r\n      // This will update the filtered data and `dataReducer` store and forces an update to subscribers.\r\n      if (this.#dataReducer) { this.#dataReducer.index.update(true); }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} ArrayObjectStoreParams\r\n *\r\n * @property {BaseEntryStore} StoreClass - The entry store class that is instantiated.\r\n *\r\n * @property {object[]}       [defaultData=[]] - An array of default data objects.\r\n *\r\n * @property {number}         [childDebounce=250] - An integer between and including 0 - 1000; a debounce time in\r\n *                            milliseconds for child store subscriptions to invoke\r\n *                            {@link ArrayObjectStore.updateSubscribers} notifying subscribers to this array\r\n *                            store.\r\n *\r\n * @property {boolean}        [dataReducer=false] - When true a DynArrayReducer will be instantiated wrapping store\r\n *                                                  data and accessible from {@link ArrayObjectStore.dataReducer}.\r\n *\r\n * @property {boolean}        [manualUpdate=false] - When true {@link ArrayObjectStore.updateSubscribers} must be\r\n *                            invoked with a single boolean parameter for subscribers to be updated.\r\n */\r\n\r\n/**\r\n * @typedef {boolean|object|undefined} ArrayObjectUpdateData\r\n */\n\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass CrudArrayObjectStore extends ArrayObjectStore\r\n{\r\n   /** @type {CrudDispatch} */\r\n   #crudDispatch;\r\n\r\n   /** @type {object} */\r\n   #extraData;\r\n\r\n   /**\r\n    * @param {object}                  [opts] - Optional parameters.\r\n    *\r\n    * @param {CrudDispatch}            [opts.crudDispatch] -\r\n    *\r\n    * @param {object}                  [opts.extraData] -\r\n    *\r\n    * @param {ArrayObjectStoreParams}  [opts.rest] - Rest of ArrayObjectStore parameters.\r\n    */\r\n   constructor({ crudDispatch, extraData, ...rest })\r\n   {\r\n      // 'manualUpdate' is set to true if 'crudUpdate' is defined, but can be overridden by `...rest`.\r\n      super({\r\n         manualUpdate: typeof crudDispatch === 'function',\r\n         ...rest,\r\n      });\r\n\r\n      if (crudDispatch !== void 0 && typeof crudDispatch !== 'function')\r\n      {\r\n         throw new TypeError(`'crudDispatch' is not a function.`);\r\n      }\r\n\r\n      if (extraData !== void 0 && !isObject$1(extraData))\r\n      {\r\n         throw new TypeError(`'extraData' is not an object.`);\r\n      }\r\n\r\n      this.#crudDispatch = crudDispatch;\r\n      this.#extraData = extraData ?? {};\r\n   }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clearEntries()\r\n   {\r\n      super.clearEntries();\r\n\r\n      if (this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'clear', ...this.#extraData });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   createEntry(entryData = {})\r\n   {\r\n      const store = super.createEntry(entryData);\r\n\r\n      if (store && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({\r\n            action: 'create',\r\n            ...this.#extraData,\r\n            id: store.id,\r\n            data: store.toJSON()\r\n         });\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   deleteEntry(id)\r\n   {\r\n      const result = super.deleteEntry(id);\r\n\r\n      if (result && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'delete', ...this.#extraData, id });\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers, but provides special handling when WorldSettingArrayStore has an `crudDispatch` function\r\n    * attached. When the update is an object with a valid UUIDv4 string as the id property the `crudDispatch`\r\n    * function is invoked with  along with the data payload\r\n    *\r\n    * @param {ArrayObjectUpdateData} [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      if (this.#crudDispatch && isObject$1(update) && uuidv4$1.isValid(update.id))\r\n      {\r\n         const result = this.#crudDispatch({\r\n            action: 'update',\r\n            ...this.#extraData,\r\n            id: update.id,\r\n            data: update  // TODO: Consider using klona to clone data.\r\n         });\r\n\r\n         // If the crudDispatch function returns a boolean then invoke 'ArrayObjectStore.updateSubscribers' with it.\r\n         super.updateSubscribers(typeof result === 'boolean' ? result : update);\r\n      }\r\n      else\r\n      {\r\n         super.updateSubscribers(update);\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {ArrayObjectStoreParams} CrudArrayObjectStoreParams\r\n *\r\n * @property {CrudDispatch}   [crudDispatch] -\r\n *\r\n * @property {object}         [extraData] -\r\n */\r\n\r\n/**\r\n * @typedef {({ action: string, id?: string, data?: object }) => boolean} CrudDispatch\r\n *\r\n * A function that accepts an object w/ 'action', 'moduleId', 'key' properties and optional 'id' / UUIDv4 string and\r\n * 'data' property.\r\n */\n\n/**\r\n * Creates a filter function to compare objects by a give property key against a regex test. The returned function\r\n * is also a writable Svelte store that builds a regex from the stores value.\r\n *\r\n * This filter function can be used w/ DynArrayReducer and bound as a store to input elements.\r\n *\r\n * @param {string|Iterable<string>}   properties - Property key to compare.\r\n *\r\n * @param {object}   [opts] - Optional parameters.\r\n *\r\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\r\n *\r\n * @param {import('svelte/store').Writable<string>}  [opts.store=void] - Use the provided store to instead of creating\r\n *                                                                       a default writable store.\r\n *\r\n * @returns {(data: object) => boolean} The query string filter.\r\n */\r\nfunction createFilterQuery(properties, { caseSensitive = false, store } = {})\r\n{\r\n   let keyword = '';\r\n   let regex;\r\n\r\n   if (store !== void 0 && !isWritableStore(store))\r\n   {\r\n      throw new TypeError(`createFilterQuery error: 'store' is not a writable store.`);\r\n   }\r\n\r\n   const storeKeyword = store ? store : writable(keyword);\r\n\r\n   // If an existing store is provided then set initial values.\r\n   if (store)\r\n   {\r\n      const current = get(store);\r\n\r\n      if (typeof current === 'string')\r\n      {\r\n         keyword = normalizeString(current);\r\n         regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\r\n      }\r\n      else\r\n      {\r\n         store.set(keyword);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\r\n    * created from the search input element.\r\n    *\r\n    * @param {object} data - Data object to test against regex.\r\n    *\r\n    * @returns {boolean} AnimationStore filter state.\r\n    */\r\n   function filterQuery(data)\r\n   {\r\n      if (keyword === '' || !regex) { return true; }\r\n\r\n      if (isIterable(properties))\r\n      {\r\n         for (const property of properties)\r\n         {\r\n            if (regex.test(normalizeString(data?.[property]))) { return true; }\r\n         }\r\n\r\n         return false;\r\n      }\r\n      else\r\n      {\r\n         return regex.test(normalizeString(data?.[properties]));\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Create a custom store that changes when the search keyword changes.\r\n    *\r\n    * @param {(string) => void} handler - A callback function that accepts strings.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber}\r\n    */\r\n   filterQuery.subscribe = (handler) =>\r\n   {\r\n      return storeKeyword.subscribe(handler);\r\n   };\r\n\r\n   /**\r\n    * Set\r\n    *\r\n    * @param {string}   value - A new value for the keyword / regex test.\r\n    */\r\n   filterQuery.set = (value) =>\r\n   {\r\n      if (typeof value === 'string')\r\n      {\r\n         keyword = normalizeString(value);\r\n         regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\r\n         storeKeyword.set(keyword);\r\n      }\r\n   };\r\n\r\n   return filterQuery;\r\n}\n\n/**\r\n * Controls preparation and processing of registered game settings w/ TJSGameSettings. Game settings are parsed\r\n * for UI display by TJSSettingsEdit. The store `showSettings` is utilized in TJSSettingsSwap component to provide\r\n * an easy way to flip between settings component or any main slotted component.\r\n */\r\nclass UIControl\r\n{\r\n   /** @type {TJSSettingsCustomSection[]} */\r\n   #sections = [];\r\n\r\n   /** @type {TJSGameSettings} */\r\n   #settings;\r\n\r\n   /** @type {boolean} */\r\n   #showSettings = false;\r\n\r\n   /** @type {Function} */\r\n   #showSettingsSet;\r\n\r\n   /** @type {{showSettings: import('svelte/store').Readable<boolean>}} */\r\n   #stores;\r\n\r\n   /**\r\n    * @param {TJSGameSettings}   settings -\r\n    */\r\n   constructor(settings)\r\n   {\r\n      this.#settings = settings;\r\n\r\n      const showSettings = writable(this.#showSettings);\r\n      this.#showSettingsSet = showSettings.set;\r\n\r\n      this.#stores = {\r\n         showSettings: { subscribe: showSettings.subscribe }\r\n      };\r\n\r\n      Object.freeze(this.#stores);\r\n   }\r\n\r\n   /**\r\n    * @returns {boolean} Current `showSettings` state.\r\n    */\r\n   get showSettings()\r\n   {\r\n      return this.#showSettings;\r\n   }\r\n\r\n   /**\r\n    * @returns {{showSettings: import('svelte/store').Readable<boolean>}} Returns the managed stores.\r\n    */\r\n   get stores()\r\n   {\r\n      return this.#stores;\r\n   }\r\n\r\n   /**\r\n    * Sets current `showSettings` state.\r\n    *\r\n    * @param {boolean}  showSettings - New `showSettings` state.\r\n    */\r\n   set showSettings(showSettings)\r\n   {\r\n      this.#showSettings = showSettings;\r\n      this.#showSettingsSet(this.#showSettings);\r\n   }\r\n\r\n   /**\r\n    * Adds a custom section / folder defined by the provided TJSSettingsCustomSection options object.\r\n    *\r\n    * @param {TJSSettingsCustomSection} options - The configuration object for the custom section.\r\n    */\r\n   addSection(options)\r\n   {\r\n      if (!isObject$1(options)) { throw new TypeError(`'options' is not an object.`); }\r\n\r\n      if (!isSvelteComponent(options.class)) { throw new TypeError(`'options.class' is not a Svelte component.`); }\r\n\r\n      if (options.props !== void 0 && !isObject$1(options.props))\r\n      {\r\n         throw new TypeError(`'options.props' is not an object.`);\r\n      }\r\n\r\n      if (options.folder !== void 0)\r\n      {\r\n         const folder = options.folder;\r\n\r\n         if (typeof folder !== 'string' && !isObject$1(folder))\r\n         {\r\n            throw new TypeError(`'options.folder' is not a string or object.`);\r\n         }\r\n\r\n         if (isObject$1(folder))\r\n         {\r\n            if (typeof folder.label !== 'string') { throw new TypeError(`'options.folder.label' is not a string.`); }\r\n\r\n            // Validate custom component set as folder summary end.\r\n            if (folder.summaryEnd !== void 0)\r\n            {\r\n               if (!isObject$1(folder.summaryEnd))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd' is not an object.`);\r\n               }\r\n\r\n               if (!isSvelteComponent(folder.summaryEnd.class))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd.class' is not a Svelte component.`);\r\n               }\r\n\r\n               if (folder.summaryEnd.props !== void 0 && !isObject$1(folder.summaryEnd.props))\r\n               {\r\n                  throw new TypeError(`'options.folder.summaryEnd.props' is not an object.`);\r\n               }\r\n            }\r\n\r\n            // Validate that folder inline styles is an object.\r\n            if (folder.styles !== void 0 && !isObject$1(folder.styles))\r\n            {\r\n               throw new TypeError(`'options.folder.styles' is not an object.`);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Validate that section inline styles is an object.\r\n      if (options.styles !== void 0 && !isObject$1(options.styles))\r\n      {\r\n         throw new TypeError(`'options.styles' is not an object.`);\r\n      }\r\n\r\n      this.#sections.push(options);\r\n   }\r\n\r\n   /**\r\n    * Creates the UISettingsData object by parsing stored settings in\r\n    *\r\n    * @param {TJSSettingsCreateOptions} [options] - Optional parameters.\r\n    *\r\n    * @returns {TJSSettingsUIData} Parsed UI settings data.\r\n    */\r\n   create(options)\r\n   {\r\n      const settings = this.#parseSettings(options);\r\n      const destroy = () => this.#destroy(settings);\r\n\r\n      return {\r\n         ...settings,\r\n         destroy\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Destroy callback. Checks for any `requiresReload` parameter in each setting comparing against initial value\r\n    * when `settings` is created and current value. If there is a difference then show a modal dialog asking the user\r\n    * if they want to reload for those settings to take effect.\r\n    *\r\n    * @param {TJSSettingsUIData}   settings - The UI data object initiated w/ `create`.\r\n    */\r\n   #destroy(settings)\r\n   {\r\n      let requiresClientReload = false;\r\n      let requiresWorldReload = false;\r\n\r\n      if (Array.isArray(settings.topLevel))\r\n      {\r\n         for (const setting of settings.topLevel)\r\n         {\r\n            const current = globalThis.game.settings.get(setting.namespace, setting.key);\r\n            if (current === setting.initialValue) { continue; }\r\n\r\n            requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\r\n            requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\r\n         }\r\n      }\r\n\r\n      if (Array.isArray(settings.folders))\r\n      {\r\n         for (const folder of settings.folders)\r\n         {\r\n            if (Array.isArray(folder.settings))\r\n            {\r\n               for (const setting of folder.settings)\r\n               {\r\n                  const current = globalThis.game.settings.get(setting.namespace, setting.key);\r\n                  if (current === setting.initialValue) { continue; }\r\n\r\n                  requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\r\n                  requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      if (requiresClientReload || requiresWorldReload) { this.#reloadConfirm({ world: requiresWorldReload }); }\r\n\r\n      this.#showSettings = false;\r\n      this.#showSettingsSet(this.#showSettings);\r\n   }\r\n\r\n   /**\r\n    * @param {TJSSettingsCreateOptions} [options] - Optional parameters.\r\n    *\r\n    * @returns {TJSSettingsUIData} Parsed UI settings data.\r\n    */\r\n   #parseSettings({ efx = 'ripple', storage } = {})\r\n   {\r\n      const namespace = this.#settings.namespace;\r\n\r\n      if (storage && typeof namespace !== 'string')\r\n      {\r\n         console.warn(\r\n          `TJSGameSettings warning: 'options.storage' defined, but 'namespace' not defined in TJSGameSettings.`);\r\n      }\r\n\r\n      const hasStorage = storage && typeof namespace === 'string';\r\n\r\n      const uiSettings = [];\r\n\r\n      const canConfigure = globalThis.game.user.can('SETTINGS_MODIFY');\r\n\r\n      for (const setting of this.#settings)\r\n      {\r\n         if (!setting.config || (!canConfigure && (setting.scope !== 'client'))) { continue; }\r\n\r\n         let options;\r\n\r\n         if (typeof setting.choices === 'object')\r\n         {\r\n            options = Object.entries(setting.choices).map((entry) => ({ value: entry[0], label: localize(entry[1]) }));\r\n         }\r\n\r\n         let range;\r\n         if (typeof setting.range === 'object')\r\n         {\r\n            range = {};\r\n\r\n            // TODO Better error messages.\r\n            // Verify range data.\r\n            if (typeof setting.range.min !== 'number') { throw new TypeError(`Setting 'range.min' is not a number.`); }\r\n            if (typeof setting.range.max !== 'number') { throw new TypeError(`Setting 'range.max' is not a number.`); }\r\n            if (setting.range.step !== void 0 && typeof setting.range.step !== 'number')\r\n            {\r\n               throw new TypeError(`Setting 'range.step' is not a number.`);\r\n            }\r\n\r\n            range.min = setting.range.min;\r\n            range.max = setting.range.max;\r\n            range.step = setting.range.step ? setting.range.step : 1;\r\n         }\r\n\r\n         // Default to `String` if no type is provided.\r\n         const type = setting.type instanceof Function ? setting.type.name : 'String';\r\n\r\n         // Only configure file picker if setting type is a string.\r\n         let filePicker;\r\n         if (type === 'String')\r\n         {\r\n            filePicker = setting.filePicker === true ? 'any' : setting.filePicker;\r\n         }\r\n\r\n         let buttonData;\r\n         if (filePicker)\r\n         {\r\n            buttonData = {\r\n               icon: 'fas fa-file-import fa-fw',\r\n               efx: efx === 'ripple' ? ripple() : void 0,\r\n               title: 'FILES.BrowseTooltip',\r\n               styles: { 'margin-left': '0.25em' }\r\n            };\r\n         }\r\n\r\n         const store = this.#settings.getStore(setting.key);\r\n\r\n         let selectData;\r\n\r\n         /** @type {string} */\r\n         let componentType = 'text';\r\n\r\n         if (setting.type === Boolean)\r\n         {\r\n            componentType = 'checkbox';\r\n         }\r\n         else if (options !== void 0)\r\n         {\r\n            componentType = 'select';\r\n\r\n            selectData = {\r\n               store,\r\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\r\n               type: componentType,\r\n               options\r\n            };\r\n         }\r\n         else if (setting.type === Number)\r\n         {\r\n            componentType = typeof setting.range === 'object' ? 'range' : 'number';\r\n         }\r\n\r\n         let inputData;\r\n         if (componentType === 'text' || componentType === 'number')\r\n         {\r\n            inputData = {\r\n               store,\r\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\r\n               type: componentType\r\n            };\r\n         }\r\n\r\n         uiSettings.push({\r\n            id: `${setting.namespace}.${setting.key}`,\r\n            namespace: setting.namespace,\r\n            folder: setting.folder,\r\n            key: setting.key,\r\n            name: localize(setting.name),\r\n            hint: localize(setting.hint),\r\n            type,\r\n            componentType,\r\n            filePicker,\r\n            range,\r\n            store,\r\n            initialValue: globalThis.game.settings.get(setting.namespace, setting.key),\r\n            scope: setting.scope,\r\n            requiresReload: typeof setting.requiresReload === 'boolean' ? setting.requiresReload : false,\r\n            buttonData,\r\n            inputData,\r\n            selectData\r\n         });\r\n      }\r\n\r\n      // If storage is available then create a key otherwise create a dummy store, so `applyScrolltop` works.\r\n      const storeScrollbar = hasStorage ? storage.getStore(`${namespace}-settings-scrollbar`) : writable(0);\r\n\r\n      const topLevel = [];\r\n\r\n      const folderData = {};\r\n\r\n      // Sort into folders\r\n      for (const setting of uiSettings)\r\n      {\r\n         if (typeof setting.folder === 'string')\r\n         {\r\n            const folderName = localize(setting.folder);\r\n\r\n            // Create folder array if one doesn't exist already.\r\n            if (!Array.isArray(folderData[folderName])) { folderData[folderName] = []; }\r\n            folderData[folderName].push(setting);\r\n         }\r\n         else // Add to 'toplevel' settings\r\n         {\r\n            topLevel.push(setting);\r\n         }\r\n      }\r\n\r\n      // Convert folderData object to array.\r\n      const folders = Object.entries(folderData).map((entry) =>\r\n      {\r\n         return {\r\n            label: entry[0],\r\n            store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${entry[0]}`) : void 0,\r\n            settings: entry[1],\r\n         };\r\n      });\r\n\r\n      const sections = [];\r\n\r\n      // Parse custom component sections\r\n      for (const section of this.#sections)\r\n      {\r\n         const parsedSection = {\r\n            class: section.class,\r\n            props: section.props,\r\n            styles: section.styles\r\n         };\r\n\r\n         if (typeof section.folder === 'string')\r\n         {\r\n            const label = localize(section.folder);\r\n\r\n            parsedSection.folder = {\r\n               label,\r\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0\r\n            };\r\n         }\r\n         else if (isObject$1(section.folder))\r\n         {\r\n            const label = localize(section.folder.label);\r\n\r\n            parsedSection.folder = {\r\n               label,\r\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0,\r\n               summaryEnd: section.folder.summaryEnd,\r\n               styles: section.folder.styles\r\n            };\r\n         }\r\n\r\n         sections.push(parsedSection);\r\n      }\r\n\r\n      return {\r\n         storeScrollbar,\r\n         topLevel,\r\n         folders,\r\n         sections\r\n      };\r\n   }\r\n\r\n   async #reloadConfirm({ world = false } = {})\r\n   {\r\n      let title = localize('SETTINGS.ReloadPromptTitle');\r\n      let label = localize('SETTINGS.ReloadPromptBody');\r\n\r\n      // Foundry v9 doesn't have the reload lang keys, so substitute just for English translation.\r\n      // TODO: FOUNDRY_V9 - remove when support for v9 is dropped.\r\n      title = title !== 'SETTINGS.ReloadPromptTitle' ? title : 'Reload Application?';\r\n      label = label !== 'SETTINGS.ReloadPromptBody' ? label :\r\n       'Some of the changed settings require a reload of the application to take effect. Would you like to reload now?';\r\n\r\n      const reload = await TJSDialog.confirm({\r\n         modal: true,\r\n         draggable: false,\r\n         title,\r\n         content: `<p>${label}</p>`\r\n      });\r\n\r\n      if (!reload) { return; }\r\n\r\n      // Reload all connected clients. Note: Foundry v9 might not support this event.\r\n      if (world && globalThis.game.user.isGM) { globalThis.game.socket.emit('reload'); }\r\n\r\n      // Reload locally.\r\n      window.location.reload();\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap `showSettings`.\r\n    *\r\n    * @returns {boolean} New `showSettings` state.\r\n    */\r\n   swapShowSettings()\r\n   {\r\n      this.#showSettings = !this.#showSettings;\r\n      this.#showSettingsSet(this.#showSettings);\r\n      return this.#showSettings;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} TJSSettingsCreateOptions\r\n *\r\n * @property {string} [efx=ripple] - Defines the effects added to TJS components; ripple by default.\r\n *\r\n * @property {TJSSessionStorage} [storage] - TRL TJSSessionStorage instance to serialize folder state and scrollbar\r\n *                                           position.\r\n */\r\n\r\n/**\r\n * @typedef {object} TJSSettingsCustomSection\r\n *\r\n * @property {Function} class - Svelte component constructor function for custom section.\r\n *\r\n * @property {Function} [props] - Svelte component constructor function for custom section.\r\n *\r\n * @property {object} [styles] - Inline styles for the section element.\r\n *\r\n * @property {string|TJSSettingsCustomSectionFolder} [folder] - A folder label or TJSSettingsCustomSectionFolder object.\r\n */\r\n\r\n/**\r\n * @typedef {object} TJSSettingsCustomSectionFolder\r\n *\r\n * @property {string} label - The folder label.\r\n *\r\n * @property {object} [summaryEnd] - A Svelte component config object defining TJSSvgFolder summary end component.\r\n *\r\n * @property {object} [styles] - Inline styles for the `TJSSvgFolder`; useful for setting CSS variables.\r\n *\r\n */\r\n\r\n/**\r\n * @typedef {object} TJSSettingsUIData\r\n *\r\n * @property {{label: string, settings: object[]}[]} folders - Sorted folders with associated settings and label.\r\n *\r\n * @property {object[]} topLevel - Top level settings data.\r\n *\r\n * @property {object[]} sections - Custom sections.\r\n *\r\n * @property {import('svelte/store').Writable<number>} storeScrollbar - The store for `applyScrolltop`.\r\n *\r\n * @property {Function} [destroy] - The bound destroy callback function for received of TJSSettingsUIData.\r\n */\n\n/**\r\n * Registers game settings and creates a backing Svelte store for each setting. The Svelte store will update the\r\n * Foundry game settings and vice versa when changes occur to the Foundry game settings the updated data is set to the\r\n * store.\r\n *\r\n * Note: It is possible to add multiple `onChange` callbacks on registration.\r\n *\r\n * TODO: A possible future extension is to offer type checking against the setting type by creating a customized\r\n * writable store that has an overloaded `set` method to provide type checking.\r\n */\r\nclass TJSGameSettings\r\n{\r\n   /** @type {string} */\r\n   #namespace;\r\n\r\n   /** @type {GameSettingData[]} */\r\n   #settings = [];\r\n\r\n   /**\r\n    * @type {Map<string, import('svelte/store').Writable>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /** @type {UIControl} */\r\n   #uiControl;\r\n\r\n   /**\r\n    * Creates the TJSGameSettings instance.\r\n    *\r\n    * @param {string}   namespace - The namespace for all settings.\r\n    */\r\n   constructor(namespace)\r\n   {\r\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\r\n\r\n      this.#namespace = namespace;\r\n      this.#uiControl = new UIControl(this);\r\n   }\r\n\r\n   /**\r\n    * Creates a new writable for the given key.\r\n    *\r\n    * @param {*}  initialValue - An initial value to set to new stores.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The new writable.\r\n    */\r\n   static #createStore(initialValue)\r\n   {\r\n      return writable(initialValue);\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator / generator to return stored settings data.\r\n    *\r\n    * @returns {Generator<GameSettingData, void, *>}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      for (const setting of this.#settings)\r\n      {\r\n         yield setting;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {string} Returns namespace set in constructor.\r\n    */\r\n   get namespace()\r\n   {\r\n      return this.#namespace;\r\n   }\r\n\r\n   /**\r\n    * @returns {UIControl}\r\n    */\r\n   get uiControl()\r\n   {\r\n      return this.#uiControl;\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the `stores` Map or creates a new store for the key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {string}   [initialValue] - An initial value to set to new stores.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The store for the given key.\r\n    */\r\n   #getStore(key, initialValue)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSGameSettings.#createStore(initialValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Returns a readable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Readable|undefined} The associated store for the given game setting key.\r\n    */\r\n   getReadableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      const store = this.#getStore(key);\r\n\r\n      return { subscribe: store.subscribe };\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Writable|undefined} The associated store for the given game setting key.\r\n    */\r\n   getStore(key)\r\n   {\r\n      return this.getWritableStore(key);\r\n   }\r\n\r\n   /**\r\n    * Returns a writable Game Settings store for the associated key.\r\n    *\r\n    * @param {string}   key - Game setting key.\r\n    *\r\n    * @returns {import('svelte/store').Writable|undefined} The associated store for the given game setting key.\r\n    */\r\n   getWritableStore(key)\r\n   {\r\n      if (!this.#stores.has(key))\r\n      {\r\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\r\n         return;\r\n      }\r\n\r\n      return this.#getStore(key);\r\n   }\r\n\r\n   /**\r\n    * Registers a setting with TJSGameSettings and Foundry core.\r\n    *\r\n    * Note: The specific store subscription handler assigned to the passed in store or store created for the setting\r\n    * internally is returned from this function. In some cases when setting up custom stores particularly of object\r\n    * types with several child property stores (`propertyStore`) it is necessary to only update the setting store and\r\n    * not all subscribers to the custom store as the `propertyStore` instances are also subscribers to the custom store.\r\n    *\r\n    * This allows the custom store in the `set` implementation to mainly only trigger the TJSGameSettings subscriber\r\n    * handler on updates and not all the connected `propertyStore` instances.\r\n    *\r\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\r\n    *\r\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\r\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\r\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\r\n    *\r\n    * @returns {Function} The specific store subscription handler assigned to the passed in store.\r\n    */\r\n   register(setting, coreConfig = true)\r\n   {\r\n      if (!isObject$1(setting))\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\r\n      }\r\n\r\n      if (!isObject$1(setting.options))\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'setting.options' attribute is not an object.`);\r\n      }\r\n\r\n      if (typeof coreConfig !== 'boolean')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'coreConfig' is not an boolean.`);\r\n      }\r\n\r\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\r\n      {\r\n         throw new TypeError(\r\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\r\n      }\r\n\r\n      const namespace = setting.namespace;\r\n      const key = setting.key;\r\n      const folder = setting.folder;\r\n\r\n      // The `config` parameter passed to Foundry core.\r\n      const foundryConfig = coreConfig ? setting.options.config : false;\r\n\r\n      if (typeof namespace !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\r\n      }\r\n\r\n      if (typeof key !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\r\n      }\r\n\r\n      if (folder !== void 0 && typeof folder !== 'string')\r\n      {\r\n         throw new TypeError(`TJSGameSettings - register: 'folder' attribute is not a string.`);\r\n      }\r\n\r\n      const store = setting.store;\r\n\r\n      /**\r\n       * @type {GameSettingOptions}\r\n       */\r\n      const options = setting.options;\r\n\r\n      const onchangeFunctions = [];\r\n\r\n      // When true prevents local store subscription from a loop when values are object data.\r\n      let gateSet = false;\r\n\r\n      // Provides an `onChange` callback to update the associated store.\r\n      onchangeFunctions.push((value) =>\r\n      {\r\n         const callbackStore = this.#getStore(key);\r\n         if (callbackStore && !gateSet)\r\n         {\r\n            gateSet = true;\r\n            callbackStore.set(value);\r\n            gateSet = false;\r\n         }\r\n      });\r\n\r\n      // Handle loading any existing `onChange` callbacks.\r\n      if (isIterable(options?.onChange))\r\n      {\r\n         for (const entry of options.onChange)\r\n         {\r\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\r\n         }\r\n      }\r\n      else if (typeof options.onChange === 'function')\r\n      {\r\n         onchangeFunctions.push(options.onChange);\r\n      }\r\n\r\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\r\n      const onChange = (value) =>\r\n      {\r\n         for (const entry of onchangeFunctions) { entry(value); }\r\n      };\r\n\r\n      globalThis.game.settings.register(namespace, key, { ...options, config: foundryConfig, onChange });\r\n\r\n      // Set new store value with existing setting or default value.\r\n      const targetStore = store ? store : this.#getStore(key, globalThis.game.settings.get(namespace, key));\r\n\r\n      // If a store instance is passed into register then initialize it with game settings data.\r\n      if (store)\r\n      {\r\n         this.#stores.set(key, targetStore);\r\n         store.set(globalThis.game.settings.get(namespace, key));\r\n      }\r\n\r\n      const storeHandler = async (value) =>\r\n      {\r\n         if (!gateSet && globalThis.game.settings.get(namespace, key) !== value)\r\n         {\r\n            gateSet = true;\r\n            await globalThis.game.settings.set(namespace, key, value);\r\n         }\r\n\r\n         gateSet = false;\r\n      };\r\n\r\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\r\n      // existing game setting.\r\n      subscribeIgnoreFirst(targetStore, storeHandler);\r\n\r\n      this.#settings.push({\r\n         namespace,\r\n         key,\r\n         folder,\r\n         ...options\r\n      });\r\n\r\n      return storeHandler;\r\n   }\r\n\r\n   /**\r\n    * Registers multiple settings.\r\n    *\r\n    * Please refer to the note in {@link TJSGameSettings.register} about the returned object of store subscriber handler\r\n    * functions.\r\n    *\r\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\r\n    *\r\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\r\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\r\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\r\n    *\r\n    * @returns {Object<string, Function>} An object containing all TJSGameSetting store subscriber handlers for each\r\n    * setting `key` added.\r\n    */\r\n   registerAll(settings, coreConfig)\r\n   {\r\n      const storeHandlers = {};\r\n\r\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\r\n\r\n      for (const entry of settings)\r\n      {\r\n         if (!isObject$1(entry))\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\r\n         }\r\n\r\n         if (typeof entry.namespace !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\r\n         }\r\n\r\n         if (typeof entry.key !== 'string')\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\r\n         }\r\n\r\n         if (!isObject$1(entry.options))\r\n         {\r\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\r\n         }\r\n\r\n         storeHandlers[entry.key] = this.register(entry, coreConfig);\r\n      }\r\n\r\n      return storeHandlers;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} GameSettingOptions\r\n *\r\n * @property {object} [choices] - If choices are defined, the resulting setting will be a select menu.\r\n *\r\n * @property {boolean} [config=true] - Specifies that the setting appears in the configuration view.\r\n *\r\n * @property {*} [default] - A default value for the setting.\r\n *\r\n * @property {string} [hint] - A description of the registered setting and its behavior.\r\n *\r\n * @property {string} name - The displayed name of the setting.\r\n *\r\n * @property {Function|Iterable<Function>} [onChange] - An onChange callback function or iterable list of callbacks to\r\n *                                                      directly receive callbacks from Foundry on setting change.\r\n *\r\n * @property {{min: number, max: number, step: number}} [range] - If range is specified, the resulting setting will be\r\n *                                                                a range slider.\r\n *\r\n * @property {boolean} [requiresReload=false] - If true then a prompt to reload after changes occurs.\r\n *\r\n * @property {('client' | 'world')} [scope='client'] - Scope for setting.\r\n *\r\n * @property {object|Function} type - A constructable object or function.\r\n */\r\n\r\n/**\r\n * @typedef {object} GameSetting - Defines a game setting.\r\n *\r\n * @property {string} namespace - The setting namespace; usually the ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {string} folder - The name of the TJSSvgFolder to put this setting in to group them.\r\n *\r\n * @property {import('svelte/store').Writable} [store] - An existing store instance to use.\r\n *\r\n * @property {GameSettingOptions} options - Configuration for setting data.\r\n */\r\n\r\n/**\r\n * @typedef {GameSettingOptions} GameSettingData - Stores the primary TJS game setting keys w/ GameSettingOptions.\r\n *\r\n * @property {string} namespace - The setting namespace; usually the ID of the module / system.\r\n *\r\n * @property {string} key - The setting key to register.\r\n *\r\n * @property {string} folder - The name of the TJSSvgFolder to put this setting in to group them.\r\n */\n\n/**\r\n * Provides an accessible JS object that is updated reactively from all or subset of TJSGameSettings stores.\r\n * Accessors are provided to directly get / set current setting data. Using a setter will update the setting and backing\r\n * store.\r\n *\r\n * Note: You can create a JSDoc / `@typedef` to apply with `@type` and achieve typing support in IDEs for the\r\n * customizable live settings instance. Please see the example at the end of this source file on how to accomplish this\r\n * task.\r\n *\r\n * TJSLiveGameSettings is also a readable Svelte store essentially providing a customizable derived store of all\r\n * settings tracked.\r\n *\r\n * Note: When using from JS a second subscriber function argument is the key that was updated.\r\n * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\r\n */\r\nclass TJSLiveGameSettings\r\n{\r\n   /**\r\n    * Stores the current parsed game setting data.\r\n    *\r\n    * @type {{}}\r\n    */\r\n   #currentData = {};\r\n\r\n   /**\r\n    * Map of all game settings stores and unsubscribe functions currently subscribed.\r\n    *\r\n    * @type {Map<string, { unsubscribe: Function, store: import('svelte/store').Writable }>}\r\n    */\r\n   #gameSettings = new Map();\r\n\r\n   /**\r\n    * Stores readable subscribers of this instance.\r\n    *\r\n    * Note: When using from JS a second argument is the key that was updated.\r\n    * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\r\n    *\r\n    * @type {((liveSettings: TJSLiveGameSettings, key: string) => void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * Stores the last updated key.\r\n    *\r\n    * @type {string}\r\n    */\r\n   #lastKey = void 0;\r\n\r\n   /**\r\n    * Creates a live binding against the setting stores. All settings are configured by default, but can also be\r\n    * filtered by setting key with inclusive / exclusive Sets.\r\n    *\r\n    * @param {TJSGameSettings}   gameSettings - A game settings instance to subscribe to...\r\n    *\r\n    * @param {object}            [options] - TJSLiveGameSettings options.\r\n    *\r\n    * @param {Set<string>}       [options.include] - A Set of setting keys to include from subscribing.\r\n    *\r\n    * @param {Set<string>}       [options.exclude] - A Set of setting keys to exclude from subscribing.\r\n    */\r\n   constructor(gameSettings, { include, exclude } = {})\r\n   {\r\n      if (!(gameSettings instanceof TJSGameSettings))\r\n      {\r\n         throw new TypeError(`'gameSettings' is not a TJSGameSettings instance.`);\r\n      }\r\n\r\n      if (include !== void 0 && !(include instanceof Set)) { throw new TypeError(`'options.include' is not a Set.`); }\r\n      if (exclude !== void 0 && !(exclude instanceof Set)) { throw new TypeError(`'options.exclude' is not a Set.`); }\r\n\r\n      for (const setting of gameSettings)\r\n      {\r\n         const key = setting.key;\r\n\r\n         // Skip any keys that are in the include set.\r\n         if (include !== void 0 && !include.has(key)) { continue; }\r\n\r\n         // Skip any keys that are in the exclude set.\r\n         if (exclude !== void 0 && exclude.has(key)) { continue; }\r\n\r\n         if (typeof this[key] === 'function' || key === 'lastKey')\r\n         {\r\n            console.warn(`TJSLiveGameSettings warning: key (${key}) shadows a function. Skipping key.`);\r\n         }\r\n\r\n         const store = gameSettings.getStore(key);\r\n\r\n         // Update this instance storing setting data by key.\r\n         this.#gameSettings.set(key, {\r\n            store,\r\n            unsubscribe: store.subscribe((data) =>\r\n            {\r\n               if (this.#currentData !== void 0) { this.#currentData[key] = data; }\r\n\r\n               this.#lastKey = key;\r\n\r\n               // Notify any child instance that a particular key has updated.\r\n               this._update(key);\r\n\r\n               // Notify any readable store subscribers.\r\n               this.#updateSubscribers(key);\r\n            })\r\n         });\r\n\r\n         // Define new accessors for setting key.\r\n         Object.defineProperty(this, key, {\r\n            get: () =>\r\n            {\r\n               if (this.#currentData === void 0)\r\n               {\r\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\r\n               }\r\n               else\r\n               {\r\n                  return this.#currentData[key];\r\n               }\r\n            },\r\n            set: (data) =>\r\n            {\r\n               if (this.#currentData === void 0)\r\n               {\r\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\r\n               }\r\n               else\r\n               {\r\n                  this.#gameSettings.get(key).store.set(data);\r\n               }\r\n            }\r\n         });\r\n      }\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * @returns {string} Last updated setting key.\r\n    */\r\n   get lastKey()\r\n   {\r\n      return this.#lastKey;\r\n   }\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Destroys this instance of TJSLiveGameSettings and unsubscribes from all game setting stores.\r\n    */\r\n   destroy()\r\n   {\r\n      for (const data of this.#gameSettings)\r\n      {\r\n         if (typeof data.unsubscribe === 'function') { data.unsubscribe(); }\r\n      }\r\n\r\n      this.#gameSettings.clear();\r\n      this.#currentData = void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns an iterator / generator of all setting entries.\r\n    *\r\n    * @returns {Generator<[string, *], void, *>}\r\n    */\r\n   *entries()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield [key, this.#currentData[key]];\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns an iterator / generator of all setting keys.\r\n    *\r\n    * @returns {Generator<string, void, *>}\r\n    */\r\n   *keys()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield key;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns a string / JSON stringify of the current setting data.\r\n    *\r\n    * @returns {string} Tracked setting data.\r\n    */\r\n   toString()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      return JSON.stringify(this.#currentData);\r\n   }\r\n\r\n   /**\r\n    * Override to respond to setting update.\r\n    *\r\n    * @param {string} key - The setting / local key that updated.\r\n    *\r\n    * @protected\r\n    */\r\n   _update(key) {}   // eslint-disable-line no-unused-vars\r\n\r\n   /**\r\n    * Returns an iterator / generator of all values.\r\n    *\r\n    * @returns {Generator<*, void, *>}\r\n    */\r\n   *values()\r\n   {\r\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\r\n\r\n      for (const key in this.#currentData)\r\n      {\r\n         yield this.#currentData[key];\r\n      }\r\n   }\r\n\r\n   // Readable store implementation ----------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {(liveSettings: TJSLiveGameSettings, key: string) => void} handler - Callback function that is invoked on\r\n    *                                                                             update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this, void 0);             // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @param {string} key - The key that was updated.\r\n    */\r\n   #updateSubscribers(key)\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this, key); }\r\n   }\r\n}\r\n\r\n// Example of creating a typedef to type your specific live game settings instance. Add all relevant `@property`\r\n// entries.\r\n//\r\n// /**\r\n//  * @typdef {TJSLiveGameSettings} MyLiveGameSettings - Extend TJSLiveGameSettings and name this anything.\r\n//  *\r\n//  * @property {boolean} myBooleanSetting - Add property / type entries for setting keys associated w/ accessors.\r\n//  */\r\n//\r\n// /** @type {MyLiveGameSettings} */\r\n// const liveGameSettings = new TJSLiveGameSettings(gameSettings);\r\n// liveGameSettings.myBooleanSetting iss now typed as a boolean.\n\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass WorldSettingArrayStore extends CrudArrayObjectStore\r\n{\r\n   /** @type {string} */\r\n   #key;\r\n\r\n   /** @type {string} */\r\n   #namespace;\r\n\r\n   /**\r\n    *\r\n    * @param {object}            [opts] - Optional parameters.\r\n    *\r\n    * @param {TJSGameSettings}   [opts.gameSettings] - An instance of TJSGameSettings.\r\n    *\r\n    * @param {string}            [opts.namespace] - Game setting 'namespace' field.\r\n    *\r\n    * @param {string}            [opts.key] - Game setting 'key' field.\r\n    *\r\n    * @param {CrudArrayObjectStoreParams} [opts.rest] - Rest of CrudArrayObjectStore parameters.\r\n    */\r\n   constructor({ gameSettings, namespace, key, ...rest })\r\n   {\r\n      super({\r\n         ...rest,\r\n         extraData: { namespace, key }\r\n      });\r\n\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\r\n\r\n      this.#namespace = namespace;\r\n      this.#key = key;\r\n\r\n      if (gameSettings)\r\n      {\r\n         gameSettings.register({\r\n            namespace,\r\n            key,\r\n            store: this,\r\n            options: {\r\n               scope: 'world',\r\n               config: false,\r\n               default: Array.isArray(rest.defaultData) ? rest.defaultData : [],\r\n               type: Array\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get key() { return this.#key; }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get namespace() { return this.#namespace; }\r\n}\n\n/**\r\n * Wraps a writable stores set method invoking a callback after the store is set. This allows hard coupled parent /\r\n * child relationships between stores to update directly without having to subscribe to the child store. This is a\r\n * particular powerful pattern when the `setCallback` is a debounced function that syncs a parent store and / or\r\n * serializes data.\r\n *\r\n * Note: Do consider carefully if this is an optimum solution; this is a quick implementation helper, but a better\r\n * solution is properly managing store relationships through subscription.\r\n *\r\n * @template T\r\n *\r\n * @param {import('svelte/store').Writable<T>} store - A store to wrap.\r\n *\r\n * @param {(store?: import('svelte/store').Writable<T>, value?: T) => void} setCallback - A callback to invoke after\r\n *                                                                                        store set.\r\n *\r\n * @returns {import('svelte/store').Writable<T>} Wrapped store.\r\n */\r\nfunction storeCallback(store, setCallback)\r\n{\r\n   if (!isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\r\n   if (typeof setCallback !== 'function') { throw new TypeError(`'setCallback' is not a function.`); }\r\n\r\n   /** @type {import('svelte/store').Writable<T>} */\r\n   return {\r\n      set: (value) =>\r\n      {\r\n         store.set(value);\r\n         setCallback(store, value);\r\n      },\r\n\r\n      subscribe: store.subscribe,\r\n\r\n      update: typeof store.update === 'function' ? store.update : void 0\r\n   };\r\n}\n\nexport { ArrayObjectStore, CrudArrayObjectStore, ObjectEntryStore, TJSGameSettings, TJSLiveGameSettings, WorldSettingArrayStore, createFilterQuery, storeCallback };\n//# sourceMappingURL=index.js.map\n","import { TJSSessionStorage } from \"@typhonjs-fvtt/runtime/svelte/store\";\n\nexport const mccSessionStorage = new TJSSessionStorage();\n","import { hasSetter } from \"@typhonjs-fvtt/runtime/svelte/util\";\n\nimport { mccSessionStorage } from \"./mccSessionStorage.js\";\n\n/**\n * Creates a session storage store and link it to an accessor / setter on the given target.\n * @template T\n * @param {object} target - Target object\n * @param {string} accessor - The accessor property to set\n * @param {T} [initial] - An initial default value\n * @returns {import(\"svelte/store\").Writable<T>} An accessor store\n */\nexport function createAccessorStore(target, accessor, initial) {\n\tif (!hasSetter(target, accessor)) {\n\t\tthrow new TypeError(`Accessor '${accessor} is not available on target.`);\n\t}\n\n\tconst sessionKey = `mcc.${accessor}`;\n\n\ttarget[accessor] = mccSessionStorage.getItem(sessionKey, initial);\n\n\tconst mccSessionStore = mccSessionStorage.getStore(sessionKey, initial);\n\n\treturn {\n\t\t/**\n\t\t * @param {T => void} handler\n\t\t * @returns {import(\"svelte/store\").Unsubscriber} Unsubscriber\n\t\t */\n\t\tsubscribe: handler => mccSessionStore.subscribe(handler),\n\n\t\t/**\n\t\t * @param {T} value\n\t\t */\n\t\tset: value => {\n\t\t\ttarget[accessor] = value;\n\t\t\tmccSessionStore.set(value);\n\t\t},\n\t};\n}\n","import { mccSessionStorage } from \"./mccSessionStorage.js\";\n\n// Get initial value from session storage immediately\nlet active = mccSessionStorage.getItem(\"mcc.active\", false);\n\nconst storeActive = mccSessionStorage.getStore(\"mcc.active\", active);\n\n/**\n * Provides a filter function to only show rows that are for active packages\n * @param {RowData} row\n * @returns {boolean} filtered\n */\nfunction filterActive(row) {\n\treturn !active || game.modules.get(row.id)?.active;\n}\n\n// Create a custom store that changes when the active store changes\nfilterActive.subscribe = handler => storeActive.subscribe(handler);\n\nfilterActive.set = value => {\n\tactive = value;\n\tstoreActive.set(value);\n};\n\nexport { filterActive };\n","import { writable } from \"svelte/store\";\n\nimport { mccSessionStorage } from \"./mccSessionStorage.js\";\nimport { statusData } from \"./statusData.js\";\n\n/**\n * Get initial value from session storage immediately.\n * @type {StatusEntry}\n */\nconst statuses = mccSessionStorage.getItem(\"mcc.statuses\", Object.keys(statusData).map(key => ({ key, value: true })));\n\nconst storeStatuses = writable(statuses);\n\nstoreStatuses.getVisible = key => {\n\tconst index = statuses.findIndex(entry => entry.key === key);\n\treturn index >= 0 ? statuses[index].value : void 0;\n};\n\nstoreStatuses.setExclusive = index => {\n\tif (index >= 0 && index < statuses.length) {\n\t\tfor (const status of statuses) {\n\t\t\tstatus.value = false;\n\t\t}\n\n\t\tstatuses[index].value = true;\n\n\t\tmccSessionStorage.setItem(\"mcc.statuses\", statuses);\n\t\tstoreStatuses.set(statuses);\n\t}\n};\n\nstoreStatuses.setCompatibleVisible = () => {\n\tfor (const status of statuses) {\n\t\tstatus.value = false;\n\t}\n\n\tstatuses[3].value = true;\n\tstatuses[4].value = true;\n\tstatuses[7].value = true;\n\n\tmccSessionStorage.setItem(\"mcc.statuses\", statuses);\n\tstoreStatuses.set(statuses);\n};\n\nstoreStatuses.setVisible = (key, value) => {\n\tconst index = statuses.findIndex(entry => entry.key === key);\n\n\tif (index >= 0) {\n\t\tstatuses[index].value = value;\n\t\tmccSessionStorage.setItem(\"mcc.statuses\", statuses);\n\t\tstoreStatuses.set(statuses);\n\t}\n};\n\nstoreStatuses.toggleVisible = key => {\n\tconst index = statuses.findIndex(entry => entry.key === key);\n\n\tif (index >= 0) {\n\t\tstatuses[index].value = !statuses[index].value;\n\t\tmccSessionStorage.setItem(\"mcc.statuses\", statuses);\n\t\tstoreStatuses.set(statuses);\n\t}\n};\n\nstoreStatuses.reset = () => {\n\tfor (const status of statuses) {\n\t\tstatus.value = true;\n\t}\n\tmccSessionStorage.setItem(\"mcc.statuses\", statuses);\n\tstoreStatuses.set(statuses);\n};\n\n/**\n * Provides a filter function to remove rows that are part of hidden statuses set\n * @param {RowData} row\n * @returns {boolean} filtered\n */\nfunction filterStatuses(row) {\n\treturn storeStatuses.getVisible(row.status) ?? false;\n}\n\n// Create a custom store that changes when hidden statuses changes\nfilterStatuses.subscribe = handler => storeStatuses.subscribe(handler);\n\nfilterStatuses.getVisible = storeStatuses.getVisible;\nfilterStatuses.reset = storeStatuses.reset;\nfilterStatuses.setExclusive = storeStatuses.setExclusive;\nfilterStatuses.setCompatibleVisible = storeStatuses.setCompatibleVisible;\nfilterStatuses.setVisible = storeStatuses.setVisible;\nfilterStatuses.toggleVisible = storeStatuses.toggleVisible;\n\nexport { filterStatuses };\n\n/**\n * @typedef {object} StatusEntry\n * @property {keyof statusData} key - Status key\n * @property {boolean} value - Status enabled state\n */\n","import { mccSessionStorage } from \"./mccSessionStorage.js\";\n\n// Get initial value from session storage immediately\nlet sortBy = mccSessionStorage.getItem(\"mcc.sortBy\", \"\");\n\nconst storeSortBy = mccSessionStorage.getStore(\"mcc.sortBy\", \"\");\n\n/**\n * Provides the compare function to sort packages\n * @param {object} a\n * @param {object} b\n * @returns {number} sort order\n */\nfunction sortByHeader(a, b) {\n\tif (sortBy && a?.[sortBy] && b?.[sortBy]) {\n\t\tif (sortBy === \"version\") {\n\t\t\treturn isNewerVersion(a.version, b.version) ? 1 : -1;\n\t\t}\n\t\treturn a[sortBy].localeCompare(b[sortBy]);\n\t}\n\treturn 0;\n}\n\n// Create a custom store that changes when a table header clicked\nsortByHeader.subscribe = handler => storeSortBy.subscribe(handler);\n\nsortByHeader.set = value => {\n\tsortBy = value;\n\tstoreSortBy.set(sortBy);\n};\n\nexport { sortByHeader };\n","import { derived, writable } from \"svelte/store\";\n\nimport { DynArrayReducer } from \"@typhonjs-fvtt/runtime/svelte/store\";\nimport { createFilterQuery } from \"@typhonjs-fvtt/svelte-standard/store\";\n\nimport SpreadsheetController from \"../controller/SpreadsheetController.js\";\n\nimport { createAccessorStore } from \"./createAccessorStore.js\";\nimport { filterActive } from \"./filterActive.js\";\nimport { filterStatuses } from \"./filterStatuses.js\";\nimport { mccSessionStorage } from \"./mccSessionStorage.js\";\nimport { sortByHeader } from \"./sortByHeader.js\";\nimport { statusData } from \"./statusData.js\";\n\nexport class SpreadsheetStore extends DynArrayReducer {\n\t/** @type {Map<string, PackageLinkData>} */\n\t#packageLinks = new Map();\n\n\t/**\n\t * Stores pie chart data; further data is initialized at runtime\n\t * @type {PieChartData}\n\t */\n\t#pieData = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tbackgroundColor: Object.values(statusData).map(\n\t\t\t\t\t({ hsl }) => `hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, 100%)`\n\t\t\t\t),\n\t\t\t\thoverBackgroundColor: Object.values(statusData).map(\n\t\t\t\t\t({ hsl }) => `hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2] + 10}%, 80%)`\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t};\n\n\t/** @type {string} */\n\t#version;\n\n\t/** @type {string[]} */\n\t#versions = [];\n\n\t/** @type {SpreadsheetStores} */\n\t#stores;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Creates a derived store that calculates the current working percentage based on filtered packages\n\t\t * @type {import(\"svelte/store\").Readable<number>}\n\t\t */\n\t\tconst filteredPercentage = derived(this, () => {\n\t\t\tlet working = 0;\n\n\t\t\tfor (const row of this) {\n\t\t\t\tif ([\"G\", \"N\", \"C\"].includes(row.status)) {\n\t\t\t\t\tworking++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn parseFloat((100 * (working / Math.max(this.index.length, 1))).toFixed(2));\n\t\t});\n\n\t\tthis.#stores = {\n\t\t\tdetails: mccSessionStorage.getStore(\"mcc.details\", false),\n\t\t\tactive: filterActive,\n\t\t\tfilteredPercentage,\n\t\t\tfilterSearch: createFilterQuery([\"title\", \"id\"], { store: mccSessionStorage.getStore(\"mcc.search\", \"\") }),\n\t\t\tpieData: writable({}),\n\t\t\treversed: createAccessorStore(this, \"reversed\", false),\n\t\t\tscrollTop: mccSessionStorage.getStore(\"mcc.scrollTop\", 0),\n\t\t\tsortBy: sortByHeader,\n\t\t\tstatuses: filterStatuses,\n\t\t\tversion: createAccessorStore(this, \"version\"),\n\t\t};\n\n\t\tthis.filters.add(this.#stores.filterSearch);\n\t\tthis.filters.add(filterActive);\n\t\tthis.filters.add(filterStatuses);\n\t\tthis.sort.set(sortByHeader);\n\n\t\t// Subscribe to updates and calculate pie chart data for filtered packages\n\t\tthis.subscribe(() => {\n\t\t\tconst filteredData = [...this];\n\n\t\t\t// Update pie chart data with filtered data\n\t\t\tthis.#pieData.datasets[0].data = Object.keys(statusData).map(\n\t\t\t\tstatus => filteredData.filter(row => row.status === status).length\n\t\t\t);\n\n\t\t\tthis.#stores.pieData.set(this.#pieData);\n\t\t});\n\t}\n\n\t/**\n\t * @returns {SpreadsheetStores} All child stores\n\t */\n\tget stores() {\n\t\treturn this.#stores;\n\t}\n\n\t/**\n\t * @returns {string} Current spreadsheet version\n\t */\n\tget version() {\n\t\treturn this.#version;\n\t}\n\n\t/**\n\t * @param {string} version New spreadsheet version\n\t */\n\tset version(version) {\n\t\tthis.#version = version;\n\t}\n\n\t/**\n\t * @returns {string[]} All spreadsheet versions\n\t */\n\tget versions() {\n\t\treturn this.#versions;\n\t}\n\n\t/**\n\t * Parses and builds all package data for any links to show on context menu click\n\t */\n\tbuildPackageLinks() {\n\t\tconst packageList = SpreadsheetController.getModuleList();\n\n\t\tfor (const data of packageList) {\n\t\t\tconst packageData = data?.data;\n\t\t\tconst id = packageData?.id ?? packageData?.name;\n\t\t\tconst url = packageData?.url;\n\n\t\t\tif (id) {\n\t\t\t\tthis.#packageLinks.set(id, { id, url });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the package link data for the given package ID\n\t * @param {string}\tid - Package ID\n\t * @returns {PackageLinkData} Any package link data\n\t */\n\tgetPackageLinks(id) {\n\t\treturn this.#packageLinks.get(id);\n\t}\n\n\t/**\n\t * Resets the search and status filters\n\t */\n\tresetFilters() {\n\t\tthis.#stores.filterSearch.set(\"\");\n\t\tthis.#stores.statuses.reset();\n\t}\n\n\tasync update() {\n\t\tconst data = await SpreadsheetController.getRows(this.#version);\n\t\tthis.setData(data);\n\t}\n\n\tasync initialize() {\n\t\tthis.#versions = await SpreadsheetController.getVersions();\n\n\t\t// Only set the version to the latest spreadsheet version if it isn't retrieved from session storage\n\t\tif (typeof this.#version !== \"string\" || !this.#versions.includes(this.#version)) {\n\t\t\tthis.#stores.version.set(this.#versions.at(-1));\n\t\t}\n\n\t\t// Add pie chart label data\n\t\tthis.#pieData.labels = Object.values(statusData).map(({ explanation }) => explanation);\n\n\t\tthis.buildPackageLinks();\n\n\t\treturn this.update();\n\t}\n}\n\n/**\n * @typedef {object} PackageLinkData\n * @property {string} id - Package ID\n * @property {string} [url] - Package URL\n */\n\n/**\n * @typedef {object} PieChartData\n * @property {string[]} labels - All status labels\n * @property {object[]} datasets\n * @property {number[]} datasets.data\n * @property {string[]} datasets.backgroundColor\n * @property {string[]} datasets.hoverBackgroundColor\n */\n\n/**\n * @typedef {object} SpreadsheetStores\n * @property {import(\"svelte/store\").Writable<boolean>} details - Show or hide additional details in table\n * @property {import(\"svelte/store\").Writable<boolean>} active - Whether or not only active packages are displayed\n * @property {import(\"svelte/store\").Readable<number>} filteredPercentage - Stores current working percentage on filtered package data\n * @property {import(\"svelte/store\").Writable<string>} filterSearch - Stores the filter search string\n * @property {import(\"svelte/store\").Writable<number[]>} pieData - Stores Chart.js pie chart data\n * @property {import(\"svelte/store\").Writable<boolean>} reversed - Stores DynArrayReducer reversed state\n * @property {import(\"svelte/store\").Writable<number>} scrollTop - Stores scroll bar position\n * @property {import(\"svelte/store\").Writable<string>} sortBy - Table header key to sort by\n * @property {import(\"svelte/store\").Readable<object[]>} statuses - Stores statuses visibility\n * @property {import(\"svelte/store\").Writable<string>} version - Stores current spreadsheet version\n */\n","<script>\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n</script>\n\n<main>\n\t<h4>{localize(\"mcc.loading\")}</h4>\n\t<progress />\n</main>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tmargin: auto;\n\t\tfont-size: 2em;\n\t\tcolor: var(--mcc-text-dark-color);\n\t}\n\n\th4 {\n\t\tfont-size: 2em;\n        text-align: center;\n\t}\n</style>\n","<script>\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n\texport let error = \"\";\n\tconsole.error(error);\n</script>\n\n<main>\n\t<i class=\"fas fa-exclamation-triangle\" />\n\t<pre>{error}</pre>\n\t<p>{localize(\"mcc.error\")}</p>\n\t<!-- svelte-ignore missing-declaration -->\n\t<a href={game.modules.get(\"mcc\").data.bugs}>\n\t\t{localize(\"mcc.issues\")}\n\t\t<i class=\"fas fa-external-link-alt\" />\n\t</a>\n</main>\n\n<style>\n\tmain {\n\t\tpadding: 1em;\n\t\ttext-align: center;\n\t\tfont-size: 1.5em;\n\t\tcolor: var(--mcc-text-dark-color);\n\t}\n\n\t.fa-exclamation-triangle {\n\t\tfont-size: 8em;\n\t\tcolor: var(--mcc-dark-color);\n\t}\n\n\tpre {\n\t\twhite-space: normal;\n\t}\n</style>\n","<script>\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n</script>\n\n<div class=\"notification\">\n\t{localize(\"mcc.reminder\")}\n</div>\n\n<style>\n\t.notification {\n\t\tmargin: 1rem;\n\t\ttext-shadow: none;\n\t\tbackground: var(--mcc-medium-color);\n\t\tborder: 1px solid var(--mcc-dark-color);\n\t}\n\n\t.notification::before {\n\t\tcontent: \"\\f4c4\";\n\t}\n</style>\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.mjs';\n\nChart.register(...registerables);\n\nexport default Chart;\n","<script>\n\timport { getContext } from \"svelte\";\n\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\tconst { pieData, statuses } = spreadsheetStore.stores;\n</script>\n\n<section>\n\t{#each $statuses as status, i (status.key)}\n\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t<div class=\"entry\" class:line-through={!status.value} on:click={() => statuses.toggleVisible(status.key)}>\n\t\t\t<span style:background-color={$pieData.datasets[0].backgroundColor[i]}>{$pieData.datasets[0].data[i]} / {$spreadsheetStore.index.length}</span>\n\t\t\t<!-- svelte-ignore a11y-missing-attribute -->\n\t\t\t<a>{$pieData.labels[i]}</a>\n\t\t</div>\n\t{/each}\n\t<hr />\n\t<div class=\"links\">\n\t\t<!-- svelte-ignore a11y-missing-attribute a11y-click-events-have-key-events -->\n\t\t<a on:click={statuses.setCompatibleVisible}>\n\t\t\t<i class=\"fas fa-thumbs-up\" /> {localize(\"mcc.showCompatible\")}\n\t\t</a>\n\t\t<!-- svelte-ignore a11y-missing-attribute a11y-click-events-have-key-events -->\n\t\t<a on:click={() => spreadsheetStore.resetFilters()}>\n\t\t\t<i class=\"fas fa-trash\" /> {localize(\"mcc.resetFilters\")}\n\t\t</a>\n\t</div>\n</section>\n\n<style>\n\t.line-through {\n\t\ttext-decoration: line-through;\n\t}\n\n\t.entry {\n\t\tdisplay: flex;\n\t\tgap: 1ch;\n\t\talign-items: center;\n\t\tpadding: 0.5ch 0;\n\t\tcursor: pointer;\n\t}\n\n\t.entry a {\n\t\twidth: 100%;\n\t}\n\n\t.links {\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t\tpadding: 1ch;\n\t}\n\n\thr {\n\t\twidth: 100%;\n\t\tmargin: 1ch;\n\t}\n\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n\n\tspan {\n\t\tbox-sizing: border-box;\n\t\twidth: 5rem;\n\t\tborder-radius: 0.5ch;\n\t\ttext-align: center;\n\t\tborder: solid 2px rgba(0, 0, 0, 0.4);\n\t\twhite-space: nowrap;\n\t\tpadding: 0 1ch;\n\t}\n</style>\n","<script>\n\timport { getContext, onDestroy, onMount } from \"svelte\";\n\n\timport Chart from \"chart.js/auto\";\n\n\timport PieChartLegend from \"./PieChartLegend.svelte\";\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\tconst { statuses, pieData } = spreadsheetStore.stores;\n\tconst radius = 125;\n\n\tlet chart = null,\n\t\tcanvasEl;\n\n\t$: if (chart) {\n\t\tchart.data = $pieData;\n\t\tchart.update();\n\t}\n\n\t$: if (chart) {\n\t\tupdateDataVisibility($statuses);\n\t}\n\n\t/**\n\t * Update chart data visibility based on statuses store entries\n\t * @param {StatusEntry[]} statusEntries - Status entries to update visibility for\n\t */\n\tfunction updateDataVisibility(statusEntries) {\n\t\tfor (let i = 0; i < statusEntries.length; i++) {\n\t\t\tchart[statusEntries[i].value ? \"show\" : \"hide\"](0, i);\n\t\t}\n\t}\n\n\t/**\n\t * Determines if a point is inside the chart radius\n\t * @param {number} x - X coord\n\t * @param {number} y - Y coord\n\t * @returns {boolean} - Whether the point is inside the chart radius\n\t */\n\tfunction isInsideChart(x, y) {\n\t\treturn Math.sqrt((x - radius) ** 2 + (-y + radius) ** 2) < radius;\n\t}\n\n\tonMount(() => {\n\t\tchart = new Chart(canvasEl, {\n\t\t\ttype: \"pie\",\n\t\t\tdata: $pieData,\n\t\t\toptions: {\n\t\t\t\taspectRatio: 1,\n\t\t\t\tborderColor: \"transparent\",\n\t\t\t\tlayout: { padding: 0 },\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: { display: false },\n\t\t\t\t\ttooltip: { enabled: false },\n\t\t\t\t},\n\t\t\t\tresponsive: false,\n\t\t\t\tonHover: event => {\n\t\t\t\t\tevent.chart.canvas.style.cursor = isInsideChart(event.x, event.y) ? \"pointer\" : \"default\";\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tupdateDataVisibility($statuses);\n\t});\n\n\tonDestroy(() => {\n\t\tif (chart) chart.destroy();\n\t\tchart = null;\n\t});\n\n\tfunction onClick(event) {\n\t\tconst rect = canvasEl.getBoundingClientRect();\n\n\t\t// Check if the click is inside the chart by adjusting for the canvas bounding rect\n\t\tif (!isInsideChart(event.clientX - rect.left, event.clientY - rect.top)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst statusLength = $statuses.filter(status => status.value).length;\n\n\t\tif (statusLength <= 1) {\n\t\t\tstatuses.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tconst points = chart.getElementsAtEventForMode(event, \"nearest\", { intersect: true }, true);\n\n\t\tif (statusLength > 1 && points.length) {\n\t\t\tconst firstPoint = points[0];\n\t\t\tstatuses.setExclusive(firstPoint.index);\n\t\t}\n\t}\n</script>\n\n<section>\n\t<div>\n\t\t<canvas bind:this={canvasEl} on:click={onClick} width={radius * 2} height={radius * 2} />\n\t</div>\n\t<PieChartLegend />\n</section>\n\n<style>\n\tdiv {\n\t\tborder-radius: 100%;\n\t\tbox-shadow: 0 0 1ch rgba(0, 0, 0, 0.25);\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t\theight: fit-content;\n\t}\n\n\tsection {\n\t\tmargin: 1ch;\n\t\tdisplay: flex;\n\t\tgap: 2rem;\n\t\tjustify-content: center;\n\t}\n</style>\n","import { StyleManager } from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\nconst s_STYLE_KEY = '#__tjs-root-styles';\r\n\r\nconst cssVariables = new StyleManager({ docKey: s_STYLE_KEY, version: 1 });\r\n\r\nexport { cssVariables };\r\n","/**\r\n * Parses the core Foundry style sheet creating an indexed object of properties by selector.\r\n */\r\nexport class FoundryStyles\r\n{\r\n   static #sheet = void 0;\r\n\r\n   static #sheetMap = new Map();\r\n\r\n   static #initialized = false;\r\n\r\n   /**\r\n    * Called once on initialization / first usage. Parses the core foundry style sheet.\r\n    */\r\n   static #initialize()\r\n   {\r\n      this.#initialized = true;\r\n\r\n      const styleSheets = Array.from(document.styleSheets).filter((entry) => entry.href !== null);\r\n\r\n      let sheet;\r\n\r\n      const foundryStyleSheet = globalThis.foundry.utils.getRoute('/css/style.css');\r\n\r\n      // Find the core Foundry stylesheet.\r\n      for (const styleSheet of styleSheets)\r\n      {\r\n         let url;\r\n\r\n         try\r\n         {\r\n            url = new URL(styleSheet.href);\r\n         }\r\n         catch (err) { continue; }\r\n\r\n         if (typeof url.pathname === 'string' && url.pathname === foundryStyleSheet)\r\n         {\r\n            this.#sheet = sheet = styleSheet;\r\n            break;\r\n         }\r\n      }\r\n\r\n      // Quit now if the Foundry style sheet was not found.\r\n      if (!sheet) { return; }\r\n\r\n      // Parse each CSSStyleRule and build the map of selectors to parsed properties.\r\n      for (const rule of sheet.cssRules)\r\n      {\r\n         if (!(rule instanceof CSSStyleRule)) { continue; }\r\n\r\n         const obj = {};\r\n\r\n         // Parse `cssText` into an object of properties & values.\r\n         for (const entry of rule.style.cssText.split(';'))\r\n         {\r\n            const parts = entry.split(':');\r\n\r\n            // Sanity check.\r\n            if (parts.length < 2) { continue; }\r\n\r\n            obj[parts[0].trim()] = parts[1].trim();\r\n         }\r\n\r\n         this.#sheetMap.set(rule.selectorText, obj);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Gets the properties object associated with the selector. Try and use a direct match otherwise all keys\r\n    * are iterated to find a selector string that includes the `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @returns {Object<string, string>} Properties object.\r\n    */\r\n   static getProperties(selector)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         return this.#sheetMap.get(selector);\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector)) { return this.#sheetMap.get(key); }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Gets a specific property value from the given `selector` and `property` key. Try and use a direct selector\r\n    * match otherwise all keys are iterated to find a selector string that includes `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @param {string}   property - Specific property to locate.\r\n    *\r\n    * @returns {string|undefined} Property value.\r\n    */\r\n   static getProperty(selector, property)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         const data = this.#sheetMap.get(selector);\r\n         return typeof data === 'object' && property in data ? data[property] : void 0;\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector))\r\n         {\r\n            const data = this.#sheetMap.get(key);\r\n            if (typeof data === 'object' && property in data) { return data[property]; }\r\n         }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n}\r\n","<script>\r\n   /**\r\n    * --tjs-default-text-shadow-focus-hover: system default\r\n    * --tjs-default-outline-focus-visible: undefined; global replacement for focus-visible outline.\r\n    *\r\n    * --tjs-button-background\r\n    * --tjs-button-background-focus\r\n    * --tjs-button-background-focus-visible\r\n    * --tjs-button-background-hover\r\n    * --tjs-button-background-selected\r\n    * --tjs-button-border\r\n    * --tjs-button-border-radius\r\n    * --tjs-button-border-width\r\n    * --tjs-button-box-shadow-focus-visible\r\n    * --tjs-button-clip-path\r\n    * --tjs-button-clip-path-hover\r\n    * --tjs-button-clip-path-focus\r\n    * --tjs-button-cursor\r\n    * --tjs-button-diameter\r\n    * --tjs-button-outline-focus-visible\r\n    * --tjs-button-text-shadow-focus: undefined\r\n    * --tjs-button-text-shadow-hover: undefined\r\n    * --tjs-button-transition\r\n    * --tjs-button-transition-focus-visible\r\n    *\r\n    * --tjs-icon-button-background\r\n    * --tjs-icon-button-background-focus\r\n    * --tjs-icon-button-background-focus-visible\r\n    * --tjs-icon-button-background-hover\r\n    * --tjs-icon-button-background-selected\r\n    * --tjs-icon-button-border\r\n    * --tjs-icon-button-border-radius\r\n    * --tjs-icon-button-border-width\r\n    * --tjs-icon-button-box-shadow-focus-visible\r\n    * --tjs-icon-button-clip-path\r\n    * --tjs-icon-button-clip-path-focus\r\n    * --tjs-icon-button-clip-path-hover\r\n    * --tjs-icon-button-cursor\r\n    * --tjs-icon-button-diameter\r\n    * --tjs-icon-button-outline-focus-visible\r\n    * --tjs-icon-button-text-shadow-focus: undefined\r\n    * --tjs-icon-button-text-shadow-hover: undefined\r\n    * --tjs-icon-button-transition\r\n    * --tjs-icon-button-transition-focus-visible\r\n    */\r\n   import { createEventDispatcher } from 'svelte';\r\n\r\n   import { applyStyles }           from '@typhonjs-fvtt/runtime/svelte/action';\r\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isObject }              from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n   export let button = void 0;\r\n   export let icon = void 0;\r\n   export let title = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n   export let keyCode = void 0;\r\n   export let onPress = void 0;\r\n   export let onContextMenu = void 0;\r\n   export let onClickPropagate = void 0;\r\n\r\n   const dispatch = createEventDispatcher();\r\n\r\n   $: icon = isObject(button) && typeof button.icon === 'string' ? button.icon :\r\n    typeof icon === 'string' ? icon : '';\r\n   $: title = isObject(button) && typeof button.title === 'string' ? button.title :\r\n    typeof title === 'string' ? title : '';\r\n   $: styles = isObject(button) && typeof button.styles === 'object' ? button.styles :\r\n    typeof styles === 'object' ? styles : void 0;\r\n   $: efx = isObject(button) && typeof button.efx === 'function' ? button.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode :\r\n    typeof keyCode === 'string' ? keyCode : 'Enter';\r\n\r\n   $: onPress = isObject(button) && typeof button.onPress === 'function' ? button.onPress :\r\n    typeof onPress === 'function' ? onPress : void 0;\r\n   $: onContextMenu = isObject(button) && typeof button.onContextMenu === 'function' ? button.onContextMenu :\r\n    typeof onContextMenu === 'function' ? onContextMenu : void 0;\r\n\r\n   $: onClickPropagate = isObject(button) && typeof button.onClickPropagate === 'boolean' ? button.onClickPropagate :\r\n    typeof onClickPropagate === 'boolean' ? onClickPropagate : false;\r\n\r\n   /**\r\n    * Handle click event.\r\n    *\r\n    * @param {MouseEvent}    event -\r\n    */\r\n   function onClick(event)\r\n   {\r\n      if (typeof onPress === 'function') { onPress(); }\r\n\r\n      dispatch('press');\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {MouseEvent}   event -\r\n    */\r\n   function onContextMenuPress(event)\r\n   {\r\n      if (typeof onContextMenu === 'function') { onContextMenu(); }\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Consume / stop propagation of key down when key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeydown(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle press event if key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeyup(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         if (typeof onPress === 'function') { onPress(); }\r\n\r\n         dispatch('press');\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<div class=tjs-icon-button use:applyStyles={styles}>\r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <a on:click={onClick}\r\n       on:contextmenu={onContextMenuPress}\r\n       on:keydown={onKeydown}\r\n       on:keyup={onKeyup}\r\n       on:click\r\n       on:contextmenu\r\n       role=button\r\n       tabindex=0\r\n       title={localize(title)}\r\n       use:efx>\r\n        <i class={icon}></i>\r\n    </a>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        pointer-events: none;\r\n        display: block;\r\n        flex: 0 0 var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        height: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        width: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        align-self: center;\r\n        text-align: center;\r\n    }\r\n\r\n    a {\r\n        pointer-events: initial;\r\n        display: inline-block;\r\n        background: var(--tjs-icon-button-background, var(--tjs-button-background));\r\n        border: var(--tjs-icon-button-border, var(--tjs-button-border));\r\n        border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n        border-width: var(--tjs-icon-button-border-width, var(--tjs-button-border-width));\r\n        cursor: var(--tjs-icon-button-cursor, var(--tjs-button-cursor, pointer));\r\n        position: relative;\r\n        overflow: hidden;\r\n        clip-path: var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path, none));\r\n        transform-style: preserve-3d;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: var(--tjs-icon-button-transition, var(--tjs-button-transition, background 0.2s ease-in-out, clip-path 0.2s ease-in-out));\r\n        text-decoration: none;\r\n    }\r\n\r\n    a:focus {\r\n        background: var(--tjs-icon-button-background-focus, var(--tjs-button-background-focus));\r\n        text-shadow: var(--tjs-icon-button-text-shadow-focus, var(--tjs-button-text-shadow-focus, var(--tjs-default-text-shadow-focus-hover)));\r\n        clip-path: var(--tjs-icon-button-clip-path-focus, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-focus, var(--tjs-button-clip-path, none))));\r\n    }\r\n\r\n    a:focus-visible {\r\n        background: var(--tjs-icon-button-background-focus-visible, var(--tjs-button-background-focus-visible));\r\n        box-shadow: var(--tjs-icon-button-box-shadow-focus-visible, var(--tjs-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible)));\r\n        outline: var(--tjs-icon-button-outline-focus-visible, var(--tjs-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert)));\r\n        transition: var(--tjs-icon-button-transition-focus-visible, var(--tjs-button-transition-focus-visible, var(--tjs-default-transition-focus-visible)));\r\n    }\r\n\r\n    a:hover {\r\n        background: var(--tjs-icon-button-background-hover, var(--tjs-button-background-hover));\r\n        clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-hover, var(--tjs-button-clip-path, none))));\r\n        text-shadow: var(--tjs-icon-button-text-shadow-hover, var(--tjs-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover)));\r\n    }\r\n\r\n    i {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n        transform: translateZ(1px);\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * --tjs-default-text-shadow-focus-hover: system default\r\n    * --tjs-default-outline-focus-visible: undefined; global replacement for focus-visible outline.\r\n    *\r\n    * --tjs-button-background\r\n    * --tjs-button-background-focus\r\n    * --tjs-button-background-focus-visible\r\n    * --tjs-button-background-hover\r\n    * --tjs-button-background-selected\r\n    * --tjs-button-border\r\n    * --tjs-button-border-radius\r\n    * --tjs-button-border-width\r\n    * --tjs-button-box-shadow-focus-visible\r\n    * --tjs-button-clip-path\r\n    * --tjs-button-clip-path-focus\r\n    * --tjs-button-clip-path-hover\r\n    * --tjs-button-cursor\r\n    * --tjs-button-diameter\r\n    * --tjs-button-outline-focus-visible\r\n    * --tjs-button-text-shadow-focus: undefined\r\n    * --tjs-button-text-shadow-hover: undefined\r\n    * --tjs-button-transition\r\n    * --tjs-button-transition-focus-visible\r\n    *\r\n    * --tjs-icon-button-background\r\n    * --tjs-icon-button-background-focus\r\n    * --tjs-icon-button-background-focus-visible\r\n    * --tjs-icon-button-background-hover\r\n    * --tjs-icon-button-background-selected\r\n    * --tjs-icon-button-border\r\n    * --tjs-icon-button-border-radius\r\n    * --tjs-icon-button-border-width\r\n    * --tjs-icon-button-box-shadow-focus-visible\r\n    * --tjs-icon-button-clip-path\r\n    * --tjs-icon-button-clip-path-focus\r\n    * --tjs-icon-button-clip-path-hover\r\n    * --tjs-icon-button-cursor\r\n    * --tjs-icon-button-diameter\r\n    * --tjs-icon-button-outline-focus-visible\r\n    * --tjs-icon-button-text-shadow-focus: undefined\r\n    * --tjs-icon-button-text-shadow-hover: undefined\r\n    * --tjs-icon-button-transition\r\n    * --tjs-icon-button-transition-focus-visible\r\n    */\r\n   import { createEventDispatcher } from 'svelte';\r\n\r\n   import { applyStyles }           from '@typhonjs-fvtt/runtime/svelte/action';\r\n   import { isWritableStore }       from '@typhonjs-fvtt/runtime/svelte/store';\r\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isObject }              from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n   export let button = void 0;\r\n   export let icon = void 0;\r\n   export let title = void 0;\r\n   export let titleSelected = void 0;\r\n   export let store = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n   export let keyCode = void 0;\r\n   export let onPress = void 0;\r\n   export let onClose = void 0;\r\n   export let onContextMenu = void 0;\r\n   export let onClickPropagate = void 0;\r\n\r\n   const dispatch = createEventDispatcher();\r\n\r\n   $: icon = isObject(button) && typeof button.icon === 'string' ? button.icon :\r\n    typeof icon === 'string' ? icon : '';\r\n   $: title = isObject(button) && typeof button.title === 'string' ? button.title :\r\n    typeof title === 'string' ? title : '';\r\n   $: titleSelected = isObject(button) && typeof button.titleSelected === 'string' ? button.titleSelected :\r\n    typeof titleSelected === 'string' ? titleSelected : '';\r\n   $: store = isObject(button) && isWritableStore(button.store) ? button.store : isWritableStore(store) ?\r\n    store : void 0;\r\n   $: styles = isObject(button) && typeof button.styles === 'object' ? button.styles :\r\n    typeof styles === 'object' ? styles : void 0;\r\n   $: efx = isObject(button) && typeof button.efx === 'function' ? button.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode :\r\n    typeof keyCode === 'string' ? keyCode : 'Enter';\r\n\r\n   $: onPress = isObject(button) && typeof button.onPress === 'function' ? button.onPress :\r\n    typeof onPress === 'function' ? onPress : void 0;\r\n   $: onClose = isObject(button) && typeof button.onClose === 'function' ? button.onClose :\r\n    typeof onClose === 'function' ? onClose : void 0;\r\n   $: onContextMenu = isObject(button) && typeof button.onContextMenu === 'function' ? button.onContextMenu :\r\n    typeof onContextMenu === 'function' ? onContextMenu : void 0;\r\n\r\n   $: onClickPropagate = isObject(button) && typeof button.onClickPropagate === 'boolean' ? button.onClickPropagate :\r\n    typeof onClickPropagate === 'boolean' ? onClickPropagate : false;\r\n\r\n   let anchorEl;\r\n   let selected = false;\r\n\r\n   $: if (store) { selected = $store; }\r\n\r\n   // Chose the current title when `selected` changes; if there is no `titleSelected` fallback to `title`.\r\n   $: titleCurrent = selected && titleSelected !== '' ? titleSelected : title\r\n\r\n   /**\r\n    * Handle click event.\r\n    *\r\n    * @param {MouseEvent}    event -\r\n    */\r\n   function onClick(event)\r\n   {\r\n      selected = !selected;\r\n      if (store) { store.set(selected); }\r\n\r\n      if (typeof onPress === 'function') { onPress(selected); }\r\n\r\n      dispatch('press', { selected });\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {MouseEvent}   event -\r\n    */\r\n   function onContextMenuPress(event)\r\n   {\r\n      if (typeof onContextMenu === 'function') { onContextMenu(); }\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * In this case we can't set pointer-events: none for the div due to the slotted component, so process clicks on the\r\n    * div in respect to onClickPropagate.\r\n    *\r\n    * @param {MouseEvent} event -\r\n    */\r\n   function onClickDiv(event)\r\n   {\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handles `close:popup` event from any children components like TJSMenu.\r\n    */\r\n   function onClosePopup(event)\r\n   {\r\n      selected = false;\r\n      if (store) { store.set(false); }\r\n\r\n      if (typeof onClose === 'function') { onClose(selected); }\r\n\r\n      // The close event was triggered from a key press, so focus the anchor element / button.\r\n      if (typeof event?.detail?.keyboardFocus === 'boolean' && event.detail.keyboardFocus && anchorEl?.isConnected)\r\n      {\r\n         anchorEl.focus();\r\n\r\n         event.stopPropagation();\r\n         event.preventDefault();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Consume / stop propagation of key down when key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeydown(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle press event if key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeyup(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         selected = !selected;\r\n         if (store) { store.set(selected); }\r\n\r\n         if (typeof onPress === 'function') { onPress(selected); }\r\n\r\n         dispatch('press', { selected });\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<div class=tjs-toggle-icon-button\r\n     on:click={onClickDiv}\r\n     on:close:popup={onClosePopup}\r\n     use:applyStyles={styles}>\r\n   <!-- svelte-ignore a11y-missing-attribute -->\r\n   <a bind:this={anchorEl}\r\n      class:selected\r\n      on:click={onClick}\r\n      on:contextmenu={onContextMenuPress}\r\n      on:keydown={onKeydown}\r\n      on:keyup={onKeyup}\r\n      on:click\r\n      on:contextmenu\r\n      role=button\r\n      tabindex=0\r\n      title={localize(titleCurrent)}\r\n      use:efx>\r\n      <i class={icon} class:selected></i>\r\n   </a>\r\n   {#if selected}\r\n      <slot/>\r\n   {/if}\r\n</div>\r\n\r\n<style>\r\n   div {\r\n      display: block;\r\n      position: relative;\r\n      flex: 0 0 var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n      height: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n      width: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n      align-self: center;\r\n      text-align: center;\r\n   }\r\n\r\n   a {\r\n      pointer-events: initial;\r\n      display: inline-block;\r\n      background: var(--tjs-icon-button-background, var(--tjs-button-background));\r\n      border: var(--tjs-icon-button-border, var(--tjs-button-border));\r\n      border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n      border-width: var(--tjs-icon-button-border-width, var(--tjs-button-border-width));\r\n      cursor: var(--tjs-icon-button-cursor, var(--tjs-button-cursor, pointer));\r\n      position: relative;\r\n      overflow: hidden;\r\n      clip-path: var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path, none));\r\n      transform-style: preserve-3d;\r\n      width: 100%;\r\n      height: 100%;\r\n      transition: var(--tjs-icon-button-transition, var(--tjs-button-transition, background 0.2s ease-in-out, clip-path 0.2s ease-in-out));\r\n      text-decoration: none;\r\n   }\r\n\r\n   a:focus {\r\n      background: var(--tjs-icon-button-background-focus, var(--tjs-button-background-focus));\r\n      text-shadow: var(--tjs-icon-button-text-shadow-focus, var(--tjs-button-text-shadow-focus, var(--tjs-default-text-shadow-focus-hover)));\r\n      clip-path: var(--tjs-icon-button-clip-path-focus, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-focus, var(--tjs-button-clip-path, none))));\r\n   }\r\n\r\n   a:focus-visible {\r\n      background: var(--tjs-icon-button-background-focus-visible, var(--tjs-button-background-focus-visible));\r\n      box-shadow: var(--tjs-icon-button-box-shadow-focus-visible, var(--tjs-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible)));\r\n      outline: var(--tjs-icon-button-outline-focus-visible, var(--tjs-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert)));\r\n      transition: var(--tjs-icon-button-transition-focus-visible, var(--tjs-button-transition-focus-visible, var(--tjs-default-transition-focus-visible)));\r\n   }\r\n\r\n   a:hover {\r\n      background: var(--tjs-icon-button-background-hover, var(--tjs-button-background-hover));\r\n      clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-hover, var(--tjs-button-clip-path, none))));\r\n      text-shadow: var(--tjs-icon-button-text-shadow-hover, var(--tjs-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover)));\r\n   }\r\n\r\n   a.selected {\r\n      background: var(--tjs-icon-button-background-selected, var(--tjs-button-background-selected));\r\n      clip-path: var(--tjs-icon-button-clip-path-selected, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-selected, none)));\r\n   }\r\n\r\n   i {\r\n      display: inline-flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n      transform: translateZ(1px);\r\n   }\r\n</style>\r\n","let isV10 = false;\r\n\r\nHooks.once('init', () =>\r\n{\r\n   isV10 = !globalThis.foundry.utils.isNewerVersion(10, globalThis.game.version ?? globalThis.game?.data?.version);\r\n});\r\n\r\nexport class FVTTVersion\r\n{\r\n   /**\r\n    * Returns true when Foundry is v10+\r\n    *\r\n    * @returns {boolean} Foundry v10+\r\n    */\r\n   static get isV10() { return isV10; }\r\n}\r\n","function findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", separated = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            if (node.isText) {\n                text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n                separated = !blockSeparator;\n            }\n            else if (node.isLeaf) {\n                if (leafText) {\n                    text += typeof leafText === \"function\" ? leafText(node) : leafText;\n                }\n                else if (node.type.spec.leafText) {\n                    text += node.type.spec.leafText(node);\n                }\n                separated = !blockSeparator;\n            }\n            else if (!separated && node.isBlock) {\n                text += blockSeparator;\n                separated = true;\n            }\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let delSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = delSteps.length - 1; i >= 0; i--)\n        tr.step(delSteps[i]);\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let type = leftNodes[d].type, def = definesContent(type);\n        if (def && $from.node(preferredTargetIndex).type != type)\n            preferredDepth = d;\n        else if (def || !type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata properties:\nit will attach a property `\"pointer\"` with the value `true` to\nselection transactions directly caused by mouse or touch input, and\na `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\n[\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\n// TODO: Foundry v10.287 finally added `Plugin`, but is missing `PluginKey` from exports and doesn't include\r\n\r\n/**\r\n * A ProseMirror plugin to handle any of the higher level Svelte component editor options.\r\n *\r\n * The following options are handled:\r\n * - `initialSelection`: Sets the initial cursor / selection range to the start, end, or selects all text.\r\n */\r\nclass TJSEditorOptions\r\n{\r\n   /** @type {PMEditorExtra} */\r\n   #extra;\r\n\r\n   /** @type {TJSProseMirrorOptions} */\r\n   #options;\r\n\r\n   /**\r\n    * @param {TJSProseMirrorOptions}   options - Svelte component options.\r\n    *\r\n    * @param {PMEditorExtra}           extra - Extra / default data.\r\n    */\r\n   constructor(options, extra)\r\n   {\r\n      this.#options = options;\r\n      this.#extra = extra;\r\n   }\r\n\r\n   /**\r\n    * @param {TJSProseMirrorOptions} options - Svelte component options.\r\n    *\r\n    * @param {PMEditorExtra} extra - Default / extra data.\r\n    *\r\n    * @returns {Plugin<any>} PM Plugin.\r\n    */\r\n   static build(options, extra)\r\n   {\r\n      const instance = new this(options, extra);\r\n      return new Plugin({\r\n         key: new PluginKey('tjsEditorOptions'),\r\n         view: (view) => instance.#initialize(view)\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Handles `options.initialSelection`: Sets the initial cursor / selection range to the start, end, or selects\r\n    * all text.\r\n    *\r\n    * @param {EditorView}  view - PM editor view.\r\n    *\r\n    * @param {Transaction} tr - PM Transaction.\r\n    *\r\n    * @param {Node}        doc - PM document.\r\n    */\r\n   #handleInitialSelection(view, tr, doc)\r\n   {\r\n      const initialSelection = this.#options.initialSelection;\r\n      const type = initialSelection === 'all' || initialSelection === 'end' || initialSelection === 'start' ?\r\n       initialSelection : this.#extra.initialSelectionDefault;\r\n\r\n      const minPos = TextSelection.atStart(doc).from;\r\n      const maxPos = TextSelection.atEnd(doc).to;\r\n\r\n      let transaction;\r\n\r\n      switch (type)\r\n      {\r\n         case 'all':\r\n         {\r\n            const resolvedFrom = this.#minMax(0, minPos, maxPos);\r\n            const resolvedEnd = this.#minMax(doc.content.size, minPos, maxPos);\r\n            transaction = tr.setSelection(TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n\r\n         case 'end':\r\n         {\r\n            const resolvedFrom = this.#minMax(doc.content.size, minPos, maxPos);\r\n            const resolvedEnd = this.#minMax(doc.content.size, minPos, maxPos);\r\n            transaction = tr.setSelection(TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n\r\n         case 'start':\r\n         {\r\n            const resolvedFrom = this.#minMax(0, minPos, maxPos);\r\n            const resolvedEnd = this.#minMax(0, minPos, maxPos);\r\n            transaction = tr.setSelection(TextSelection.create(doc, resolvedFrom, resolvedEnd));\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (transaction)\r\n      {\r\n         const newState = view.state.apply(transaction);\r\n         view.updateState(newState);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Dispatches all Svelte component options actions on editor initialization.\r\n    *\r\n    * Note: We aren't creating a PluginView here! Just using the view callback as an initialization source.\r\n    *\r\n    * @param {EditorView}   view - PM editor view.\r\n    */\r\n   #initialize(view)\r\n   {\r\n      const tr = view.state.tr;\r\n      const doc = tr.doc;\r\n\r\n      this.#handleInitialSelection(view, tr, doc);\r\n\r\n      // Return empty object / PluginView.\r\n      return {};\r\n   }\r\n\r\n   #minMax(value = 0, min = 0, max = 0)\r\n   {\r\n      return Math.min(Math.max(value, min), max);\r\n   }\r\n}\n\n// Protect for absent global `ProseMirror` on Foundry v9.\r\nconst ProseMirrorKeyMaps = globalThis.ProseMirror ? globalThis.ProseMirror.ProseMirrorKeyMaps : class {};\r\n\r\n/**\r\n * Provides an additional key mapping to `Escape` to destroy / cancel the active editor.\r\n */\r\nclass TJSKeyMaps extends ProseMirrorKeyMaps\r\n{\r\n   #onQuit;\r\n\r\n   /**\r\n    * @param {Schema}   schema - The ProseMirror schema to build keymaps for.\r\n    *\r\n    * @param {object}   [options] - Additional options to configure the plugin's behaviour.\r\n    *\r\n    * @param {Function} [options.onSave] - A function to call when Ctrl+S is pressed.\r\n    *\r\n    * @param {Function} [options.onQuit] - A function to call when Ctrl+Q is pressed.\r\n    */\r\n   constructor(schema, options)\r\n   {\r\n      super(schema, options);\r\n\r\n      if (typeof options.onQuit === 'function') { this.#onQuit = options.onQuit; }\r\n   }\r\n\r\n   /**\r\n    * Swaps the Foundry default `Escape` / selectParentNode to `Mod-p` and enables `onQuit` function for `Escape`.\r\n    *\r\n    * @returns {Object<ProseMirrorCommand>}\r\n    */\r\n   buildMapping()\r\n   {\r\n      const mapping = super.buildMapping();\r\n\r\n      // Add onQuit callback if defined.\r\n      if (this.#onQuit)\r\n      {\r\n         // Swap Foundry core mapping for `Escape` / selectParentNode to `Mod-p`.\r\n         if (mapping['Escape']) { mapping['Mod-p'] = mapping['Escape']; }\r\n\r\n         mapping['Escape'] = () => this.#onQuit();\r\n      }\r\n\r\n      return mapping;\r\n   }\r\n}\n\n// TODO: Foundry v10.287 finally added `Plugin`, but is missing `PluginKey` from exports, so include them here.\r\n\r\n/**\r\n * A ProseMirror plugin to transform pasted text that is a raw document UUID into a document link suitable for\r\n * `TextEditor.enrichHTML`.\r\n */\r\nclass TJSPasteUUID\r\n{\r\n   /**\r\n    * Defines a regex to check for the shape of a raw Foundry document UUID.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #s_UUID_REGEX = /(\\.).*([a-zA-Z0-9]{16})/;\r\n\r\n   /**\r\n    * @returns {Plugin<any>} PM Plugin.\r\n    */\r\n   static build()\r\n   {\r\n      const instance = new this();\r\n      return new Plugin({\r\n         key: new PluginKey('tjsPasteRawUUID'),\r\n         props: {\r\n            transformPastedText: (text) => instance.#transformUUID(text)\r\n         }\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Transforms pasted text. Check if pasted test matches the shape of a raw UUID. If so do a lookup and if a\r\n    * document is retrieved transform it to a document link.\r\n    *\r\n    * @param {string}   text - pasted text to transform.\r\n    *\r\n    * @returns {string} Potentially transformed pasted text.\r\n    */\r\n   #transformUUID(text)\r\n   {\r\n      if (typeof text === 'string')\r\n      {\r\n         if (TJSPasteUUID.#s_UUID_REGEX.test(text))\r\n         {\r\n            const uuidDoc = globalThis.fromUuidSync(text);\r\n            if (uuidDoc)\r\n            {\r\n               text = `@UUID[${text}]{${typeof uuidDoc.name === 'string' ? uuidDoc.name : 'Unknown'}}`;\r\n            }\r\n         }\r\n      }\r\n\r\n      return text;\r\n   }\r\n}\n\nexport { TJSEditorOptions, TJSKeyMaps, TJSPasteUUID };\n//# sourceMappingURL=index.js.map\n","<script>\r\n   /**\r\n    * A generic input type has issues w/ 2-way binding w/ Svelte.\r\n    * https://github.com/sveltejs/svelte/issues/3921\r\n    *\r\n    * A \"hack\" is used to set the type on the input element: `{...{ type }}`\r\n    *\r\n    * Only use this component for text inputs presently. More work to come.\r\n    *\r\n    * --tjs-input-appearance\r\n    * --tjs-input-background\r\n    * --tjs-input-border\r\n    * --tjs-input-border-radius\r\n    * --tjs-input-box-shadow-focus\r\n    * --tjs-input-box-shadow-focus-visible\r\n    * --tjs-input-caret-color\r\n    * --tjs-input-cursor\r\n    * --tjs-input-flex\r\n    * --tjs-input-height\r\n    * --tjs-input-padding\r\n    * --tjs-input-placeholder-color\r\n    * --tjs-input-outline-focus-visible\r\n    * --tjs-input-outline-offset\r\n    * --tjs-input-overflow\r\n    * --tjs-input-text-align\r\n    * --tjs-input-transition-focus-visible\r\n    * --tjs-input-value-invalid-color\r\n    * --tjs-input-width\r\n    *\r\n    * --tjs-input-text-appearance\r\n    * --tjs-input-text-background\r\n    * --tjs-input-text-border\r\n    * --tjs-input-text-border-radius\r\n    * --tjs-input-text-box-shadow-focus\r\n    * --tjs-input-text-box-shadow-focus-visible\r\n    * --tjs-input-text-caret-color\r\n    * --tjs-input-text-cursor\r\n    * --tjs-input-text-flex\r\n    * --tjs-input-text-height\r\n    * --tjs-input-text-outline-focus-visible\r\n    * --tjs-input-text-outline-offset\r\n    * --tjs-input-text-overflow\r\n    * --tjs-input-text-padding\r\n    * --tjs-input-text-placeholder-color\r\n    * --tjs-input-text-text-align\r\n    * --tjs-input-text-transition-focus-visible\r\n    * --tjs-input-text-value-invalid-color\r\n    * --tjs-input-text-width\r\n    */\r\n\r\n   import { writable }          from 'svelte/store';\r\n\r\n   import { applyStyles }       from '@typhonjs-fvtt/runtime/svelte/action';\r\n\r\n   import { localize }          from '@typhonjs-fvtt/runtime/svelte/helper';\r\n\r\n   import {\r\n      isReadableStore,\r\n      isWritableStore }         from '@typhonjs-fvtt/runtime/svelte/store';\r\n\r\n   import { isObject }          from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n   export let input = void 0;\r\n   export let type = void 0;\r\n   export let disabled = void 0;\r\n   export let options = void 0;\r\n   export let placeholder = void 0;\r\n   export let store = void 0;\r\n   export let storeIsValid = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n\r\n   const localOptions = {\r\n      blurOnEnterKey: true,\r\n      cancelOnEscKey: false,\r\n      clearOnEscKey: false\r\n   }\r\n\r\n   let inputEl;\r\n\r\n   $: {\r\n      type = isObject(input) && typeof input.type === 'string' ? input.type :\r\n       typeof type === 'string' ? type : 'text';\r\n\r\n      switch (type)\r\n      {\r\n         case 'email':\r\n         case 'password':\r\n         case 'search':\r\n         case 'text':\r\n         case 'url':\r\n            break;\r\n\r\n         default:\r\n            throw new Error(\r\n             `'TJSInputText only supports text input types: 'email', 'password', 'search', 'text', 'url'.`);\r\n      }\r\n   }\r\n\r\n   $: disabled = isObject(input) && typeof input.disabled === 'boolean' ? input.disabled :\r\n    typeof disabled === 'boolean' ? disabled : false;\r\n\r\n   $: {\r\n      options = isObject(input) && isObject(input.options) ? input.options :\r\n       isObject(options) ? options : {};\r\n\r\n      if (typeof options?.blurOnEnterKey === 'boolean') { localOptions.blurOnEnterKey = options.blurOnEnterKey; }\r\n      if (typeof options?.cancelOnEscKey === 'boolean') { localOptions.cancelOnEscKey = options.cancelOnEscKey; }\r\n      if (typeof options?.clearOnEscKey === 'boolean') { localOptions.clearOnEscKey = options.clearOnEscKey; }\r\n   }\r\n\r\n   $: placeholder = isObject(input) && typeof input.placeholder === 'string' ? localize(input.placeholder) :\r\n    typeof placeholder === 'string' ? localize(placeholder) : void 0;\r\n\r\n   $: store = isObject(input) && isWritableStore(input.store) ? input.store :\r\n    isWritableStore(store) ? store : writable(void 0);\r\n\r\n   $: storeIsValid = isObject(input) && isReadableStore(input.storeIsValid) ? input.storeIsValid :\r\n    isReadableStore(storeIsValid) ? storeIsValid : writable(true);\r\n\r\n   $: styles = isObject(input) && isObject(input.styles) ? input.styles :\r\n    typeof styles === 'object' ? styles : void 0;\r\n\r\n   $: efx = isObject(input) && typeof input.efx === 'function' ? input.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n\r\n   let initialValue;\r\n\r\n   function onFocusIn(event)\r\n   {\r\n      initialValue = localOptions.cancelOnEscKey ? inputEl.value : void 0;\r\n   }\r\n\r\n   /**\r\n    * Blur input on enter key down.\r\n    *\r\n    * @param {KeyboardEvent} event -\r\n    */\r\n   function onKeyDown(event)\r\n   {\r\n      if (localOptions.blurOnEnterKey && event.code === 'Enter')\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n\r\n         inputEl.blur();\r\n         return;\r\n      }\r\n\r\n      if (event.code === 'Escape')\r\n      {\r\n         if (localOptions.cancelOnEscKey && typeof initialValue === 'string')\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            store.set(initialValue);\r\n            initialValue = void 0;\r\n            inputEl.blur();\r\n         }\r\n         else if (localOptions.clearOnEscKey)\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            store.set('');\r\n            inputEl.blur();\r\n         }\r\n      }\r\n   }\r\n</script>\r\n\r\n<div class=tjs-input-container use:efx use:applyStyles={styles}>\r\n    <input class=tjs-input\r\n           {...{ type }}\r\n           bind:this={inputEl}\r\n           bind:value={$store}\r\n           class:is-value-invalid={!$storeIsValid}\r\n           {placeholder}\r\n           {disabled}\r\n           on:focusin={onFocusIn}\r\n           on:keydown={onKeyDown}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    .tjs-input-container {\r\n        display: block;\r\n        overflow: var(--tjs-input-text-overflow, var(--tjs-input-overflow, hidden));\r\n        pointer-events: none;\r\n        transform-style: preserve-3d;\r\n\r\n        background: var(--tjs-input-text-background, var(--tjs-input-background));\r\n        border-radius: var(--tjs-input-text-border-radius, var(--tjs-input-border-radius));\r\n        flex: var(--tjs-input-text-flex, var(--tjs-input-flex));\r\n        margin: var(--tjs-input-text-margin, var(--tjs-input-margin));\r\n        height: var(--tjs-input-text-height, var(--tjs-input-height));\r\n        width: var(--tjs-input-text-width, var(--tjs-input-width));\r\n    }\r\n\r\n    .is-value-invalid {\r\n        color: var(--tjs-input-text-value-invalid-color, var(--tjs-input-value-invalid-color, red));\r\n    }\r\n\r\n    input {\r\n        pointer-events: initial;\r\n        display: inline-block;\r\n        position: relative;\r\n\r\n        appearance: var(--tjs-input-text-appearance, var(--tjs-input-appearance, inherit));\r\n\r\n        background: transparent;\r\n\r\n        border: var(--tjs-input-text-border, var(--tjs-input-border));\r\n        border-radius: var(--tjs-input-text-border-radius, var(--tjs-input-border-radius));\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: var(--tjs-input-text-padding, var(--tjs-input-padding, initial));\r\n\r\n        color: inherit;\r\n        caret-color: var(--tjs-input-text-caret-color, var(--tjs-input-caret-color));\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        line-height: inherit;\r\n        outline-offset: var(--tjs-input-text-outline-offset, var(--tjs-input-outline-offset));\r\n        text-align: var(--tjs-input-text-text-align, var(--tjs-input-text-align));\r\n\r\n        cursor: var(--tjs-input-text-cursor, var(--tjs-input-cursor, text));\r\n\r\n        transform: translateZ(1px);\r\n    }\r\n\r\n    input:focus {\r\n        box-shadow: var(--tjs-input-text-box-shadow-focus, var(--tjs-input-box-shadow-focus, unset));\r\n    }\r\n\r\n    input:focus-visible {\r\n        box-shadow: var(--tjs-input-text-box-shadow-focus-visible, var(--tjs-input-box-shadow-focus-visible, unset));\r\n        outline: var(--tjs-input-text-outline-focus-visible, var(--tjs-input-outline-focus-visible));\r\n        transition: var(--tjs-input-text-transition-focus-visible, var(--tjs-input-transition-focus-visible));\r\n    }\r\n\r\n    input::placeholder {\r\n        color: var(--tjs-input-text-placeholder-color, var(--tjs-input-placeholder-color, inherit));\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * --tjs-input-appearance\r\n    * --tjs-input-background\r\n    * --tjs-input-border\r\n    * --tjs-input-border-radius\r\n    * --tjs-input-box-shadow-focus\r\n    * --tjs-input-box-shadow-focus-visible\r\n    * --tjs-input-cursor\r\n    * --tjs-input-flex\r\n    * --tjs-input-height\r\n    * --tjs-input-outline-focus-visible\r\n    * --tjs-input-outline-offset\r\n    * --tjs-input-overflow\r\n    * --tjs-input-text-overflow\r\n    * --tjs-input-transition-focus-visible\r\n    * --tjs-input-width\r\n    *\r\n    * --tjs-select-appearance\r\n    * --tjs-select-background\r\n    * --tjs-select-border\r\n    * --tjs-select-border-radius\r\n    * --tjs-select-box-shadow-focus\r\n    * --tjs-select-box-shadow-focus-visible\r\n    * --tjs-select-cursor\r\n    * --tjs-select-flex\r\n    * --tjs-select-height\r\n    * --tjs-select-outline-focus-visible\r\n    * --tjs-select-outline-offset\r\n    * --tjs-select-overflow\r\n    * --tjs-select-text-overflow\r\n    * --tjs-select-transition-focus-visible\r\n    * --tjs-select-width\r\n    *\r\n    * --tjs-select-option-background; fallback: --tjs-default-popup-background; default: #23221d\r\n    * --tjs-select-option-color; fallback: --tjs-default-popup-primary-color; default: #b5b3a4\r\n    */\r\n\r\n   /**\r\n    * Note: A Svelte reactivity bug / issue is worked around below. Due to the several reactive statements over handling\r\n    * props when binding the store directly to the select element the #each block of options causes the compiler to\r\n    * incorrectly invalidate / run the reactive statements again for `options` and `select` on any changes to the select\r\n    * element. Running the `select` reactive statements causes the store statement to be run again causing the store to\r\n    * be unsubscribed and subscribed to. Technically this isn't a problem, but the workaround solution of using an\r\n    * on:change instead of bind in this instance fixes it.\r\n    *\r\n    * @see https://github.com/sveltejs/svelte/issues/4933\r\n    * @see https://dev.to/isaachagoel/svelte-reactivity-gotchas-solutions-if-you-re-using-svelte-in-production-you-should-read-this-3oj3\r\n    */\r\n\r\n   import { onMount }         from 'svelte';\r\n   import { writable }        from 'svelte/store';\r\n\r\n   import { applyStyles }     from '@typhonjs-fvtt/runtime/svelte/action';\r\n   import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\r\n\r\n   export let select = void 0;\r\n   export let selected = void 0;\r\n   export let options = void 0;\r\n   export let store = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n\r\n   $: selected = typeof select === 'object' && typeof select.selected === 'string' ? select.selected :\r\n    typeof selected === 'string' ? selected : void 0;\r\n   $: options = typeof select === 'object' && Array.isArray(select.options) ? select.options :\r\n    Array.isArray(options) ? options : [];\r\n   $: store = typeof select === 'object' && isWritableStore(select.store) ? select.store :\r\n    isWritableStore(store) ? store : writable(void 0);\r\n   $: styles = typeof select === 'object' && typeof select.styles === 'object' ? select.styles :\r\n    typeof styles === 'object' ? styles : void 0;\r\n   $: efx = typeof select === 'object' && typeof select.efx === 'function' ? select.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n\r\n   onMount(() =>\r\n   {\r\n      // On mount verify that the current store value is included in options otherwise check the `selected` value if set\r\n      // and if this initial value is in the list of options then set it as the default option.\r\n      if (selected && store && !options.includes($store) && options.includes(selected)) { store.set(selected); }\r\n   });\r\n</script>\r\n\r\n<div on:change class=tjs-select-container use:efx use:applyStyles={styles}>\r\n   <!-- Please see note at top / above on why on:change is used over `bind:value={$store}`. -->\r\n   <select on:change class=tjs-select bind:value={$store}>\r\n      {#each options as option}\r\n         <option class=tjs-select-option value={option.value}>\r\n            {option.label}\r\n         </option>\r\n      {/each}\r\n   </select>\r\n</div>\r\n\r\n<style>\r\n   .tjs-select-container {\r\n      pointer-events: none;\r\n      display: block;\r\n      overflow: var(--tjs-select-overflow, var(--tjs-input-overflow, hidden));\r\n      transform-style: preserve-3d;\r\n\r\n      background: var(--tjs-select-background, var(--tjs-input-background));\r\n      border-radius: var(--tjs-select-border-radius, var(--tjs-input-border-radius));\r\n      flex: var(--tjs-select-flex, var(--tjs-input-flex));\r\n      margin: var(--tjs-select-margin, var(--tjs-input-margin));\r\n      height: var(--tjs-select-height, var(--tjs-input-height));\r\n      width: var(--tjs-select-width, var(--tjs-input-width));\r\n   }\r\n\r\n   select {\r\n      pointer-events: initial;\r\n      display: inline-block;\r\n      position: relative;\r\n\r\n      appearance: var(--tjs-select-appearance, var(--tjs-input-appearance, inherit));\r\n\r\n      background: transparent;\r\n\r\n      border: var(--tjs-select-border, var(--tjs-input-border));\r\n      border-radius: var(--tjs-select-border-radius, var(--tjs-input-border-radius));\r\n\r\n      width: 100%;\r\n      height: 100%;\r\n\r\n      padding: var(--tjs-select-padding, var(--tjs-input-padding, initial));\r\n\r\n      color: inherit;\r\n      font-family: inherit;\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      outline-offset: var(--tjs-select-outline-offset, var(--tjs-input-outline-offset));\r\n      text-align: var(--tjs-select-text-align, var(--tjs-input-text-align));\r\n      text-overflow: var(--tjs-select-text-overflow, var(--tjs-input-text-overflow, ellipsis));\r\n\r\n      cursor: var(--tjs-select-cursor, var(--tjs-input-cursor));\r\n\r\n      transform: translateZ(1px);\r\n   }\r\n\r\n   select option {\r\n      background: var(--tjs-select-option-background, var(--tjs-default-popup-background, #23221d));\r\n      color: var(--tjs-select-option-color, var(--tjs-default-popup-primary-color, #b5b3a4));\r\n   }\r\n\r\n   select:focus {\r\n      box-shadow: var(--tjs-select-box-shadow-focus, var(--tjs-input-box-shadow-focus, unset));\r\n   }\r\n\r\n   select:focus-visible {\r\n      box-shadow: var(--tjs-select-box-shadow-focus-visible, var(--tjs-input-box-shadow-focus-visible, unset));\r\n      outline: var(--tjs-select-outline-focus-visible, var(--tjs-input-outline-focus-visible));\r\n      transition: var(--tjs-select-transition-focus-visible, var(--tjs-input-transition-focus-visible));\r\n   }\r\n</style>\r\n","<script>\r\n   /**\r\n    * TJSContextMenuImpl provides a context menu implementation component that is not meant to be directly used as it is\r\n    * controlled as a single browser wide context menu from {@link TJSContextMenu} that is imported via:\r\n    * `import { TJSContextMenu } from '@typhonjs-fvtt/svelte-standard/application';` The front end for\r\n    * TJSContextMenuImpl processes data and invokes / manages a single context menu.\r\n    *\r\n    * TJSContextMenuImpl supports a flexible data driven way to construct the menu items with the same format as\r\n    * {@link TJSMenu}. Depending on the item data that is passed into the menu you can define 4 types of items:\r\n    * 'icon / label', 'image / label', 'class / Svelte component', and 'separator / hr'. The main difference is that\r\n    * TJSContextMenu does not support default or named slots.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Exported props include:\r\n    * `menu` ({@link TJSMenuData}): An object defining all properties of a menu.\r\n    *\r\n    * Or in lieu of passing the folder object you can assign these props directly:\r\n    * `items`: An iterable list of {@link TJSContextMenuItemData}; defines data driven menu items.\r\n    * `styles`: Styles to be applied inline via `applyStyles` action.\r\n    * `efx`: Currently unused; for any future action effects.\r\n    * `keyCode`: The key code to activate menu items.\r\n    * `focusSource`: A `A11yFocusSource` object containing the target element to return focus to on close.\r\n    * `transitionOptions`: Custom transition options for duration and easing function.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Events: There is a single that is fired and _not_ bubbled up through parent elements:\r\n    * `close`- Fired when the menu closes allowing {@link TJSContextMenu} to clean up resources.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Styling: To style this component use `.tjs-context-menu` as the base selector.\r\n    *\r\n    * There are several local CSS variables that you can use to change the appearance dynamically. Either use\r\n    * CSS props or pass in a `styles` object w/ key / value props to set to the details. The default fallback variables\r\n    * target both TJSMenu and TJSContextMenu. The few `popover` defaults target components that independently pop over\r\n    * other elements browser wide.\r\n    *\r\n    * The following CSS variables are supported, but not defined by default.\r\n    * --tjs-context-menu-background - fallback: --tjs-default-menu-background; fallback: --tjs-default-popup-background; default: #23221d\r\n    * --tjs-context-menu-border - fallback: --tjs-default-popup-border; default: 1px solid #000\r\n    * --tjs-context-menu-border-radius - fallback: --tjs-default-popup-border-radius; default: 5px\r\n    * --tjs-context-menu-box-shadow - fallback: --tjs-default-popup-box-shadow; default: 0 0 2px #000\r\n    * --tjs-context-menu-primary-color - fallback: --tjs-default-menu-primary-color; fallback: --tjs-default-popup-primary-color; default: #b5b3a4\r\n    * --tjs-context-menu-max-width - fallback: --tjs-default-menu-max-width; default: 360px\r\n    * --tjs-context-menu-min-width - fallback: --tjs-default-menu-min-width; default: 20px\r\n    *\r\n    * The following CSS variables define attributes for the data driven menu items.\r\n    *\r\n    * All menu items:\r\n    * --tjs-context-menu-item-line-height - fallback: --tjs-default-menu-item-line-height; default: 2em\r\n    * --tjs-context-menu-item-padding - fallback: --tjs-default-menu-item-padding; default: 0 0.5em 0 0\r\n    *\r\n    * Icon / Image menu items (considered a button item):\r\n    * --tjs-context-menu-item-button-gap - fallback: --tjs-default-menu-item-button-gap; default: 0.25em\r\n    * --tjs-context-menu-item-highlight-color - fallback: --tjs-default-menu-highlight-color; fallback: --tjs-default-popup-highlight-color; default: #f0f0e0\r\n    * --tjs-context-menu-item-text-shadow-focus-hover - fallback: --tjs-default-text-shadow-focus-hover; default: 0 0 8px red\r\n    *\r\n    * Specific targeting for the label of button items (allows control of wrapping / set `white-space` to `nowrap`):\r\n    * --tjs-context-menu-item-label-overflow - fallback: --tjs-default-menu-item-label-overflow; default: hidden\r\n    * --tjs-context-menu-item-label-text-overflow - fallback: --tjs-default-menu-item-label-text-overflow; default: ellipsis\r\n    * --tjs-context-menu-item-label-white-space - fallback: --tjs-default-menu-item-label-white-space; default: undefined\r\n    *\r\n    * Icon menu item:\r\n    * --tjs-context-menu-item-icon-width - fallback: --tjs-default-menu-item-icon-width; default: 1.25em\r\n    *\r\n    * Image menu item:\r\n    * --tjs-context-menu-item-image-width - fallback: --tjs-default-menu-item-image-width; default: 1.25em\r\n    * --tjs-context-menu-item-image-height - fallback: --tjs-default-menu-item-image-height; default: 1.25em\r\n    *\r\n    * Separator / HR:\r\n    * --tjs-context-menu-hr-margin - fallback: --tjs-default-hr-margin; default: 0 0.25em\r\n    * --tjs-context-menu-hr-border-top - fallback: --tjs-default-hr-border-top; default: 1px solid #555\r\n    * --tjs-context-menu-hr-border-bottom - fallback: --tjs-default-hr-border-bottom; default: 1px solid #444\r\n    *\r\n    * The following CSS variables define the keyboard / a11y focus indicator for menu items:\r\n    * --tjs-context-menu-focus-indicator-align-self - fallback: --tjs-default-focus-indicator-align-self; default: stretch\r\n    * --tjs-context-menu-focus-indicator-background - fallback: --tjs-default-focus-indicator-background; default: white\r\n    * --tjs-context-menu-focus-indicator-border - fallback: --tjs-default-focus-indicator-border; default: undefined\r\n    * --tjs-context-menu-focus-indicator-border-radius - fallback: --tjs-default-focus-indicator-border-radius; default: 0.1em\r\n    * --tjs-context-menu-focus-indicator-height - fallback: --tjs-default-focus-indicator-height; default: undefined\r\n    * --tjs-context-menu-focus-indicator-width - fallback: --tjs-default-focus-indicator-width; default: 0.25em\r\n    * --tjs-menu-focus-indicator-transition - fallback: --tjs-default-focus-indicator-transition\r\n    */\r\n\r\n   import {\r\n      createEventDispatcher,\r\n      onMount }                     from 'svelte';\r\n\r\n   import { current_component }     from 'svelte/internal';\r\n\r\n   import { applyStyles }           from '@typhonjs-fvtt/runtime/svelte/action';\r\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { slideFade }             from '@typhonjs-fvtt/runtime/svelte/transition';\r\n\r\n   import {\r\n      A11yHelper,\r\n      isObject,\r\n      outroAndDestroy }             from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n   import { TJSFocusWrap }          from '@typhonjs-fvtt/runtime/svelte/component/core';\r\n\r\n   export let menu = void 0;\r\n\r\n   export let id = '';\r\n\r\n   export let x = 0;\r\n\r\n   export let y = 0;\r\n\r\n   export let items = [];\r\n\r\n   export let zIndex = Number.MAX_SAFE_INTEGER - 100;\r\n\r\n   /** @type {Record<string, string>} */\r\n   export let styles = void 0;\r\n\r\n   /** @type {string} */\r\n   export let keyCode = void 0;\r\n\r\n   export let focusSource = void 0;\r\n\r\n   /** @type {{ duration: number, easing: Function }} */\r\n   export let transitionOptions = void 0;\r\n\r\n   $: styles = isObject(menu) && isObject(menu.styles) ? menu.styles :\r\n    isObject(styles) ? styles : void 0;\r\n\r\n   $: keyCode = isObject(menu) && typeof menu.keyCode === 'string' ? menu.keyCode :\r\n    typeof keyCode === 'string' ? keyCode : 'Enter';\r\n\r\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\r\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\r\n\r\n   // Store this component reference.\r\n   const local = current_component;\r\n\r\n   // Dispatches `close` event.\r\n   const dispatch = createEventDispatcher();\r\n\r\n   // Bound to the nav element / menu.\r\n   let menuEl;\r\n\r\n   // Stores if this context menu is closed.\r\n   let closed = false;\r\n\r\n   // Stores if menu has keyboard focus; detected on mount, when tab navigation occurs, and used to set `keypress` for\r\n   // close event.\r\n   // let hasKeyboardFocus = false;\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   onMount(() =>\r\n   {\r\n      const keyboardFocus = focusSource?.source === 'keyboard';\r\n\r\n      // If the focus options designate that the source of the context menu came from the keyboard then focus the first\r\n      // menu item on mount.\r\n      if (keyboardFocus)\r\n      {\r\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(menuEl);\r\n         if (firstFocusEl instanceof HTMLElement && !firstFocusEl.classList.contains('tjs-focus-wrap'))\r\n         {\r\n            firstFocusEl.focus();\r\n         }\r\n         else\r\n         {\r\n            // Silently focus the menu element so that keyboard handling functions.\r\n            menuEl.focus();\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // Silently focus the menu element so that keyboard handling functions.\r\n         menuEl.focus();\r\n      }\r\n   });\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Provides a custom animate callback allowing inspection of the element to change positioning styles based on the\r\n    * height / width of the element and `document.body`. This allows the context menu to expand up when the menu\r\n    * is outside the height bound of `document.body` and expand to the left if width is greater than `document.body`.\r\n    *\r\n    * @param {HTMLElement} node - nav element.\r\n    *\r\n    * @returns {object} Transition object.\r\n    */\r\n   function animate(node)\r\n   {\r\n      const expandUp = y + node.clientHeight > document.body.clientHeight\r\n      const expandLeft = x + node.clientWidth > document.body.clientWidth\r\n\r\n      node.style.top = expandUp ? null : `${y}px`;\r\n      node.style.bottom = expandUp ? `${document.body.clientHeight - y}px` : null;\r\n\r\n      node.style.left = expandLeft ? null : `${x}px`;\r\n      node.style.right = expandLeft ? `${document.body.clientWidth - x}px` : null;\r\n\r\n      return slideFade(node, transitionOptions);\r\n   }\r\n\r\n   /**\r\n    * Invokes a function on click of a menu item then fires the `close` event and automatically runs the outro\r\n    * transition and destroys the component.\r\n    *\r\n    * @param {object} item - Function to invoke on click.\r\n    */\r\n   function onClick(item)\r\n   {\r\n      const callback = item?.onPress;\r\n\r\n      if (typeof callback === 'function')\r\n      {\r\n         callback(item, { focusSource });\r\n      }\r\n      else\r\n      {\r\n         A11yHelper.applyFocusSource(focusSource)\r\n         focusSource = void 0;\r\n      }\r\n\r\n      if (!closed)\r\n      {\r\n         dispatch('close');\r\n         closed = true;\r\n         outroAndDestroy(local);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Determines if a pointer pressed to the document body closes the context menu. If the click occurs outside the\r\n    * context menu then fire the `close` event and run the outro transition then destroy the component.\r\n    *\r\n    * @param {PointerEvent|MouseEvent}  event - Pointer or mouse event from document body click / scroll wheel.\r\n    *\r\n    * @param {boolean}                  [isWheel=false] - True when scroll wheel; do not perform 2nd early out test.\r\n    */\r\n   function onClose(event, isWheel = false)\r\n   {\r\n      // Early out if the pointer down is inside the menu element.\r\n      if (event.target === menuEl || menuEl.contains(event.target)) { return; }\r\n\r\n      // Early out if the event page X / Y is the same as this context menu.\r\n      if (!isWheel && Math.floor(event.pageX) === x && Math.floor(event.pageY) === y) { return; }\r\n\r\n      if (!closed)\r\n      {\r\n         dispatch('close');\r\n         closed = true;\r\n         outroAndDestroy(local);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle key commands for closing the menu ('Esc') and reverse focus cycling via 'Shift-Tab'. Also stop propagation\r\n    * for the key code assigned for menu item selection ('Enter').\r\n    *\r\n    * @param {KeyboardEvent}  event - KeyboardEvent.\r\n    */\r\n   function onKeydownMenu(event)\r\n   {\r\n      // Handle menu item keyCode selection.\r\n      if (event.code === keyCode)\r\n      {\r\n         event.stopPropagation();\r\n         return;\r\n      }\r\n\r\n      switch (event.code)\r\n      {\r\n         case 'Tab':\r\n            event.stopPropagation();\r\n\r\n            // Handle reverse focus cycling with `<Shift-Tab>`.\r\n            if (event.shiftKey)\r\n            {\r\n               // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\r\n               const allFocusable = A11yHelper.getFocusableElements(menuEl, s_IGNORE_CLASSES);\r\n\r\n               // Find first and last focusable elements.\r\n               const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\r\n               const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\r\n\r\n               // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable\r\n               // element is the active element.\r\n               if (menuEl === document.activeElement || firstFocusEl === document.activeElement)\r\n               {\r\n                  if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\r\n\r\n                  event.preventDefault();\r\n               }\r\n            }\r\n\r\n            break;\r\n\r\n         default:\r\n            // Any other key stop propagation preventing any global key handlers from responding.\r\n            event.stopPropagation();\r\n            break;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle key commands for closing the menu ('Esc') and reverse focus cycling via 'Shift-Tab'. Also stop propagation\r\n    * for the key code assigned for menu item selection ('Enter').\r\n    *\r\n    * @param {KeyboardEvent}  event - KeyboardEvent.\r\n    */\r\n   function onKeyupMenu(event)\r\n   {\r\n      switch (event.code)\r\n      {\r\n         case 'ContextMenu':\r\n         case 'Escape':\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            if (!closed)\r\n            {\r\n               closed = true;\r\n               dispatch('close');\r\n               outroAndDestroy(local);\r\n\r\n               A11yHelper.applyFocusSource(focusSource)\r\n               focusSource = void 0;\r\n            }\r\n            break;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle key presses on menu items.\r\n    *\r\n    * @param {KeyboardEvent}     event - KeyboardEvent.\r\n    *\r\n    * @param {TJSMenuItemData}   item - Menu item data.\r\n    */\r\n   function onKeyupItem(event, item)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         if (!closed)\r\n         {\r\n            closed = true;\r\n            dispatch('close');\r\n            outroAndDestroy(local);\r\n\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n         }\r\n\r\n         const callback = item?.onPress;\r\n         if (typeof callback === 'function')\r\n         {\r\n            callback(item, { focusSource });\r\n         }\r\n         else\r\n         {\r\n            A11yHelper.applyFocusSource(focusSource)\r\n            focusSource = void 0;\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Closes context menu when browser window is blurred.\r\n    */\r\n   function onWindowBlur()\r\n   {\r\n      if (!closed)\r\n      {\r\n         dispatch('close');\r\n         closed = true;\r\n         outroAndDestroy(local);\r\n\r\n         A11yHelper.applyFocusSource(focusSource)\r\n         focusSource = void 0;\r\n      }\r\n   }\r\n</script>\r\n\r\n<!-- bind to `document.body` to receive pointer down & scroll wheel events to close the context menu. -->\r\n<svelte:body on:pointerdown={onClose} on:wheel={(event) => onClose(event, true)}/>\r\n\r\n<!-- bind to 'window' to close context menu when browser window is blurred. -->\r\n<svelte:window on:blur={onWindowBlur}/>\r\n\r\n<nav id={id}\r\n     class=tjs-context-menu\r\n     bind:this={menuEl}\r\n     on:click|preventDefault|stopPropagation={() => null}\r\n     on:keydown|stopPropagation={onKeydownMenu}\r\n     on:keyup|preventDefault|stopPropagation={onKeyupMenu}\r\n     style:z-index={zIndex}\r\n     transition:animate\r\n     use:applyStyles={styles}\r\n     tabindex=-1>\r\n\r\n    <ol class=tjs-context-menu-items>\r\n        {#each items as item}\r\n            {#if item['#type'] === 'class'}\r\n                <li class=tjs-context-menu-item\r\n                    on:click={() => onClick(item)}\r\n                    on:keyup={(event) => onKeyupItem(event, item)}\r\n                    role=menuitem\r\n                    tabindex=0>\r\n                    <span class=tjs-context-menu-focus-indicator />\r\n                    <svelte:component this={item.class} {...(isObject(item.props) ? item.props : {})} />\r\n                </li>\r\n            {:else if item['#type'] === 'icon'}\r\n                <li class=\"tjs-context-menu-item tjs-context-menu-item-button\"\r\n                    on:click={() => onClick(item)}\r\n                    on:keyup={(event) => onKeyupItem(event, item)}\r\n                    role=menuitem\r\n                    tabindex=0>\r\n                    <span class=tjs-context-menu-focus-indicator />\r\n                    <i class={item.icon}></i>\r\n                    <span class=tjs-context-menu-item-label>{localize(item.label)}</span>\r\n                </li>\r\n            {:else if item['#type'] === 'image'}\r\n                <li class=\"tjs-context-menu-item tjs-context-menu-item-button\"\r\n                    on:click={() => onClick(item)}\r\n                    on:keyup={(event) => onKeyupItem(event, item)}\r\n                    role=menuitem\r\n                    tabindex=0>\r\n                    <span class=tjs-context-menu-focus-indicator />\r\n                    <img src={item.image} alt={item.imageAlt}>\r\n                    <span class=tjs-context-menu-item-label>{localize(item.label)}</span>\r\n                </li>\r\n            {:else if item['#type'] === 'separator-hr'}\r\n                <hr>\r\n            {/if}\r\n        {/each}\r\n    </ol>\r\n    <TJSFocusWrap elementRoot={menuEl} />\r\n</nav>\r\n\r\n<style>\r\n    .tjs-context-menu {\r\n        position: fixed;\r\n        width: fit-content;\r\n        height: max-content;\r\n        overflow: hidden;\r\n\r\n        background: var(--tjs-context-menu-background, var(--tjs-default-menu-background, var(--tjs-default-popup-background, #23221d)));\r\n        border: var(--tjs-context-menu-border, var(--tjs-default-popover-border, 1px solid #000));\r\n        border-radius: var(--tjs-context-menu-border-radius, var(--tjs-default-popover-border-radius, 5px));\r\n        box-shadow: var(--tjs-context-menu-box-shadow, var(--tjs-default-popover-box-shadow, 0 0 10px #000));\r\n        color: var(--tjs-context-menu-primary-color, var(--tjs-default-menu-primary-color, var(--tjs-default-popup-primary-color, #b5b3a4)));\r\n        max-width: var(--tjs-context-menu-max-width, var(--tjs-default-menu-max-width, 360px));\r\n        min-width: var(--tjs-context-menu-min-width, var(--tjs-default-menu-min-width, 20px));\r\n\r\n        text-align: start;\r\n    }\r\n\r\n    .tjs-context-menu:focus-visible {\r\n        outline: var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent);\r\n    }\r\n\r\n    .tjs-context-menu-items {\r\n        list-style: none;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    .tjs-context-menu-items hr {\r\n        margin-block-start: 0;\r\n        margin-block-end: 0;\r\n        margin: var(--tjs-context-menu-hr-margin, var(--tjs-default-hr-margin, 0 0.25em));\r\n        border-top: var(--tjs-context-menu-hr-border-top, var(--tjs-default-hr-border-top, 1px solid #555));\r\n        border-bottom: var(--tjs-context-menu-hr-border-bottom, var(--tjs-default-hr-border-bottom, 1px solid #444));\r\n    }\r\n\r\n    .tjs-context-menu-item {\r\n        display: flex;\r\n        align-items: center;\r\n        line-height: var(--tjs-context-menu-item-line-height, var(--tjs-default-menu-item-line-height, 2em));\r\n        padding: var(--tjs-context-menu-item-padding, var(--tjs-default-menu-item-padding, 0 0.5em 0 0));\r\n    }\r\n\r\n    /* Disable default outline for focus visible / within */\r\n    .tjs-context-menu-item:focus-within, .tjs-context-menu-item:focus-visible {\r\n        outline: var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent);\r\n    }\r\n\r\n    .tjs-context-menu-item i {\r\n        text-align: center;\r\n        width: var(--tjs-context-menu-item-icon-width, var(--tjs-default-menu-item-icon-width, 1.25em));\r\n    }\r\n\r\n    .tjs-context-menu-item img {\r\n        width: var(--tjs-context-menu-item-image-width, var(--tjs-default-menu-item-image-width, 1.25em));\r\n        height: var(--tjs-context-menu-item-image-height, var(--tjs-default-menu-item-image-height, 1.25em));\r\n    }\r\n\r\n    .tjs-context-menu-item-button {\r\n        gap: var(--tjs-context-menu-item-button-gap, var(--tjs-default-menu-item-button-gap, 0.25em));\r\n    }\r\n\r\n    .tjs-context-menu-item-button:hover {\r\n        color: var(--tjs-context-menu-item-highlight-color, var(--tjs-default-menu-highlight-color, var(--tjs-default-popup-highlight-color, #f0f0e0)));\r\n        text-shadow: var(--tjs-context-menu-item-text-shadow-focus-hover, var(--tjs-default-text-shadow-focus-hover, 0 0 8px red));\r\n    }\r\n\r\n    .tjs-context-menu-item-button:focus-visible {\r\n        color: var(--tjs-context-menu-item-highlight-color, var(--tjs-default-menu-highlight-color, var(--tjs-default-popup-highlight-color, #f0f0e0)));\r\n        text-shadow: var(--tjs-context-menu-item-text-shadow-focus-hover, var(--tjs-default-text-shadow-focus-hover, 0 0 8px red));\r\n    }\r\n\r\n    .tjs-context-menu-focus-indicator {\r\n        align-self: var(--tjs-context-menu-focus-indicator-align-self, var(--tjs-default-focus-indicator-align-self, stretch));\r\n        border: var(--tjs-context-menu-focus-indicator-border, var(--tjs-default-focus-indicator-border));\r\n        border-radius: var(--tjs-context-menu-focus-indicator-border-radius, var(--tjs-default-focus-indicator-border-radius, 0.1em));\r\n        height: var(--tjs-context-menu-focus-indicator-height, var(--tjs-default-focus-indicator-height));\r\n        width: var(--tjs-context-menu-focus-indicator-width, var(--tjs-default-focus-indicator-width, 0.25em));\r\n        transition: var(--tjs-context-menu-focus-indicator-transition, var(--tjs-default-focus-indicator-transition));\r\n    }\r\n\r\n    .tjs-context-menu-item:focus-visible .tjs-context-menu-focus-indicator {\r\n        background: var(--tjs-context-menu-focus-indicator-background, var(--tjs-default-focus-indicator-background, white));\r\n    }\r\n\r\n    /* Enable focus indicator for focus-within */\r\n    /* Note: the use of `has` pseudo-selector that requires a child with :focus-visible */\r\n    .tjs-context-menu-item:focus-within:has(:focus-visible) .tjs-context-menu-focus-indicator {\r\n        background: var(--tjs-context-menu-focus-indicator-background, var(--tjs-default-focus-indicator-background, white));\r\n    }\r\n\r\n    /* Fallback for browsers that don't support 'has'; any user interaction including mouse will trigger */\r\n    @supports not (selector(:has(*))) {\r\n        .tjs-context-menu-item:focus-within .tjs-context-menu-focus-indicator {\r\n            background: var(--tjs-context-menu-focus-indicator-background, var(--tjs-default-focus-indicator-background, white));\r\n        }\r\n    }\r\n\r\n    .tjs-context-menu-item-label {\r\n        overflow: var(--tjs-context-menu-item-label-overflow, var(--tjs-default-menu-item-label-overflow, hidden));\r\n        text-overflow: var(--tjs-context-menu-item-label-text-overflow, var(--tjs-default-menu-item-label-text-overflow, ellipsis));\r\n        white-space: var(--tjs-context-menu-item-label-white-space, var(--tjs-default-menu-item-label-white-space));\r\n    }\r\n</style>\r\n","import { SvelteApplication } from '@typhonjs-fvtt/runtime/svelte/application';\r\n\r\nimport {\r\n   cssVariables,\r\n   FoundryStyles }   from '../internal/index.js';     // TODO: Figure out better build to use #internal again.\r\n\r\nexport *             from './button/index.js';\r\nexport *             from './color/index.js';\r\nexport *             from './container/index.js';\r\nexport *             from './editor/index.js';\r\nexport *             from './folder/index.js';\r\nexport *             from './form/index.js';\r\nexport *             from './label/index.js';\r\nexport *             from './layers/index.js';\r\nexport *             from './menu/index.js';\r\nexport *             from './settings/index.js';\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS thematic CSS variables.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   // For components w/ transparent background checkered pattern.\r\n   '--tjs-checkerboard-background-dark': 'rgb(205, 205, 205)',\r\n   '--tjs-checkerboard-background-10': `url('data:image/svg+xml;utf8,<svg preserveAspectRatio=\"none\"  viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"5\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"0\" width=\"5\" height=\"5\" fill=\"white\" /><rect x=\"0\" y=\"5\" width=\"5\" height=\"5\" fill=\"white\" /></svg>') 0 0 / 10px 10px, var(--tjs-checkerboard-background-dark, rgb(205, 205, 205))`\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS CSS variables to Foundry defaults.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-action-ripple-background': 'rgba(0, 0, 0, 0.35)'\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-icon-button-background-hover': 'rgba(0, 0, 0, 0.10)',\r\n   '--tjs-icon-button-background-selected': 'rgba(0, 0, 0, 0.20)',\r\n}, false);\r\n\r\n{\r\n   /**\r\n    * All input related components including: TJSSelect,\r\n    */\r\n   const props = FoundryStyles.getProperties('input[type=\"text\"], input[type=\"number\"]');\r\n\r\n   if (typeof props === 'object')\r\n   {\r\n      cssVariables.setProperties({\r\n         '--tjs-input-background': 'background' in props ? props.background : 'rgba(0, 0, 0, 0.05)',\r\n         '--tjs-input-border': 'border' in props ? props.border : '1px solid var(--color-border-light-tertiary)',\r\n         '--tjs-input-border-radius': 'border-radius' in props ? props['border-radius'] : '3px',\r\n         '--tjs-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n         '--tjs-input-min-width': 'min-width' in props ? props['min-width'] : '20px',\r\n         '--tjs-input-padding': 'padding' in props ? props['padding'] : '1px 3px',\r\n         '--tjs-input-width': 'width' in props ? props.width : 'calc(100% - 2px)',\r\n\r\n         // Set default values that are only to be referenced and not set.\r\n         '--_tjs-default-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n\r\n         // Set directly / no lookup:\r\n         '--tjs-input-border-color': 'var(--color-border-light-tertiary)',\r\n      }, false);\r\n   }\r\n}\r\n\r\ncssVariables.setProperties({\r\n   // `popup` is for components that are slightly elevated, but connected to an application;\r\n   // see: TJSMenu / TJSContextMenu / TJSColordPicker\r\n   '--tjs-default-popup-background': 'var(--color-text-dark-header, #23221d)',\r\n   '--tjs-default-popup-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popup-box-shadow': '0 0 2px var(--color-shadow-dark, #000)',\r\n   '--tjs-default-popup-primary-color': 'var(--color-text-light-primary, #b5b3a4)',\r\n   '--tjs-default-popup-highlight-color': 'var(--color-text-light-highlight, #f0f0e0)',\r\n\r\n   // `popover` is for components that are elevated and independent; see: TJSContextMenu\r\n   '--tjs-default-popover-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popover-box-shadow': '0 0 10px var(--color-shadow-dark, #000)',\r\n}, false);\r\n\r\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------------\r\n\r\nHooks.on('PopOut:loading', (app, popout) =>\r\n{\r\n   if (app instanceof SvelteApplication)\r\n   {\r\n      // Clone and load `svelte-standard` CSS variables into new window document.\r\n      popout.document.addEventListener('DOMContentLoaded', () => cssVariables.clone(popout.document));\r\n   }\r\n});\r\n","<script>\n\timport { getContext } from \"svelte\";\n\timport { fade } from \"svelte/transition\";\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\timport { ripple, rippleFocus } from \"@typhonjs-fvtt/svelte-standard/action\";\n\timport { TJSIconButton, TJSInputText, TJSSelect, TJSToggleIconButton } from \"@typhonjs-fvtt/svelte-standard/component\";\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\tconst { details, active, filterSearch, scrollTop, version } = spreadsheetStore.stores;\n\n\tconst select = {\n\t\tstore: version,\n\t\tefx: rippleFocus(),\n\t\toptions: spreadsheetStore.versions.map(entry => ({ label: `v${entry}`, value: entry })),\n\t\tstyles: {\n\t\t\twidth: \"7em\",\n\t\t},\n\t};\n\n\tconst input = {\n\t\tstore: filterSearch,\n\t\tefx: rippleFocus(),\n\t\tplaceholder: \"Search module compatibility...\",\n\t\ttype: \"search\",\n\t};\n\n\tconst buttonDetails = {\n\t\tstore: details,\n\t\ticon: \"fas fa-info\",\n\t\tefx: ripple(),\n\t\ttitle: \"mcc.showDetails\",\n\t\ttitleSelected: \"mcc.hideDetails\",\n\t};\n\n\tconst buttonActive = {\n\t\tstore: active,\n\t\ticon: \"fas fa-check\",\n\t\tefx: ripple(),\n\t\ttitle: \"mcc.enableActive\",\n\t\ttitleSelected: \"mcc.disableActive\",\n\t};\n\n\tconst buttonScrollTop = {\n\t\ticon: \"fas fa-angle-double-up\",\n\t\tefx: ripple(),\n\t\ttitle: \"mcc.scrollTop\",\n\t};\n\n\t/**\n\t * Dispatch a CustomEvent that is received by the main Table component to smoothly scroll to the top\n\t * @param {MouseEvent} event\n\t */\n\tfunction scrollSmooth(event) {\n\t\tevent.target.dispatchEvent(new CustomEvent(\"scrollTop:smooth\", { bubbles: true }));\n\t}\n</script>\n\n<nav>\n\t<!-- TODO: link elements with id -->\n\t<!-- svelte-ignore a11y-label-has-associated-control -->\n\t<label>{localize(\"mcc.selectVersion\")}</label>\n\t<TJSSelect {select} />\n\n\t<TJSInputText {input} />\n\n\t<div class=\"iconButton\">\n\t\t<TJSToggleIconButton button={buttonDetails} />\n\t</div>\n\n\t<div class=\"iconButton\">\n\t\t<TJSToggleIconButton button={buttonActive} />\n\t</div>\n</nav>\n\n{#if $scrollTop > 300}\n\t<div transition:fade class=\"scrollTop iconButton\">\n\t\t<TJSIconButton button={buttonScrollTop} on:click={scrollSmooth} />\n\t</div>\n{/if}\n\n<style>\n\tlabel {\n\t\twhite-space: nowrap;\n\t}\n\n\tnav {\n\t\tdisplay: flex;\n\t\tgap: 1ch;\n\t\tpadding: 1ch;\n\t\talign-items: center;\n\t\tcolor: var(--mcc-text-dark-color);\n\t\ttext-shadow: none;\n\t}\n\n\t.scrollTop {\n\t\tposition: fixed;\n\t\tbottom: 3rem;\n\t\tright: 1.5rem;\n\t\tz-index: 1;\n\t}\n\n\t.iconButton {\n\t\tfilter: drop-shadow(0 0 1px var(--mcc-dark-color));\n\t}\n</style>\n","<script>\n\timport { getContext } from \"svelte\";\n\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n\texport let name;\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\tconst { sortBy, reversed } = spreadsheetStore.stores;\n\n\t// Correctly set direction from initial reversed state when sortBy === name.\n\tlet direction = $sortBy === name && $reversed;\n\n\t// Reset direction to false when another sort header is clicked.\n\t$: if ($sortBy !== name) {\n\t\tdirection = true;\n\t}\n\n\t/**\n\t * Sort the rows by a given heading. Set the `sortBy` store to the heading clicked which will sort the spreadsheet\n\t * store. Additionally, set the reversed accessor store that will change the iteration order of the spreadsheet store.\n\t * @param heading - The heading to sort by\n\t */\n\tfunction setSortBy(heading) {\n\t\t// Update the current sorting mode\n\t\t$sortBy = heading;\n\n\t\t// Reverse the order if the direction is \"up\"\n\t\tdirection = !direction;\n\t\t$reversed = direction;\n\t}\n</script>\n\n<th on:click={() => setSortBy(name)}>\n\t{localize(`mcc.${name}`)}\n\t<i class=\"fas fa-sort{$sortBy !== name ? '' : direction ? '-up' : '-down'}\" />\n</th>\n\n<style>\n\tth {\n\t\twhite-space: nowrap;\n\t\tpadding: 1ch;\n\t\tborder-right: solid 1px rgba(0, 0, 0, 0.1);\n\t\tborder-bottom: solid 1px rgba(0, 0, 0, 0.1);\n\t\tcursor: pointer;\n\t\tfont-weight: normal;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: 0.5ch;\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: 0.5ch;\n\t\tborder-right: none;\n\t}\n\n\ti {\n\t\tmargin-left: 0.5ch;\n\t}\n</style>\n","<script>\n\timport { getContext } from \"svelte\";\n\n\timport Heading from \"./Heading.svelte\";\n\n\tconst { details } = getContext(\"spreadsheetStore\").stores;\n</script>\n\n<thead>\n\t{#key $details}\n\t\t<tr>\n\t\t\t<Heading name={\"title\"} />\n\t\t\t{#if $details}\n\t\t\t\t<Heading name={\"type\"} />\n\t\t\t\t<Heading name={\"id\"} />\n\t\t\t\t<Heading name={\"version\"} />\n\t\t\t\t<Heading name={\"status\"} />\n\t\t\t{/if}\n\t\t\t<Heading name={\"notes\"} />\n\t\t</tr>\n\t{/key}\n</thead>\n\n<style>\n\tthead {\n\t\tposition: sticky;\n\t\tbackground-color: var(--mcc-dark-color);\n        color: var(--mcc-text-light-color);\n\t\ttop: 0;\n\t\tz-index: 1;\n\t}\n\n\ttr {\n\t\ttransition: background-color 250ms;\n\t}\n\n\ttr:hover {\n\t\tfilter: drop-shadow(0 0 0 var(--mcc-dark-color));\n\t}\n</style>\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","import { TJSContextMenuImpl } from '@typhonjs-fvtt/svelte-standard/component';\r\n\r\nimport {\r\n   A11yHelper,\r\n   isIterable,\r\n   isObject,\r\n   isSvelteComponent }        from '@typhonjs-fvtt/runtime/svelte/util';\r\n\r\n/**\r\n * Provides and manages browser window wide context menu functionality. The best way to create a context menu is to\r\n * attach the source KeyboardEvent or MouseEvent / PointerEvent as data in {@link TJSContextMenu.create}. This allows\r\n * proper keyboard handling across browsers supporting the context menu key. A A11yFocusSource data object is generated\r\n * which allows tracking of the source element that triggered the context menu allowing focus to return to the source\r\n * when the context menu is closed. This A11yFocusSource object is also forwarded on through the `onPress` callback and\r\n * is intended to be supplied as `SvelteApplication` options particularly for modal dialogs allowing focus to return\r\n * to the original source after the modal dialog is closed.\r\n */\r\nexport class TJSContextMenu\r\n{\r\n   /**\r\n    * Stores any active context menu.\r\n    */\r\n   static #contextMenu = void 0;\r\n\r\n   /**\r\n    * Creates and manages a browser wide context menu. The best way to create the context menu is to pass in the source\r\n    * DOM event as it is processed for the location of the context menu to display. Likewise, a A11yFocusSource object\r\n    * is generated that allows focus to be returned to the source location. You may supply a default focus target as a\r\n    * fallback via `focusEl`.\r\n    *\r\n    * @param {object}      opts - Optional parameters.\r\n    *\r\n    * @param {string}      [opts.id] - A custom CSS ID to add to the menu. This allows CSS style targeting.\r\n    *\r\n    * @param {KeyboardEvent|MouseEvent}  [opts.event] - The source MouseEvent or KeyboardEvent.\r\n    *\r\n    * @param {number}      [opts.x] - X position override for the top / left of the menu.\r\n    *\r\n    * @param {number}      [opts.y] - Y position override for the top / left of the menu.\r\n    *\r\n    * @param {Iterable<TJSContextMenuItemData>} [opts.items] - Menu items to display.\r\n    *\r\n    * @param {boolean}     [opts.focusDebug] - When true the associated A11yFocusSource object will log focus target\r\n    *        data when applied.\r\n    *\r\n    * @param {HTMLElement|string} [opts.focusEl] - A specific HTMLElement or selector string as the default focus\r\n    *        target.\r\n    *\r\n    * @param {string}      [opts.keyCode='Enter'] - Key to select menu items.\r\n    *\r\n    * @param {Record<string, string>}  [opts.styles] - Optional inline styles to apply.\r\n    *\r\n    * @param {number}      [opts.zIndex=Number.MAX_SAFE_INTEGER - 100] - Z-index for context menu.\r\n    *\r\n    * @param {number}      [opts.duration] - Transition option for duration of transition.\r\n    *\r\n    * @param {Function}    [opts.easing] - Transition option for easing function.\r\n    */\r\n   static create({ id = '', event, x, y, items, focusDebug = false, focusEl, keyCode = 'Enter', styles,\r\n    zIndex = Number.MAX_SAFE_INTEGER - 100, duration = 200, easing, } = {})\r\n   {\r\n      if (this.#contextMenu !== void 0) { return; }\r\n\r\n      if (!event && (typeof x !== 'number' || typeof y !== 'number'))\r\n      {\r\n         throw new Error(`TJSContextMenu.create error: No event or absolute X / Y position not defined.`);\r\n      }\r\n\r\n      if (event !== void 0 && !(event instanceof KeyboardEvent) && !(event instanceof MouseEvent))\r\n      {\r\n         throw new TypeError(`TJSContextMenu.create error: 'event' is not a KeyboardEvent or MouseEvent.`);\r\n      }\r\n\r\n      const focusSource = A11yHelper.getFocusSource({ event, x, y, focusEl, debug: focusDebug });\r\n\r\n      // Create the new context menu with the last click x / y point.\r\n      this.#contextMenu = new TJSContextMenuImpl({\r\n         target: document.body,\r\n         intro: true,\r\n         props: {\r\n            id,\r\n            x: focusSource.x,\r\n            y: focusSource.y,\r\n            items: this.#processItems(items),\r\n            focusSource,\r\n            keyCode,\r\n            styles,\r\n            transitionOptions: { duration, easing },\r\n            zIndex\r\n         }\r\n      });\r\n\r\n      // Register an event listener to remove any active context menu if closed from a menu selection or pointer\r\n      // down event to `document.body`.\r\n      this.#contextMenu.$on('close', () => { this.#contextMenu = void 0; });\r\n   }\r\n\r\n   /**\r\n    * Processes menu item data for conditions and evaluating the type of menu item.\r\n    *\r\n    * @param {Iterable<TJSContextMenuItemData>} items - Menu item data.\r\n    *\r\n    * @returns {object[]} Processed menu items.\r\n    */\r\n   static #processItems(items)\r\n   {\r\n      if (!isIterable(items)) { throw new TypeError(`TJSContextMenu error: 'items' is not an iterable list.`); }\r\n\r\n      const tempList = items;\r\n      const tempItems = [];\r\n\r\n      let cntr = -1;\r\n\r\n      for (const item of tempList)\r\n      {\r\n         cntr++;\r\n         if (!isObject(item)) { throw new TypeError(`TJSContextMenu error: 'item[${cntr}]' is not an object.`); }\r\n\r\n         // Filter items for any condition that prevents display.\r\n         if (typeof item.condition === 'function' && !item.condition()) { continue; }\r\n         if (typeof item.condition === 'boolean' && !item.condition) { continue; }\r\n\r\n         let type;\r\n\r\n         if (isSvelteComponent(item.class)) { type = 'class'; }\r\n         else if (typeof item.icon === 'string') { type = 'icon'; }\r\n         else if (typeof item.image === 'string') { type = 'image'; }\r\n         else if (typeof item.separator === 'string')\r\n         {\r\n            if (item.separator !== 'hr')\r\n            {\r\n               throw new Error(\r\n                `TJSContextMenu error: 'item[${cntr}]' has unknown separator type; only 'hr' is currently supported.`);\r\n            }\r\n\r\n            type = 'separator-hr';\r\n         }\r\n\r\n         if (type === void 0) { throw new TypeError(`TJSContextMenu error: Unknown type for 'item[${cntr}]'.`); }\r\n\r\n         tempItems.push({ ...item, '#type': type });\r\n      }\r\n\r\n      return tempItems;\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} TJSContextMenuItemData - Defines a menu item entry. Depending on the item data that is passed\r\n * into the menu you can define 4 types of items: 'icon / label', 'image / label', 'class / Svelte component', and\r\n * 'separator / hr'. A single callback function `onPress` is supported.\r\n *\r\n * @property {(item: TJSContextMenuItemData, object) => void} [onPress] - A callback function that receives the selected\r\n * item data and an object containing the A11yFocusSource data that can be passed to any Application / particularly modal\r\n * dialogs returning focus when closed.\r\n *\r\n * @property {boolean|(() => boolean)} [condition] - If a boolean and false or a function that invoked returns a falsy value\r\n *           this item is not added.\r\n *\r\n * @property {Function} [class] - A Svelte component class.\r\n *\r\n * @property {object} [props] - An object passed on as props for any Svelte component.\r\n *\r\n *\r\n * @property {string} [icon] - A string containing icon classes.\r\n *\r\n *\r\n * @property {string} [image] - An image icon path.\r\n *\r\n * @property {string} [imageAlt] - An image 'alt' text description.\r\n *\r\n *\r\n * @property {string} [label] - A text string that is passed through localization.\r\n *\r\n * @property {'hr'} [separator] - A menu item separator; only 'hr' supported.\r\n */\r\n","<script>\n\timport { getContext, onMount, afterUpdate } from \"svelte\";\n\timport { flip } from \"svelte/animate\";\n\n\timport { TJSContextMenu } from \"@typhonjs-fvtt/svelte-standard/application\";\n\n\timport { statusData } from \"../../store/statusData.js\";\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\tconst { details } = spreadsheetStore.stores;\n\n\t/**\n\t * Show a context menu for the table row clicked\n\t * @param {MouseEvent} event\n\t * @param {string} id - Package ID\n\t * @param {boolean} official - Whether the package is on the official listing\n\t */\n\tfunction onContextMenu(event, id, official) {\n\t\tconst linkData = spreadsheetStore.getPackageLinks(id);\n\n\t\tif (linkData) {\n\t\t\tconst items = [];\n\n\t\t\tif (official) {\n\t\t\t\titems.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"mcc.packageListingURL\",\n\t\t\t\t\t\ticon: \"fas fa-external-link\",\n\t\t\t\t\t\tonPress: () => window.open(`https://foundryvtt.com/packages/${linkData.id}`, \"_blank\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"mcc.foundryHubURL\",\n\t\t\t\t\t\ticon: \"fas fa-external-link\",\n\t\t\t\t\t\timage: \"https://www.foundryvtt-hub.com/wp-content/uploads/2021/08/foundryhublogo4-verysmall.webp\",\n\t\t\t\t\t\tonPress: () => window.open(`https://www.foundryvtt-hub.com/package/${linkData.id}`, \"_blank\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"mcc.bazaarURL\",\n\t\t\t\t\t\ticon: \"fas fa-external-link\",\n\t\t\t\t\t\timage: \"https://forge-vtt.com/images/the-forge-logo-48x48.png\",\n\t\t\t\t\t\tonPress: () => window.open(`https://forge-vtt.com/bazaar/package/${linkData.id}`, \"_blank\"),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (linkData.url) {\n\t\t\t\titems.push({\n\t\t\t\t\tlabel: \"mcc.projectURL\",\n\t\t\t\t\ticon: \"fas fa-code\",\n\t\t\t\t\tonPress: () => window.open(linkData.url, \"_blank\"),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tTJSContextMenu.create({\n\t\t\t\tduration: 200,\n\t\t\t\tid: \"mmc-package-menu\",\n\t\t\t\tx: event.pageX,\n\t\t\t\ty: event.pageY,\n\t\t\t\titems,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the color for a given status\n\t * @param {string} status - Status\n\t * @returns {string} - Color in HSL format\n\t */\n\tfunction getColor(status) {\n\t\tconst { hsl } = statusData[status];\n\t\treturn `hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, 60%)`;\n\t}\n</script>\n\n<tbody>\n\t{#each [...$spreadsheetStore] as row (row.id)}\n\t\t<tr\n\t\t\tanimate:flip={{ duration: 250 }}\n\t\t\ton:contextmenu={(event) => onContextMenu(event, row.id, row.official)}\n\t\t\tstyle:background-color={getColor(row.status)}\n\t\t\ttitle={statusData[row.status].explanation}\n\t\t>\n\t\t\t<td>{row.title}</td>\n\t\t\t{#if $details}\n\t\t\t\t<td>{row.type}</td>\n\t\t\t\t<td>{row.id}</td>\n\t\t\t\t<td class=\"center\">{row.version}</td>\n\t\t\t\t<td class=\"center\">{row.status}</td>\n\t\t\t{/if}\n\t\t\t<td>{row.notes}</td>\n\t\t</tr>\n\t{/each}\n</tbody>\n\n<style lang=\"scss\">\n\ttbody {\n\t\ttr {\n\t\t\ttransition: background-color 250ms;\n\n\t\t\t&:hover {\n\t\t\t\tbox-shadow: inset 0 10px 10px -10px rgb(0 0 0 / 50%), inset 0 -10px 10px -10px rgb(0 0 0 / 50%);\n\t\t\t\tbackdrop-filter: brightness(1.2) saturate(1.2);\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\tpadding: 1ch;\n\t\t\tborder-right: solid 1px rgba(0, 0, 0, 0.1);\n\t\t\tborder-bottom: solid 1px rgba(0, 0, 0, 0.1);\n\t\t}\n\n\t\ttd:last-child {\n\t\t\tborder-right: none;\n\t\t}\n\t}\n\n\t.center {\n\t\ttext-align: center;\n\t}\n</style>\n","<script>\n\timport { getContext } from \"svelte\";\n\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n\timport SpreadsheetController from \"../../controller/SpreadsheetController.js\";\n\n\tconst spreadsheetStore = getContext(\"spreadsheetStore\");\n\n\tconst { filteredPercentage } = spreadsheetStore.stores;\n</script>\n\n<footer>\n\t<p>{localize(\"mcc.report.visible\")}: {$spreadsheetStore.index.length} / {$spreadsheetStore.data.length}</p>\n\t<p title={localize(\"mcc.percentageTooltip\")}>{localize(\"mcc.report.percentage\")}: {$filteredPercentage}%</p>\n\t<p>{SpreadsheetController.spreadsheetStatus}</p>\n\t<a href={`https://docs.google.com/spreadsheets/d/${SpreadsheetController.spreadsheetID}/pubhtml`}>\n\t\t{localize(\"mcc.source\")}\n\t\t<i class=\"fas fa-external-link-alt\" />\n\t</a>\n</footer>\n\n<style>\n\tfooter {\n\t\tmax-height: 2rem;\n\t\tmargin: 0 calc(1ch + 6px) 1ch 1ch;\n\t\tbackground-color: var(--mcc-dark-color);\n\t\tcolor: var(--mcc-text-light-color);\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tgap: 1ch;\n\t\tborder-bottom-left-radius: 0.5ch;\n\t\tborder-bottom-right-radius: 0.5ch;\n\t\twhite-space: nowrap;\n\t}\n\n\ta {\n\t\tcolor: var(--mcc-text-light-color);\n\t}\n</style>\n","<script>\n\timport { getContext } from \"svelte\";\n\n\timport { applyScrolltop } from \"@typhonjs-fvtt/runtime/svelte/action\";\n\n\timport Reminder from \"./Reminder.svelte\"\n\timport PieChart from \"../pie/PieChart.svelte\";\n\timport StickyHeader from \"./Controls.svelte\";\n\timport Header from \"./Header.svelte\";\n\timport Rows from \"./Rows.svelte\";\n\timport Footer from \"./Footer.svelte\";\n\n\tconst { scrollTop } = getContext(\"spreadsheetStore\").stores;\n\n\t/**\n\t * Handle CustomEvent from StickyHeader to smoothly scroll to the top.\n\t * @param {CustomEvent} event\n\t */\n\tfunction scrollSmooth(event) {\n\t\tevent.currentTarget.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n</script>\n\n<main use:applyScrolltop={scrollTop} on:scrollTop:smooth={scrollSmooth}>\n\t<Reminder />\n\t<PieChart />\n\t<StickyHeader />\n\t<div>\n\t\t<table>\n\t\t\t<Header />\n\t\t\t<Rows />\n\t\t</table>\n\t</div>\n</main>\n<Footer />\n\n<style>\n\tdiv {\n\t\tflex: 1;\n\t\tbackground: rgba(0, 0, 0, 0.1);\n\t}\n\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow-y: scroll;\n\t\toverflow-x: hidden;\n\t\tposition: relative;\n\t\tscrollbar-width: thin; /* For Firefox */\n\t\tcolor: var(--mcc-text-dark-color);\n\t\tpadding: 0 1ch;\n\t\tmargin-top: 1ch;\n\t}\n\n\ttable {\n\t\tflex: 1;\n\t\tmargin: 0;\n\t\tborder: none;\n\t\tbox-sizing: border-box;\n\t\tborder-collapse: separate;\n\t\tborder-spacing: 0;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n\timport { getContext, setContext } from \"svelte\";\n\n\timport { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\n\timport { debounce } from \"@typhonjs-fvtt/runtime/svelte/util\";\n\n\timport { SpreadsheetStore } from \"../store/spreadsheetStore.js\";\n\timport { mccSessionStorage } from \"../store/mccSessionStorage.js\";\n\n\timport Loading from \"./init/Loading.svelte\";\n\timport Error from \"./init/Error.svelte\";\n\timport Table from \"./table/Table.svelte\";\n\n\tconst spreadsheetStore = new SpreadsheetStore();\n\tsetContext(\"spreadsheetStore\", spreadsheetStore);\n\n\texport let elementRoot;\n\n\tconst { application } = getContext(\"#external\");\n\n\t// Get a store that is synchronized with session storage\n\tconst stateStore = mccSessionStorage.getStore(`mcc.appState`);\n\n\t// Application position store reference. Stores need to be a top level variable to be accessible for reactivity.\n\tconst position = application.position;\n\n\t// A debounced callback that serializes application state after 500-millisecond delay.\n\tconst storePosition = debounce(() => ($stateStore = application.state.get()), 500);\n\n\t// Reactive statement to invoke debounce callback on Position changes.\n\t$: storePosition($position);\n\n\t// Reload when the version is changed\n\tconst { version } = spreadsheetStore.stores;\n</script>\n\n<ApplicationShell bind:elementRoot>\n\t{#key $version}\n\t\t{#await spreadsheetStore.initialize()}\n\t\t\t<Loading />\n\t\t{:then}\n\t\t\t<Table />\n\t\t{:catch error}\n\t\t\t<Error {error} />\n\t\t{/await}\n\t{/key}\n</ApplicationShell>\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\n\nimport ModuleCompatibilityCheckerShell from \"./ModuleCompatibilityCheckerShell.svelte\";\n\nexport class ModuleCompatibilityChecker extends SvelteApplication {\n\t/** @inheritDoc */\n\tconstructor(options = {}) {\n\t\tsuper(options);\n\n\t\ttry {\n\t\t\t// Attempt to parse session storage item and set application state\n\t\t\tthis.state.set(JSON.parse(sessionStorage.getItem(\"mcc.appState\")));\n\t\t} catch (err) {\n\t\t\t//\n\t\t}\n\t}\n\n\t/** @override */\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(super.defaultOptions, {\n\t\t\tid: \"mcc\",\n\t\t\ttitle: \"mcc.appTitle\",\n\t\t\tclasses: [\"mcc\"],\n\t\t\twidth: Math.max(window.innerWidth * (2 / 3), 800),\n\t\t\theight: Math.max(window.innerHeight * (2 / 3), 580),\n\t\t\tresizable: true,\n\t\t\tminWidth: 800,\n\t\t\tminHeight: 580,\n\n\t\t\tsvelte: {\n\t\t\t\tclass: ModuleCompatibilityCheckerShell,\n\t\t\t\ttarget: document.body,\n\t\t\t},\n\t\t});\n\t}\n}\n\nglobalThis.ModuleCompatibilityChecker = ModuleCompatibilityChecker;\n","<script>\n\timport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\n\timport { ModuleCompatibilityChecker } from \"../ModuleCompatibilityChecker.js\";\n\n\tconst mccMainApp = new ModuleCompatibilityChecker();\n</script>\n\n<button type=\"button\" on:click={() => mccMainApp.render(true, { focus: true })}>\n\t{localize(\"mcc.button\")}\n</button>\n","<script>\nimport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<span class=\"tag patreon\" on:click={() => window.open(\"https://www.patreon.com/bePatron?u=15896855\", \"_blank\")}>\n\t<i class=\"fab fa-patreon\" />\n\t{localize(\"mcc.patreon\")}\n</span>\n\n<style>\n\t.tag.patreon {\n\t\tbackground-color: hsl(357, 100%, 63%);\n\t\ttransition: all 300ms cubic-bezier(0.19, 1, 0.22, 1) 0s;\n\t\tcursor: pointer;\n\t}\n\t.tag.patreon:active {\n\t\tbackground-color: hsl(356, 100%, 58%);\n\t}\n\t.tag.patreon:hover {\n\t\tbackground-color: hsl(356, 100%, 60%);\n\t}\n</style>\n","import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\n\nimport SpreadsheetController from \"./controller/SpreadsheetController.js\";\nimport { statusData } from \"./store/statusData.js\";\n\nimport ModuleManagementButton from \"./view/external/ModuleManagementButton.svelte\";\nimport PatreonButton from \"./view/external/PatreonButton.svelte\";\n\nimport \"../styles/init.scss\";\n\nHooks.on(\"renderModuleManagement\", (app, [html]) => {\n\tapplyModuleManagementColors(app, html);\n\n\t// Add a Patreon button next to this module\n\tnew PatreonButton({\n\t\ttarget: html.querySelector(\":is([data-module-id='mcc'], [data-module-name='mcc']) .package-overview\"),\n\t\tanchor: html.querySelector(\":is([data-module-id='mcc'], [data-module-name='mcc']) .tag\"),\n\t});\n\n\t// Add a button to the bottom of the module management window\n\tlet footer = html.querySelector(\"footer\");\n\tif (!footer) {\n\t\tfooter = document.createElement(\"footer\");\n\t\tfooter.classList.add(\"flexrow\");\n\t\thtml.querySelector(\"form\").append(footer);\n\t}\n\tnew ModuleManagementButton({\n\t\ttarget: footer,\n\t\tanchor: html.querySelector(\"[name='deactivate']\"),\n\t});\n\n\tapp.setPosition();\n});\n\n/**\n * Apply the status colors to the module management app\n * @param {ModuleManagement} app\n * @param {HTMLElement} html\n */\nasync function applyModuleManagementColors(app, html) {\n\thtml.querySelector(\".notes\").textContent += localize(\"mcc.moduleManagementColorsExplanation\");\n\n\t// Resize the app to fit the new contents\n\tapp.setPosition();\n\n\tconst version = (await SpreadsheetController.getVersions()).at(-1);\n\tconst spreadsheet = await SpreadsheetController.getSpreadsheet(version);\n\n\thtml.querySelectorAll(\"#module-list :is([data-module-id], [data-module-name])\").forEach(el => {\n\t\tconst module = game.modules.get(el.dataset.moduleId ?? el.dataset.moduleName);\n\t\tconst { status } = SpreadsheetController.lookupCompatibility(spreadsheet, module);\n\t\tconst { hsl } = statusData[status];\n\t\tel.style.backgroundColor = `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, 15%)`;\n\t});\n}\n"],"names":["version","noop","callback","now","descriptors","element","text","active","hash","uid","from","to","detach","init","promise","update","index","block","current_component","create_each_block","insert","bind","instance","create_fragment","isObject","document","resolve","children","debounce","writable","set","subscribe","run","h1","h2","storage","readable","writable$2","get","derived","EPSILON","constants.animateKeys","constants.relativeRegex","interpolate","lerp","duration","ease","options","linear","constants.transformOriginDefault","constants.transformKeysBitwise","constants.transformKeys","s_VALIDATION_DATA","constants.transformOrigins","parent","constants.numericDefaults","constants.setNumericDefaults","draggable","s_STYLE_KEY","cssVariables","ctx","create_if_block","booleanStore","dragDefault","storeResizing","debounce$1","radius","args","g","map","color","_descriptors","flip","defaults","loop","getComputedStyle","draw","scales","elements","names","i","validIndex","registry","inRange","layouts","positions","plugins","animationOptions","listener","alpha","skip","fill","round","statuses","dispatch","found","attr","TransformError","scrollSmooth","sortBy"],"mappings":"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"}